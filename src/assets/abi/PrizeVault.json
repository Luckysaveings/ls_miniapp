{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "name_",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "symbol_",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "yieldVault_",
          "type": "address",
          "internalType": "contract IERC4626"
        },
        {
          "name": "prizePool_",
          "type": "address",
          "internalType": "contract PrizePool"
        },
        {
          "name": "claimer_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "yieldFeeRecipient_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "yieldFeePercentage_",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "yieldBuffer_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "owner_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "DOMAIN_SEPARATOR",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "FEE_PRECISION",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "HOOK_GAS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint24",
          "internalType": "uint24"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "HOOK_RETURN_DATA_LIMIT",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_YIELD_FEE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allowance",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        {
          "name": "spender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "asset",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "availableYieldBalance",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        {
          "name": "_account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claimOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimPrize",
      "inputs": [
        {
          "name": "_winner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_tier",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "_prizeIndex",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_reward",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "_rewardRecipient",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimYieldFeeShares",
      "inputs": [
        {
          "name": "_shares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimer",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "convertToAssets",
      "inputs": [
        {
          "name": "_shares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "convertToShares",
      "inputs": [
        {
          "name": "_assets",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "currentYieldBuffer",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decimals",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decreaseAllowance",
      "inputs": [
        {
          "name": "spender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        {
          "name": "_assets",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_receiver",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "depositWithPermit",
      "inputs": [
        {
          "name": "_assets",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_deadline",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_v",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "eip712Domain",
      "inputs": [],
      "outputs": [
        {
          "name": "fields",
          "type": "bytes1",
          "internalType": "bytes1"
        },
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "version",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "chainId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "verifyingContract",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "salt",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "extensions",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getHooks",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct PrizeHooks",
          "components": [
            {
              "name": "useBeforeClaimPrize",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "useAfterClaimPrize",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "implementation",
              "type": "address",
              "internalType": "contract IPrizeHooks"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "increaseAllowance",
      "inputs": [
        {
          "name": "spender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isLiquidationPair",
      "inputs": [
        {
          "name": "_tokenOut",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_liquidationPair",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "liquidatableBalanceOf",
      "inputs": [
        {
          "name": "_tokenOut",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "liquidationPair",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxDeposit",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxMint",
      "inputs": [
        {
          "name": "_owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxRedeem",
      "inputs": [
        {
          "name": "_owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxWithdraw",
      "inputs": [
        {
          "name": "_owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        {
          "name": "_shares",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_receiver",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nonces",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pendingOwner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "permit",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "deadline",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "v",
          "type": "uint8",
          "internalType": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "previewDeposit",
      "inputs": [
        {
          "name": "_assets",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "previewMint",
      "inputs": [
        {
          "name": "_shares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "previewRedeem",
      "inputs": [
        {
          "name": "_shares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "previewWithdraw",
      "inputs": [
        {
          "name": "_assets",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "prizePool",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract PrizePool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "redeem",
      "inputs": [
        {
          "name": "_shares",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_receiver",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_minAssets",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "redeem",
      "inputs": [
        {
          "name": "_shares",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_receiver",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setClaimer",
      "inputs": [
        {
          "name": "_claimer",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setHooks",
      "inputs": [
        {
          "name": "hooks",
          "type": "tuple",
          "internalType": "struct PrizeHooks",
          "components": [
            {
              "name": "useBeforeClaimPrize",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "useAfterClaimPrize",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "implementation",
              "type": "address",
              "internalType": "contract IPrizeHooks"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setLiquidationPair",
      "inputs": [
        {
          "name": "_liquidationPair",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setYieldFeePercentage",
      "inputs": [
        {
          "name": "_yieldFeePercentage",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setYieldFeeRecipient",
      "inputs": [
        {
          "name": "_yieldFeeRecipient",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetOf",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalAssets",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalDebt",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalPreciseAssets",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalSupply",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalYieldBalance",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transfer",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferTokensOut",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_receiver",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_tokenOut",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amountOut",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "twabController",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract TwabController"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "verifyTokensIn",
      "inputs": [
        {
          "name": "_tokenIn",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amountIn",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        {
          "name": "_assets",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_receiver",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_maxShares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        {
          "name": "_assets",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_receiver",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "yieldBuffer",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "yieldFeeBalance",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "yieldFeePercentage",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "yieldFeeRecipient",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "yieldVault",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IERC4626"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClaimYieldFeeShares",
      "inputs": [
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ClaimerSet",
      "inputs": [
        {
          "name": "claimer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Deposit",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "assets",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "EIP712DomainChanged",
      "inputs": [],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "LiquidationPairSet",
      "inputs": [
        {
          "name": "tokenOut",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "liquidationPair",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipOffered",
      "inputs": [
        {
          "name": "pendingOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetHooks",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "hooks",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct PrizeHooks",
          "components": [
            {
              "name": "useBeforeClaimPrize",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "useAfterClaimPrize",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "implementation",
              "type": "address",
              "internalType": "contract IPrizeHooks"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransferYieldOut",
      "inputs": [
        {
          "name": "liquidationPair",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenOut",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amountOut",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "yieldFee",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Withdraw",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "receiver",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "assets",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "shares",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "YieldFeePercentageSet",
      "inputs": [
        {
          "name": "yieldFeePercentage",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "YieldFeeRecipientSet",
      "inputs": [
        {
          "name": "yieldFeeRecipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "BurnZeroShares",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CallerNotClaimer",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "claimer",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "CallerNotLP",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "liquidationPair",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "CallerNotYieldFeeRecipient",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "yieldFeeRecipient",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ClaimRecipientZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ClaimerZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "DepositZeroAssets",
      "inputs": []
    },
    {
      "type": "error",
      "name": "FailedToGetAssetDecimals",
      "inputs": [
        {
          "name": "asset",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidShortString",
      "inputs": []
    },
    {
      "type": "error",
      "name": "LPZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "LiquidationAmountOutZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "LiquidationExceedsAvailable",
      "inputs": [
        {
          "name": "totalToWithdraw",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "availableYield",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "LiquidationTokenInNotPrizeToken",
      "inputs": [
        {
          "name": "tokenIn",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "prizeToken",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "LiquidationTokenOutNotSupported",
      "inputs": [
        {
          "name": "tokenOut",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "LossyDeposit",
      "inputs": [
        {
          "name": "totalAssets",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "totalSupply",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "MaxSharesExceeded",
      "inputs": [
        {
          "name": "shares",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "maxShares",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "MinAssetsNotReached",
      "inputs": [
        {
          "name": "assets",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "minAssets",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "MintLimitExceeded",
      "inputs": [
        {
          "name": "excess",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "MintZeroShares",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OwnerZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "PermitCallerNotOwner",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "PrizePoolZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ReturnDataOverLimit",
      "inputs": [
        {
          "name": "returnDataSize",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "hookDataLimit",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "SharesExceedsYieldFeeBalance",
      "inputs": [
        {
          "name": "shares",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "yieldFeeBalance",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "StringTooLong",
      "inputs": [
        {
          "name": "str",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "TwabControllerZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "WithdrawZeroAssets",
      "inputs": []
    },
    {
      "type": "error",
      "name": "YieldFeePercentageExceedsMax",
      "inputs": [
        {
          "name": "yieldFeePercentage",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "maxYieldFeePercentage",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "YieldVaultZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ZeroTotalAssets",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "4951:48156:155:-:0;;;16967:1033;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17352:6;17322:10;17334:8;17267:5;17274:7;17283:10;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2188:5:157;1856:4:64;3178:431:81;;;;;;;;;;;;;;;;;2160:5:157;2167:7;2054:5:62;2046;:13;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;:::i;:::-;;1980:113;;3251:45:81;3282:13;3251:4;:30;;;;:45;;;;:::i;:::-;3243:53;;;;;;3317:51;3351:16;3317:7;:33;;;;:51;;;;:::i;:::-;3306:62;;;;;;3408:4;3392:22;;;;;;3378:36;;;;;;3457:7;3441:25;;;;;;3424:42;;;;;;3494:13;3477:30;;;;;;3542:23;:21;;;:23;;:::i;:::-;3517:48;;;;;;3597:4;3575:27;;;;;;;;;;3178:431;;1817:52:64;2231:15:157::2;2209:38;;2217:1;2209:38;;::::0;2205:78:::2;;2256:27;;;;;;;;;;;;;;2205:78;2310:15;2293:32;;;;;;;;::::0;::::2;2036:296:::0;;;3733:1:158;3702:33;;3710:10;3702:33;;;3698:68;;3744:22;;;;;;;;;;;;;;3698:68;3788:10;3776:22;;;;;;;;;;3808:21;3820:8;3808:11;;;:21;;:::i;:::-;3636:200;;1637:24:87;1647:13;1637:9;;;:24;;:::i;:::-;1592:76;17406:1:155::3;17374:34;;17382:11;17374:34;;::::0;17370:70:::3;;17417:23;;;;;;;;;;;;;;17370:70;17472:1;17454:20;;:6;:20;;::::0;17450:51:::3;;17483:18;;;;;;;;;;;;;;17450:51;17512:13;17535:11;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17512:43;;17566:12;17580:19:::0;17603:28:::3;17624:6;17603:20;;;:28;;:::i;:::-;17565:66;;;;17645:7;17641:152;;;17690:13;17668:35;;;;;;;;::::0;::::3;17641:152;;;17774:6;17741:41;;;;;;;;;;;:::i;:::-;;;;;;;;17641:152;17811:6;17802:15;;;;;;;;::::0;::::3;17841:11;17828:24;;;;;;;;::::0;::::3;17876:12;17862:26;;;;::::0;::::3;17899:41;17921:18;17899:21;;;:41;;:::i;:::-;17950:43;17973:19;17950:22;;;:43;;:::i;:::-;17360:640;;;16967:1033:::0;;;;;;;;;4951:48156;;2895:341:77;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;;;:20;;:::i;:::-;3058:27;;;;3014:216;3157:5;3116:32;3142:5;3116:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1371:66;3200:18;;3176:43;;2895:341;;;;;:::o;3963:180:81:-;4018:7;1929:95;4077:11;;4090:14;;4106:13;4129:4;4054:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;:::o;6628:183:158:-;6710:1;6690:22;;:8;:22;;;6686:55;;6721:20;;;;;;;;;;;;;;6686:55;6761:8;6751:7;;:18;;;;;;;;;;;;;;;;;;6795:8;6784:20;;;;;;;;;;;;6628:183;:::o;3459:174:87:-;3515:17;3535:6;;;;;;;;;;;3515:26;;3560:9;3551:6;;:18;;;;;;;;;;;;;;;;;;3616:9;3584:42;;3605:9;3584:42;;;;;;;;;;;;3505:128;3459:174;:::o;40437:547:155:-;40505:4;40511:5;40529:12;40543:28;40583:6;40575:26;;40638:32;;;40615:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40575:106;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40528:153;;;;40695:7;:39;;;;;40732:2;40706:15;:22;:28;;40695:39;40691:260;;;40750:24;40788:15;40777:38;;;;;;;;;;;;:::i;:::-;40750:65;;40853:15;40833:35;;:16;:35;40829:112;;40896:4;40908:16;40888:38;;;;;;;;;40829:112;40736:215;40691:260;40968:5;40975:1;40960:17;;;;;;40437:547;;;;:::o;52926:178::-;53024:18;53004:17;;:38;;;;;;;;;;;;;;;;;;53078:18;53057:40;;;;;;;;;;;;52926:178;:::o;52429:329::-;5795:3;52512:35;;:19;:35;;;52508:137;;;52599:19;5795:3;52570:64;;;;;;;;;;;;:::i;:::-;;;;;;;;52508:137;52675:19;52654:18;;:40;;;;;;;;;;;;;;;;;;52709:42;52731:19;52709:42;;;;;;:::i;:::-;;;;;;;;52429:329;:::o;1689:286:77:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;;;;;;;;;;:::i;:::-;;;;;;;;1817:72;1955:4;:11;1946:4;1938:13;;;:::i;:::-;1930:22;;:36;1922:45;;1898:70;;;1689:286;;;:::o;3310:202:78:-;3378:20;3486:10;3476:20;;3310:202;;;:::o;7:75:278:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:126::-;2714:7;2754:42;2747:5;2743:54;2732:65;;2677:126;;;:::o;2809:96::-;2846:7;2875:24;2893:5;2875:24;:::i;:::-;2864:35;;2809:96;;;:::o;2911:114::-;2966:7;2995:24;3013:5;2995:24;:::i;:::-;2984:35;;2911:114;;;:::o;3031:158::-;3122:42;3158:5;3122:42;:::i;:::-;3115:5;3112:53;3102:81;;3179:1;3176;3169:12;3102:81;3031:158;:::o;3195:179::-;3270:5;3301:6;3295:13;3286:22;;3317:51;3362:5;3317:51;:::i;:::-;3195:179;;;;:::o;3380:115::-;3436:7;3465:24;3483:5;3465:24;:::i;:::-;3454:35;;3380:115;;;:::o;3501:160::-;3593:43;3630:5;3593:43;:::i;:::-;3586:5;3583:54;3573:82;;3651:1;3648;3641:12;3573:82;3501:160;:::o;3667:181::-;3743:5;3774:6;3768:13;3759:22;;3790:52;3836:5;3790:52;:::i;:::-;3667:181;;;;:::o;3854:122::-;3927:24;3945:5;3927:24;:::i;:::-;3920:5;3917:35;3907:63;;3966:1;3963;3956:12;3907:63;3854:122;:::o;3982:143::-;4039:5;4070:6;4064:13;4055:22;;4086:33;4113:5;4086:33;:::i;:::-;3982:143;;;;:::o;4131:93::-;4167:7;4207:10;4200:5;4196:22;4185:33;;4131:93;;;:::o;4230:120::-;4302:23;4319:5;4302:23;:::i;:::-;4295:5;4292:34;4282:62;;4340:1;4337;4330:12;4282:62;4230:120;:::o;4356:141::-;4412:5;4443:6;4437:13;4428:22;;4459:32;4485:5;4459:32;:::i;:::-;4356:141;;;;:::o;4503:77::-;4540:7;4569:5;4558:16;;4503:77;;;:::o;4586:122::-;4659:24;4677:5;4659:24;:::i;:::-;4652:5;4649:35;4639:63;;4698:1;4695;4688:12;4639:63;4586:122;:::o;4714:143::-;4771:5;4802:6;4796:13;4787:22;;4818:33;4845:5;4818:33;:::i;:::-;4714:143;;;;:::o;4863:2023::-;5061:6;5069;5077;5085;5093;5101;5109;5117;5125;5174:3;5162:9;5153:7;5149:23;5145:33;5142:120;;;5181:79;;:::i;:::-;5142:120;5322:1;5311:9;5307:17;5301:24;5352:18;5344:6;5341:30;5338:117;;;5374:79;;:::i;:::-;5338:117;5479:74;5545:7;5536:6;5525:9;5521:22;5479:74;:::i;:::-;5469:84;;5272:291;5623:2;5612:9;5608:18;5602:25;5654:18;5646:6;5643:30;5640:117;;;5676:79;;:::i;:::-;5640:117;5781:74;5847:7;5838:6;5827:9;5823:22;5781:74;:::i;:::-;5771:84;;5573:292;5904:2;5930:82;6004:7;5995:6;5984:9;5980:22;5930:82;:::i;:::-;5920:92;;5875:147;6061:2;6087:83;6162:7;6153:6;6142:9;6138:22;6087:83;:::i;:::-;6077:93;;6032:148;6219:3;6246:64;6302:7;6293:6;6282:9;6278:22;6246:64;:::i;:::-;6236:74;;6190:130;6359:3;6386:64;6442:7;6433:6;6422:9;6418:22;6386:64;:::i;:::-;6376:74;;6330:130;6499:3;6526:63;6581:7;6572:6;6561:9;6557:22;6526:63;:::i;:::-;6516:73;;6470:129;6638:3;6665:64;6721:7;6712:6;6701:9;6697:22;6665:64;:::i;:::-;6655:74;;6609:130;6778:3;6805:64;6861:7;6852:6;6841:9;6837:22;6805:64;:::i;:::-;6795:74;;6749:130;4863:2023;;;;;;;;;;;:::o;6892:120::-;6953:7;6982:24;7000:5;6982:24;:::i;:::-;6971:35;;6892:120;;;:::o;7018:170::-;7115:48;7157:5;7115:48;:::i;:::-;7108:5;7105:59;7095:87;;7178:1;7175;7168:12;7095:87;7018:170;:::o;7194:191::-;7275:5;7306:6;7300:13;7291:22;;7322:57;7373:5;7322:57;:::i;:::-;7194:191;;;;:::o;7391:399::-;7485:6;7534:2;7522:9;7513:7;7509:23;7505:32;7502:119;;;7540:79;;:::i;:::-;7502:119;7660:1;7685:88;7765:7;7756:6;7745:9;7741:22;7685:88;:::i;:::-;7675:98;;7631:152;7391:399;;;;:::o;7796:99::-;7848:6;7882:5;7876:12;7866:22;;7796:99;;;:::o;7901:180::-;7949:77;7946:1;7939:88;8046:4;8043:1;8036:15;8070:4;8067:1;8060:15;8087:320;8131:6;8168:1;8162:4;8158:12;8148:22;;8215:1;8209:4;8205:12;8236:18;8226:81;;8292:4;8284:6;8280:17;8270:27;;8226:81;8354:2;8346:6;8343:14;8323:18;8320:38;8317:84;;8373:18;;:::i;:::-;8317:84;8138:269;8087:320;;;:::o;8413:141::-;8462:4;8485:3;8477:11;;8508:3;8505:1;8498:14;8542:4;8539:1;8529:18;8521:26;;8413:141;;;:::o;8560:93::-;8597:6;8644:2;8639;8632:5;8628:14;8624:23;8614:33;;8560:93;;;:::o;8659:107::-;8703:8;8753:5;8747:4;8743:16;8722:37;;8659:107;;;;:::o;8772:393::-;8841:6;8891:1;8879:10;8875:18;8914:97;8944:66;8933:9;8914:97;:::i;:::-;9032:39;9062:8;9051:9;9032:39;:::i;:::-;9020:51;;9104:4;9100:9;9093:5;9089:21;9080:30;;9153:4;9143:8;9139:19;9132:5;9129:30;9119:40;;8848:317;;8772:393;;;;;:::o;9171:60::-;9199:3;9220:5;9213:12;;9171:60;;;:::o;9237:142::-;9287:9;9320:53;9338:34;9347:24;9365:5;9347:24;:::i;:::-;9338:34;:::i;:::-;9320:53;:::i;:::-;9307:66;;9237:142;;;:::o;9385:75::-;9428:3;9449:5;9442:12;;9385:75;;;:::o;9466:269::-;9576:39;9607:7;9576:39;:::i;:::-;9637:91;9686:41;9710:16;9686:41;:::i;:::-;9678:6;9671:4;9665:11;9637:91;:::i;:::-;9631:4;9624:105;9542:193;9466:269;;;:::o;9741:73::-;9786:3;9741:73;:::o;9820:189::-;9897:32;;:::i;:::-;9938:65;9996:6;9988;9982:4;9938:65;:::i;:::-;9873:136;9820:189;;:::o;10015:186::-;10075:120;10092:3;10085:5;10082:14;10075:120;;;10146:39;10183:1;10176:5;10146:39;:::i;:::-;10119:1;10112:5;10108:13;10099:22;;10075:120;;;10015:186;;:::o;10207:543::-;10308:2;10303:3;10300:11;10297:446;;;10342:38;10374:5;10342:38;:::i;:::-;10426:29;10444:10;10426:29;:::i;:::-;10416:8;10412:44;10609:2;10597:10;10594:18;10591:49;;;10630:8;10615:23;;10591:49;10653:80;10709:22;10727:3;10709:22;:::i;:::-;10699:8;10695:37;10682:11;10653:80;:::i;:::-;10312:431;;10297:446;10207:543;;;:::o;10756:117::-;10810:8;10860:5;10854:4;10850:16;10829:37;;10756:117;;;;:::o;10879:169::-;10923:6;10956:51;11004:1;11000:6;10992:5;10989:1;10985:13;10956:51;:::i;:::-;10952:56;11037:4;11031;11027:15;11017:25;;10930:118;10879:169;;;;:::o;11053:295::-;11129:4;11275:29;11300:3;11294:4;11275:29;:::i;:::-;11267:37;;11337:3;11334:1;11330:11;11324:4;11321:21;11313:29;;11053:295;;;;:::o;11353:1395::-;11470:37;11503:3;11470:37;:::i;:::-;11572:18;11564:6;11561:30;11558:56;;;11594:18;;:::i;:::-;11558:56;11638:38;11670:4;11664:11;11638:38;:::i;:::-;11723:67;11783:6;11775;11769:4;11723:67;:::i;:::-;11817:1;11841:4;11828:17;;11873:2;11865:6;11862:14;11890:1;11885:618;;;;12547:1;12564:6;12561:77;;;12613:9;12608:3;12604:19;12598:26;12589:35;;12561:77;12664:67;12724:6;12717:5;12664:67;:::i;:::-;12658:4;12651:81;12520:222;11855:887;;11885:618;11937:4;11933:9;11925:6;11921:22;11971:37;12003:4;11971:37;:::i;:::-;12030:1;12044:208;12058:7;12055:1;12052:14;12044:208;;;12137:9;12132:3;12128:19;12122:26;12114:6;12107:42;12188:1;12180:6;12176:14;12166:24;;12235:2;12224:9;12220:18;12207:31;;12081:4;12078:1;12074:12;12069:17;;12044:208;;;12280:6;12271:7;12268:19;12265:179;;;12338:9;12333:3;12329:19;12323:26;12381:48;12423:4;12415:6;12411:17;12400:9;12381:48;:::i;:::-;12373:6;12366:64;12288:156;12265:179;12490:1;12486;12478:6;12474:14;12470:22;12464:4;12457:36;11892:611;;;11855:887;;11445:1303;;;11353:1395;;:::o;12754:351::-;12824:6;12873:2;12861:9;12852:7;12848:23;12844:32;12841:119;;;12879:79;;:::i;:::-;12841:119;12999:1;13024:64;13080:7;13071:6;13060:9;13056:22;13024:64;:::i;:::-;13014:74;;12970:128;12754:351;;;;:::o;13111:118::-;13198:24;13216:5;13198:24;:::i;:::-;13193:3;13186:37;13111:118;;:::o;13235:222::-;13328:4;13366:2;13355:9;13351:18;13343:26;;13379:71;13447:1;13436:9;13432:17;13423:6;13379:71;:::i;:::-;13235:222;;;;:::o;13463:77::-;13500:7;13529:5;13518:16;;13463:77;;;:::o;13546:118::-;13633:24;13651:5;13633:24;:::i;:::-;13628:3;13621:37;13546:118;;:::o;13670:::-;13757:24;13775:5;13757:24;:::i;:::-;13752:3;13745:37;13670:118;;:::o;13794:664::-;13999:4;14037:3;14026:9;14022:19;14014:27;;14051:71;14119:1;14108:9;14104:17;14095:6;14051:71;:::i;:::-;14132:72;14200:2;14189:9;14185:18;14176:6;14132:72;:::i;:::-;14214;14282:2;14271:9;14267:18;14258:6;14214:72;:::i;:::-;14296;14364:2;14353:9;14349:18;14340:6;14296:72;:::i;:::-;14378:73;14446:3;14435:9;14431:19;14422:6;14378:73;:::i;:::-;13794:664;;;;;;;;:::o;14464:98::-;14515:6;14549:5;14543:12;14533:22;;14464:98;;;:::o;14568:147::-;14669:11;14706:3;14691:18;;14568:147;;;;:::o;14721:386::-;14825:3;14853:38;14885:5;14853:38;:::i;:::-;14907:88;14988:6;14983:3;14907:88;:::i;:::-;14900:95;;15004:65;15062:6;15057:3;15050:4;15043:5;15039:16;15004:65;:::i;:::-;15094:6;15089:3;15085:16;15078:23;;14829:278;14721:386;;;;:::o;15113:271::-;15243:3;15265:93;15354:3;15345:6;15265:93;:::i;:::-;15258:100;;15375:3;15368:10;;15113:271;;;;:::o;15390:351::-;15460:6;15509:2;15497:9;15488:7;15484:23;15480:32;15477:119;;;15515:79;;:::i;:::-;15477:119;15635:1;15660:64;15716:7;15707:6;15696:9;15692:22;15660:64;:::i;:::-;15650:74;;15606:128;15390:351;;;;:::o;15747:140::-;15796:9;15829:52;15847:33;15856:23;15873:5;15856:23;:::i;:::-;15847:33;:::i;:::-;15829:52;:::i;:::-;15816:65;;15747:140;;;:::o;15893:129::-;15979:36;16009:5;15979:36;:::i;:::-;15974:3;15967:49;15893:129;;:::o;16028:328::-;16147:4;16185:2;16174:9;16170:18;16162:26;;16198:70;16265:1;16254:9;16250:17;16241:6;16198:70;:::i;:::-;16278:71;16345:2;16334:9;16330:18;16321:6;16278:71;:::i;:::-;16028:328;;;;;:::o;16362:220::-;16454:4;16492:2;16481:9;16477:18;16469:26;;16505:70;16572:1;16561:9;16557:17;16548:6;16505:70;:::i;:::-;16362:220;;;;:::o;16588:169::-;16672:11;16706:6;16701:3;16694:19;16746:4;16741:3;16737:14;16722:29;;16588:169;;;;:::o;16763:377::-;16851:3;16879:39;16912:5;16879:39;:::i;:::-;16934:71;16998:6;16993:3;16934:71;:::i;:::-;16927:78;;17014:65;17072:6;17067:3;17060:4;17053:5;17049:16;17014:65;:::i;:::-;17104:29;17126:6;17104:29;:::i;:::-;17099:3;17095:39;17088:46;;16855:285;16763:377;;;;:::o;17146:313::-;17259:4;17297:2;17286:9;17282:18;17274:26;;17346:9;17340:4;17336:20;17332:1;17321:9;17317:17;17310:47;17374:78;17447:4;17438:6;17374:78;:::i;:::-;17366:86;;17146:313;;;;:::o;17465:116::-;17516:4;17539:3;17531:11;;17569:4;17564:3;17560:14;17552:22;;17465:116;;;:::o;17587:154::-;17630:11;17666:29;17690:3;17684:10;17666:29;:::i;:::-;17729:5;17705:29;;17642:99;17587:154;;;:::o;17747:594::-;17831:5;17862:38;17894:5;17862:38;:::i;:::-;17925:5;17952:40;17986:5;17952:40;:::i;:::-;17940:52;;18011:35;18037:8;18011:35;:::i;:::-;18002:44;;18070:2;18062:6;18059:14;18056:278;;;18141:169;18226:66;18196:6;18192:2;18188:15;18185:1;18181:23;18141:169;:::i;:::-;18118:5;18097:227;18088:236;;18056:278;17837:504;;17747:594;;;:::o;4951:48156:155:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19642:171:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24795:347:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32102:146;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8075:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2775:142:157;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38303:246:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5756:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32382:354;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;39072:278:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4266:2021:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18235:123:155;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33032:367;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2836:113:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18594:88:155;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1136:41:158;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20629:921:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31257:179;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25177:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3136:129:87;;;:::i;:::-;;27492:877:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;39796:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8787:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25386:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38143:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:178:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2497:94:87;;;:::i;:::-;;1762:36:158;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;35724:1895:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2603:126:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5021:633:81;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1803:85:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25649:222:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8661:30:155;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29819:392;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28981:394;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8192:36:155;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1280:46:157;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33804:1751:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24508:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25906:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26226:281;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21751:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19331:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1111:139:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;37664:434:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;38826:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22139:576;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1641:51:158;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1845:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31777:138:155;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1923:626:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22994:1245:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;868:116:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8435:32:155;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2003:101:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;39554:138:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5359:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8526:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24274:199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2740:234:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30572:106:155;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19017:174;19061:7;19153:6;:16;;;19178:4;19153:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19087:10;:26;;;19114:10;:20;;;19143:4;19114:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19087:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:97;;;;:::i;:::-;19080:104;;19017:174;:::o;2158:98:62:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;19642:171:155:-;19707:7;19733:73;19750:7;19759:13;:11;:13::i;:::-;19774:11;:9;:11::i;:::-;19787:18;19733:16;:73::i;:::-;19726:80;;19642:171;;;:::o;4444:197:62:-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;24795:347:155:-;24858:7;24877:20;24900;:18;:20::i;:::-;24877:43;;25020:1;25004:12;:17;25000:47;;25030:17;;;;;;;;;;;;;;25000:47;25065:70;25082:7;25091:12;25105:11;:9;:11::i;:::-;25118:16;25065;:70::i;:::-;25058:77;;;24795:347;;;:::o;32102:146::-;32158:7;32184:57;32207:20;:18;:20::i;:::-;32229:11;:9;:11::i;:::-;32184:22;:57::i;:::-;32177:64;;32102:146;:::o;8075:36::-;;;:::o;2775:142:157:-;2843:7;2869:14;:26;;;2904:4;2869:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2862:48;;2775:142;:::o;38303:246:155:-;38420:4;38465:6;38444:28;;:9;:28;;;:58;;;;38497:4;38476:26;;:9;:26;;;38444:58;38443:99;;;;;38527:15;;;;;;;;;;;38507:35;;:16;:35;;;38443:99;38436:106;;38303:246;;;;:::o;5756:42::-;5795:3;5756:42;:::o;32382:354::-;32435:7;32454:26;32483:53;32502:20;:18;:20::i;:::-;32524:11;:9;:11::i;:::-;32483:18;:53::i;:::-;32454:82;;32546:20;32569:11;32546:34;;32616:12;32594:18;:34;32590:140;;32651:12;32644:19;;;;;;32590:140;32701:18;32694:25;;;;32382:354;;:::o;5203:256:62:-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;39072:278:155:-;3827:10:87;3816:21;;:7;:5;:7::i;:::-;:21;;;3808:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;39196:1:155::1;39159:39;;39167:16;39159:39;;::::0;39155:67:::1;;39207:15;;;;;;;;;;;;;;39155:67;39251:16;39233:15;;:34;;;;;;;;;;;;;;;;;;39325:16;39283:60;;39310:4;39283:60;;;;;;;;;;;;39072:278:::0;:::o;4266:2021:158:-;4454:7;3188;;;;;;;;;;;3174:21;;:10;:21;;;3170:71;;3221:10;3233:7;;;;;;;;;;;3204:37;;;;;;;;;;;;:::i;:::-;;;;;;;;3170:71;4473:23:::1;4506:22;4543:6;:15;4550:7;4543:15;;;;;;;;;;;;;;;:35;;;;;;;;;;;;4539:959;;;4595:24;4621:29:::0;4654:348:::1;4685:6;:15;4692:7;4685:15;;;;;;;;;;;;;;;:30;;;;;;;;;;;;4777:37;;;4836:7;4865:5;4892:11;4925:7;4954:16;4733:255;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4654:13;:348::i;:::-;4594:408;;;;1689:3;5192:46;;:21;:46;5188:158;;;5285:21;1689:3;5265:66;;;;;;;;;;;;:::i;:::-;;;;;;;;5188:158;5401:11;5390:41;;;;;;;;;;;;:::i;:::-;5359:72;;;;;;;;4580:862;;4539:959;;;5480:7;5462:25;;4539:959;5539:1;5512:29;;:15;:29;;::::0;5508:69:::1;;5550:27;;;;;;;;;;;;;;5508:69;5588:19;5610:9;:20;;;5644:7;5665:5;5684:11;5709:15;5738:7;5759:16;5610:175;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5588:197;;5800:6;:15;5807:7;5800:15;;;;;;;;;;;;;;;:34;;;;;;;;;;;;5796:456;;;5850:391;5881:6;:15;5888:7;5881:15;;;;;;;;;;;;;;;:30;;;;;;;;;;;;5973:36;;;6031:7;6060:5;6087:11;6134:7;6120:21;;:11;:21;;;;:::i;:::-;6163:15;6200:9;5929:298;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5850:13;:391::i;:::-;;;5796:456;6269:11;6262:18;;;;;4266:2021:::0;;;;;;;:::o;18235:123:155:-;18308:5;18332:19;18325:26;;18235:123;:::o;33032:367::-;15983:17;;;;;;;;;;;15969:31;;:10;:31;;;15965:126;;16050:10;16062:17;;;;;;;;;;;16023:57;;;;;;;;;;;;:::i;:::-;;;;;;;;15965:126;33134:1:::1;33123:7;:12:::0;33119:41:::1;;33144:16;;;;;;;;;;;;;;33119:41;33184:15;;33174:7;:25;33170:92;;;33237:7;33246:15;;33208:54;;;;;;;;;;;;:::i;:::-;;;;;;;;33170:92;33292:7;33273:15;;:26;;;;;;;:::i;:::-;;;;;;;;33310;33316:10;33328:7;33310:5;:26::i;:::-;33372:10;33352:40;;;33384:7;33352:40;;;;;;:::i;:::-;;;;;;;;33032:367:::0;:::o;2836:113:64:-;2896:7;2922:20;:18;:20::i;:::-;2915:27;;2836:113;:::o;18594:88:155:-;18634:7;18668:6;18653:22;;18594:88;:::o;5854:234:62:-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;1136:41:158:-;1170:7;1136:41;:::o;20629:921:155:-;20694:7;20713:18;20734:11;:9;:11::i;:::-;20713:32;;20756:13;20771:20;20795:27;:25;:27::i;:::-;20755:67;;;;20837:8;20836:9;:56;;;;20891:1;20877:11;:15;;;;:::i;:::-;20864:10;:28;;;;:::i;:::-;20849:12;:43;20836:56;20832:70;;;20901:1;20894:8;;;;;;;20832:70;20913:22;20938:6;:16;;;20963:4;20938:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20913:56;;20979:29;21011:10;:21;;;21041:4;21011:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20979:68;;21079:21;21061:14;:39;21057:487;;21123:1;21116:8;;;;;;;;;21057:487;21268:21;21292:22;21303:10;21292;:22::i;:::-;21268:46;;21328:19;21427:14;21403:21;:38;21389:52;;21492:11;21476:13;:27;:57;;21522:11;21476:57;;;21506:13;21476:57;21469:64;;;;;;;;;20629:921;;;;:::o;31257:179::-;31308:7;31398:6;:16;;;31423:4;31398:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31334:10;:24;;;31359:10;:20;;;31388:4;31359:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31334:61;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:95;;;;:::i;:::-;31327:102;;31257:179;:::o;25177:174::-;25238:7;25264:80;25281:7;25290:20;:18;:20::i;:::-;25312:11;:9;:11::i;:::-;25325:18;25264:16;:80::i;:::-;25257:87;;25177:174;;;:::o;3136:129:87:-;4039:13;;;;;;;;;;;4025:27;;:10;:27;;;4017:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3198:24:::1;3208:13;;;;;;;;;;;3198:9;:24::i;:::-;3256:1;3232:13;;:26;;;;;;;;;;;;;;;;;;3136:129::o:0;27492:877:155:-;27677:7;27710:10;27700:20;;:6;:20;;;27696:98;;27764:10;27776:6;27743:40;;;;;;;;;;;;:::i;:::-;;;;;;;;27696:98;28103:7;28060:6;:16;;;28077:6;28093:4;28060:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;28056:172;;28147:6;28126:36;;;28163:6;28179:4;28186:7;28195:9;28206:2;28210;28214;28126:91;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28056:172;28238:15;28256:23;28271:7;28256:14;:23::i;:::-;28238:41;;28289:49;28305:6;28313;28321:7;28330;28289:15;:49::i;:::-;28355:7;28348:14;;;27492:877;;;;;;;;:::o;39796:135::-;3827:10:87;3816:21;;:7;:5;:7::i;:::-;:21;;;3808:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;39883:41:155::1;39905:18;39883:21;:41::i;:::-;39796:135:::0;:::o;8787:30::-;;;;;;;;;;;;;:::o;25386:228::-;25457:7;25476:15;25494:23;25509:7;25494:14;:23::i;:::-;25476:41;;25527:56;25543:10;25555:9;25566:7;25575;25527:15;:56::i;:::-;25600:7;25593:14;;;25386:228;;;;:::o;38143:115::-;38207:7;38241:9;38226:25;;38143:115;;;:::o;2565:178:157:-;2661:7;2687:14;:24;;;2720:4;2727:8;2687:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2680:56;;2565:178;;;:::o;2497:94:87:-;3827:10;3816:21;;:7;:5;:7::i;:::-;:21;;;3808:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2563:21:::1;2581:1;2563:9;:21::i;:::-;2497:94::o:0;1762:36:158:-;;;:::o;35724:1895:155:-;35915:12;15743:15;;;;;;;;;;;15729:29;;:10;:29;;;15725:107;;15793:10;15805:15;;;;;;;;;;;15781:40;;;;;;;;;;;;:::i;:::-;;;;;;;;15725:107;35957:1:::1;35943:10;:15:::0;35939:54:::1;;35967:26;;;;;;;;;;;;;;35939:54;36004:24;36031:11;:9;:11::i;:::-;36004:38;;36052:23;36078:62;36101:20;:18;:20::i;:::-;36123:16;36078:22;:62::i;:::-;36052:88;;36150:26;36179:18;;;;;;;;;;;36150:47;;36294:17;36348:1:::0;36325:19:::1;:24;;;36321:342;;36642:10;36619:19;5398:3;36603:35;;;;:::i;:::-;36571:68;;5398:3;36572:26;;:10;:26;;;;:::i;:::-;36571:68;;;;:::i;:::-;:81;;;;:::i;:::-;36559:93;;36321:342;36790:15;36778:9;36765:10;:22;;;;:::i;:::-;:40;36761:146;;;36869:9;36856:10;:22;;;;:::i;:::-;36880:15;36828:68;;;;;;;;;;;;:::i;:::-;;;;;;;;36761:146;36972:1;36960:9;:13;36956:89;;;37025:9;37007:15;;:27;;;;:::i;:::-;36989:15;:45;;;;36956:89;37134:6;37113:28;;:9;:28;;::::0;37109:395:::1;;37157:46;37175:16;37193:9;37157:17;:46::i;:::-;37217:32;37227:9;37238:10;37217:9;:32::i;:::-;37109:395;;;37291:4;37270:26;;:9;:26;;::::0;37266:238:::1;;37312:59;37330:16;37361:9;37348:10;:22;;;;:::i;:::-;37312:17;:59::i;:::-;37385:28;37391:9;37402:10;37385:5;:28::i;:::-;37266:238;;;37483:9;37451:42;;;;;;;;;;;:::i;:::-;;;;;;;;37266:238;37109:395;37559:9;37519:73;;37548:9;37519:73;;37536:10;37519:73;;;37570:10;37582:9;37519:73;;;;;;;:::i;:::-;;;;;;;;37603:9;;;;;;;;;;;::::0;::::1;;;;;;35724:1895:::0;;;;;;:::o;2603:126:64:-;2672:7;2698:24;:7;:14;2706:5;2698:14;;;;;;;;;;;;;;;:22;:24::i;:::-;2691:31;;2603:126;;;:::o;5021:633:81:-;5136:13;5163:18;5195:21;5230:15;5259:25;5298:12;5324:27;5427:41;5454:13;5427:5;:26;;:41;;;;:::i;:::-;5482:47;5512:16;5482:8;:29;;:47;;;;:::i;:::-;5543:13;5578:4;5605:1;5597:10;;5635:1;5621:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5376:271;;;;;;;;;;;;;;;;;;;;;5021:633;;;;;;;:::o;1803:85:87:-;1849:7;1875:6;;;;;;;;;;;1868:13;;1803:85;:::o;25649:222:155:-;25717:7;25736:15;25754:20;25766:7;25754:11;:20::i;:::-;25736:38;;25784:56;25800:10;25812:9;25823:7;25832;25784:15;:56::i;:::-;25857:7;25850:14;;;25649:222;;;;:::o;2369:102:62:-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;8661:30:155:-;;;;:::o;29819:392::-;29963:7;29982:15;30000:22;30014:7;30000:13;:22::i;:::-;29982:40;;30046:10;30036:7;:20;30032:73;;;30085:7;30094:10;30065:40;;;;;;;;;;;;:::i;:::-;;;;;;;;30032:73;30115:65;30132:10;30144:9;30155:6;30163:7;30172;30115:16;:65::i;:::-;30197:7;30190:14;;;29819:392;;;;;;:::o;28981:394::-;29127:7;29146:15;29164:24;29180:7;29164:15;:24::i;:::-;29146:42;;29212:10;29202:7;:20;29198:71;;;29249:7;29258:10;29231:38;;;;;;;;;;;;:::i;:::-;;;;;;;;29198:71;29279:65;29296:10;29308:9;29319:6;29327:7;29336;29279:16;:65::i;:::-;29361:7;29354:14;;;28981:394;;;;;;:::o;6575:427:62:-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;8192:36:155:-;;;:::o;3740:189:62:-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;1280:46:157:-;;;:::o;33804:1751:155:-;33877:7;33896:18;33917:11;:9;:11::i;:::-;33896:32;;33938:27;33968:18;;;;;;;;;;;33938:48;;;;33996:21;34052:4;34031:26;;:9;:26;;;34027:913;;34161:22;34172:10;34161;:22::i;:::-;34145:38;;34027:913;;;34225:6;34204:28;;:9;:28;;;34200:740;;34401:6;:16;;;34426:4;34401:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34374:24;:22;:24::i;:::-;:58;;;;:::i;:::-;34358:74;;34596:1;34573:19;:24;34569:322;;34617:37;34657:65;5398:3;34657:65;;34702:19;34657:22;34668:10;34657;:22::i;:::-;:29;;:65;;;;;:::i;:::-;34617:105;;34776:13;34744:29;:45;34740:137;;;34829:29;34813:45;;34740:137;34599:292;34569:322;34200:740;;;34928:1;34921:8;;;;;;;34200:740;34027:913;35070:23;35096:56;35119:20;:18;:20::i;:::-;35141:10;35096:22;:56::i;:::-;35070:82;;35162:20;35204:13;35185:15;:32;;:66;;35236:15;35185:66;;;35220:13;35185:66;35162:89;;35477:71;35513:19;5398:3;35497:35;;;;;;:::i;:::-;5398:3;35477:71;;:12;:19;;:71;;;;;:::i;:::-;35470:78;;;;;;;33804:1751;;;;:::o;24508:193::-;24567:7;24687;24680:14;;24508:193;;;:::o;25906:285::-;26024:7;26043:15;26061:24;26077:7;26061:15;:24::i;:::-;26043:42;;26095:65;26112:10;26124:9;26135:6;26143:7;26152;26095:16;:65::i;:::-;26177:7;26170:14;;;25906:285;;;;;:::o;26226:281::-;26342:7;26361:15;26379:22;26393:7;26379:13;:22::i;:::-;26361:40;;26411:65;26428:10;26440:9;26451:6;26459:7;26468;26411:16;:65::i;:::-;26493:7;26486:14;;;26226:281;;;;;:::o;21751:107::-;21807:7;21833:18;21844:6;21833:10;:18::i;:::-;21826:25;;21751:107;;;:::o;19331:171::-;19396:7;19422:73;19439:7;19448:13;:11;:13::i;:::-;19463:11;:9;:11::i;:::-;19476:18;19422:16;:73::i;:::-;19415:80;;19331:171;;;:::o;1111:139:159:-;1196:5;1175:6;:18;1182:10;1175:18;;;;;;;;;;;;;;;:26;;;;;;:::i;:::-;;;;1225:10;1216:27;;;1237:5;1216:27;;;;;;:::i;:::-;;;;;;;;1111:139;:::o;37664:434:155:-;15743:15;;;;;;;;;;;15729:29;;:10;:29;;;15725:107;;15793:10;15805:15;;;;;;;;;;;15781:40;;;;;;;;;;;;:::i;:::-;;;;;;;;15725:107;37846:19:::1;37876:9;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37846:53;;37925:11;37913:23;;:8;:23;;;37909:115;;37991:8;38001:11;37959:54;;;;;;;;;;;;:::i;:::-;;;;;;;;37909:115;38034:9;:31;;;38074:4;38081:9;38034:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;37836:262;37664:434:::0;;;;:::o;38826:95::-;3827:10:87;3816:21;;:7;:5;:7::i;:::-;:21;;;3808:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;38893:21:155::1;38905:8;38893:11;:21::i;:::-;38826:95:::0;:::o;22139:576::-;22199:7;22219:13;22234:20;22258:27;:25;:27::i;:::-;22218:67;;;;22300:8;22295:23;;22317:1;22310:8;;;;;;22295:23;22337:20;22387:6;:16;;;22412:4;22387:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22360:24;:22;:24::i;:::-;:58;;;;:::i;:::-;22337:81;;22529:20;22552:82;22569:17;22579:6;22569:9;:17::i;:::-;22588:12;22602:11;:9;:11::i;:::-;22615:18;22552:16;:82::i;:::-;22529:105;;22666:12;22651;:27;:57;;22696:12;22651:57;;;22681:12;22651:57;22644:64;;;;;;22139:576;;;;:::o;1641:51:158:-;1689:3;1641:51;:::o;1845:22::-;;;;;;;;;;;;;:::o;31777:138:155:-;31829:7;31855:53;31874:20;:18;:20::i;:::-;31896:11;:9;:11::i;:::-;31855:18;:53::i;:::-;31848:60;;31777:138;:::o;1923:626:64:-;2158:8;2139:15;:27;;2131:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2211:18;1125:95;2271:5;2278:7;2287:5;2294:16;2304:5;2294:9;:16::i;:::-;2312:8;2242:79;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2232:90;;;;;;2211:111;;2333:12;2348:28;2365:10;2348:16;:28::i;:::-;2333:43;;2387:14;2404:28;2418:4;2424:1;2427;2430;2404:13;:28::i;:::-;2387:45;;2460:5;2450:15;;:6;:15;;;2442:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2511:31;2520:5;2527:7;2536:5;2511:8;:31::i;:::-;2121:428;;;1923:626;;;;;;;:::o;22994:1245:155:-;23052:7;23072:13;23087:20;23111:27;:25;:27::i;:::-;23071:67;;;;23153:8;23148:23;;23170:1;23163:8;;;;;;23148:23;23182:20;23232:6;:16;;;23257:4;23232:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23205:24;:22;:24::i;:::-;:58;;;;:::i;:::-;23182:81;;23273:20;23296:17;23306:6;23296:9;:17::i;:::-;23273:40;;23613:12;23598;:27;23594:639;;;23983:24;24010:75;24027:12;24041;24055:11;:9;:11::i;:::-;24068:16;24010;:75::i;:::-;23983:102;;24126:12;24106:16;:32;;:66;;24156:16;24106:66;;;24141:12;24106:66;24099:73;;;;;;;;;23594:639;24210:12;24203:19;;;;;;22994:1245;;;;:::o;3987:149:62:-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;868:116:159:-;926:17;;:::i;:::-;962:6;:15;969:7;962:15;;;;;;;;;;;;;;;955:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;868:116;;;:::o;8435:32:155:-;;;;;;;;;;;;;:::o;2003:101:87:-;2058:7;2084:13;;;;;;;;;;;2077:20;;2003:101;:::o;39554:138:155:-;3827:10:87;3816:21;;:7;:5;:7::i;:::-;:21;;;3808:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;39642:43:155::1;39665:19;39642:22;:43::i;:::-;39554:138:::0;:::o;5359:42::-;5398:3;5359:42;:::o;8526:32::-;;;;;;;;;;;;;:::o;24274:199::-;24336:7;24459;24452:14;;24274:199;;;:::o;2740:234:87:-;3827:10;3816:21;;:7;:5;:7::i;:::-;:21;;;3808:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2844:1:::1;2823:23;;:9;:23;;::::0;2815:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2915:9;2899:13;;:25;;;;;;;;;;;;;;;;;;2957:9;2940:27;;;;;;;;;;;;2740:234:::0;:::o;30572:106:155:-;30614:7;30656:15;;30640:13;:11;:13::i;:::-;:31;;;;:::i;:::-;30633:38;;30572:106;:::o;43288:616::-;43459:7;43498:10;43482:12;:26;43478:420;;43531:7;43524:14;;;;43478:420;43836:51;43851:12;43865:10;43877:9;43836:7;:14;;:51;;;;;;:::i;:::-;43829:58;;43288:616;;;;;;;:::o;655:96:75:-;708:7;734:10;727:17;;655:96;:::o;10457:340:62:-;10575:1;10558:19;;:5;:19;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;42268:640:155:-;42439:7;42478:10;42462:12;:26;42458:444;;42511:7;42504:14;;;;42458:444;42832:1;42816:12;:17;:75;;42840:51;42855:10;42867:12;42881:9;42840:7;:14;;:51;;;;;;:::i;:::-;42816:75;;;42836:1;42816:75;42809:82;;42268:640;;;;;;;:::o;45927:435::-;46024:7;46043:26;46072:44;46091:12;46105:10;46072:18;:44::i;:::-;46043:73;;46126:20;46149:11;46126:34;;46196:12;46174:18;:34;46170:186;;46280:12;46259:18;:33;46252:40;;;;;;46170:186;46344:1;46337:8;;;;45927:435;;;;;:::o;45311:288::-;45404:7;45441:12;45427:10;:26;45423:170;;45476:1;45469:8;;;;45423:170;45558:10;45543:12;:25;45536:32;;45311:288;;;;;:::o;11078:411:62:-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;4615:214:157:-;4715:14;:23;;;4739:5;4746:3;4751:26;4769:7;4751:17;:26::i;:::-;4715:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4809:3;4793:29;;4802:5;4793:29;;;4814:7;4793:29;;;;;;:::i;:::-;;;;;;;;4615:214;;;:::o;7406:931:158:-;7500:24;7526:29;7567:13;7616:159;1170:7;7616:159;;7696:1;1689:3;7756:9;7624:15;7616:44;;;;:159;;;;;;;:::i;:::-;7590:185;;;;;;;;7833:16;7808:41;;7874:8;7869:462;;1689:3;7982:46;;:21;:46;7978:158;;;8075:21;1689:3;8055:66;;;;;;;;;;;;:::i;:::-;;;;;;;;7978:158;8294:11;8288:18;8274:11;8270:2;8266:20;8259:48;7869:462;7557:780;7406:931;;;;;:::o;3437:207:157:-;3524:14;:19;;;3544:9;3555:26;3573:7;3555:17;:26::i;:::-;3524:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3618:9;3597:40;;3614:1;3597:40;;;3629:7;3597:40;;;;;;:::i;:::-;;;;;;;;3437:207;;:::o;3695:262:81:-;3748:7;3788:11;3771:28;;3779:4;3771:28;;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;3857:22;3850:29;;;;3767:184;3917:23;:21;:23::i;:::-;3910:30;;3695:262;;:::o;41452:347:155:-;41512:13;41527:20;41563:4;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;41559:234;;41747:5;41736:16;;41781:1;41766:16;;41559:234;;;41652:4;41641:15;;41685:19;41670:34;;41589:126;41559:234;41452:347;;:::o;44269:136::-;44337:7;44383:15;880:16;44363:17;;:35;;;;:::i;:::-;44356:42;;44269:136;;;:::o;3459:174:87:-;3515:17;3535:6;;;;;;;;;;;3515:26;;3560:9;3551:6;;:18;;;;;;;;;;;;;;;;;;3616:9;3584:42;;3605:9;3584:42;;;;;;;;;;;;3505:128;3459:174;:::o;46854:1742:155:-;46983:1;46972:7;:12;46968:41;;46993:16;;;;;;;;;;;;;;46968:41;47034:1;47023:7;:12;47019:44;;47044:19;;;;;;;;;;;;;;47019:44;47580:102;47617:7;47646:4;47665:7;47580:6;:23;;;;:102;;;;;;:::i;:::-;47786:23;47812:6;:16;;;47837:4;47812:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;47786:57;;47853;47881:10;47894:15;47853:6;:19;;;;:57;;;;;:::i;:::-;48016:25;48044:10;:25;;;48070:15;48044:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;48016:70;;48096:10;:15;;;48112:17;48139:4;48096:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;48226:28;48257:11;:9;:11::i;:::-;48226:42;;48278:48;48296:20;48318:7;48278:17;:48::i;:::-;48386:7;48363:20;:30;;;;:::i;:::-;48340:20;:18;:20::i;:::-;:53;48336:157;;;48429:20;:18;:20::i;:::-;48474:7;48451:20;:30;;;;:::i;:::-;48416:66;;;;;;;;;;;;:::i;:::-;;;;;;;;48336:157;48503:25;48509:9;48520:7;48503:5;:25::i;:::-;48561:9;48544:45;;48552:7;48544:45;;;48572:7;48581;48544:45;;;;;;;:::i;:::-;;;;;;;;46958:1638;;;46854:1742;;;;:::o;52926:178::-;53024:18;53004:17;;:38;;;;;;;;;;;;;;;;;;53078:18;53057:40;;;;;;;;;;;;52926:178;:::o;44772:293::-;44868:14;44885:27;44896:15;44885:10;:27::i;:::-;44868:44;;44939:6;44926:10;:19;44922:137;;;45027:6;45014:10;:19;44996:38;;;;;;;;;;;:::i;:::-;;;;;;;;44922:137;44858:207;44772:293;;:::o;51318:856::-;51582:21;51606:6;:16;;;51631:4;51606:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;51582:55;;51661:13;51651:7;:23;51647:416;;;51798:25;51826:10;:26;;;51863:13;51853:7;:23;;;;:::i;:::-;51826:51;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;51798:79;;51986:10;:17;;;52004;52031:4;52046;51986:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;51676:387;51647:416;52097:4;52076:26;;:9;:26;;;52072:96;;52118:39;52138:9;52149:7;52118:6;:19;;;;:39;;;;;:::i;:::-;52072:96;51382:792;51318:856;;:::o;827:112:76:-;892:7;918;:14;;;911:21;;827:112;;;:::o;3367:268:77:-;3461:13;1371:66;3519:18;;3509:5;3490:47;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:268;;;;;:::o;49031:1017:155:-;49223:1;49212:7;:12;49208:45;;49233:20;;;;;;;;;;;;;;49208:45;49278:1;49267:7;:12;49263:41;;49288:16;;;;;;;;;;;;;;49263:41;49329:6;49318:17;;:7;:17;;;49314:89;;49351:41;49367:6;49375:7;49384;49351:15;:41::i;:::-;49314:89;49910:22;49916:6;49924:7;49910:5;:22::i;:::-;49942:29;49952:9;49963:7;49942:9;:29::i;:::-;50016:6;49987:54;;50005:9;49987:54;;49996:7;49987:54;;;50024:7;50033;49987:54;;;;;;;:::i;:::-;;;;;;;;49031:1017;;;;;:::o;50868:259::-;50925:7;50948:10;:24;;;50973:10;:20;;;51002:4;50973:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;50948:61;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;50944:177;;51109:1;51102:8;;;;50944:177;51060:10;51053:17;;;50868:259;;:::o;1667:4213:84:-;1749:14;2096:13;2168;2293:1;2289:6;2286:1;2283;2276:20;2329:1;2326;2322:9;2313:18;;2384:5;2380:2;2377:13;2369:5;2365:2;2361:14;2357:34;2348:43;;2248:157;2495:1;2486:5;:10;2482:368;;2824:11;2816:5;:19;;;;;:::i;:::-;;;2809:26;;;;;;2482:368;2974:5;2960:11;:19;2952:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3261:17;3396:11;3393:1;3390;3383:25;3370:38;;3524:5;3513:9;3510:20;3503:5;3499:32;3490:41;;3568:9;3561:5;3557:21;3548:30;;3899:12;3944:1;3930:11;3929:12;:16;3914:11;:32;3899:47;;4066:4;4053:11;4049:22;4034:37;;4158:4;4151:5;4147:16;4138:25;;4315:1;4308:4;4301;4298:1;4294:12;4290:23;4286:31;4278:39;;4414:4;4406:5;:12;4397:21;;;;4736:15;4774:1;4759:11;4755:1;:15;4754:21;4736:39;;5021:7;5007:11;:21;5003:1;:25;4992:36;;;;5090:7;5076:11;:21;5072:1;:25;5061:36;;;;5160:7;5146:11;:21;5142:1;:25;5131:36;;;;5230:7;5216:11;:21;5212:1;:25;5201:36;;;;5300:7;5286:11;:21;5282:1;:25;5271:36;;;;5371:7;5357:11;:21;5353:1;:25;5342:36;;;;5829:7;5821:5;:15;5812:24;;5850:13;;;;;1667:4213;;;;;;:::o;6628:183:158:-;6710:1;6690:22;;:8;:22;;;6686:55;;6721:20;;;;;;;;;;;;;;6686:55;6761:8;6751:7;;:18;;;;;;;;;;;;;;;;;;6795:8;6784:20;;;;;;;;;;;;6628:183;:::o;3080:203:64:-;3140:15;3167:30;3200:7;:14;3208:5;3200:14;;;;;;;;;;;;;;;3167:47;;3234:15;:5;:13;:15::i;:::-;3224:25;;3259:17;:5;:15;:17::i;:::-;3157:126;3080:203;;;:::o;4768:165:81:-;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;4871:21;:55::i;:::-;4864:62;;4768:165;;;:::o;6598:232:80:-;6683:7;6703:17;6722:18;6744:25;6755:4;6761:1;6764;6767;6744:10;:25::i;:::-;6702:67;;;;6779:18;6791:5;6779:11;:18::i;:::-;6814:9;6807:16;;;;6598:232;;;;;;:::o;52429:329:155:-;5795:3;52512:35;;:19;:35;;;52508:137;;;52599:19;5795:3;52570:64;;;;;;;;;;;;:::i;:::-;;;;;;;;52508:137;52675:19;52654:18;;:40;;;;;;;;;;;;;;;;;;52709:42;52731:19;52709:42;;;;;;:::i;:::-;;;;;;;;52429:329;:::o;6012:299:84:-;6113:7;6132:14;6149:25;6156:1;6159;6162:11;6149:6;:25::i;:::-;6132:42;;6200:11;6188:23;;;;;;;;:::i;:::-;;:8;:23;;;;;;;;:::i;:::-;;;:56;;;;;6243:1;6228:11;6215:25;;;;;:::i;:::-;;6225:1;6222;6215:25;:29;6188:56;6184:98;;;6270:1;6260:11;;;;;:::i;:::-;;;6184:98;6298:6;6291:13;;;6012:299;;;;;;:::o;11168:187:85:-;11224:6;11259:16;11250:25;;:5;:25;;11242:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;11342:5;11328:20;;11168:187;;;:::o;1192:1309:0:-;1373:4;1379:12;1439:15;1464:13;1487:24;1524:8;1514:19;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:46;;2035:1;2006;1969:9;1963:16;1931:4;1920:9;1916:20;1877:6;1839:7;1810:4;1788:272;1776:284;;2127:16;2116:27;;2171:8;2162:7;2159:21;2156:76;;;2210:8;2199:19;;2156:76;2317:7;2304:11;2297:28;2437:7;2434:1;2427:4;2414:11;2410:22;2395:50;2472:8;2482:11;2464:30;;;;;;;1192:1309;;;;;;;;:::o;3963:180:81:-;4018:7;1929:95;4077:11;4090:14;4106:13;4129:4;4054:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;:::o;1355:203:69:-;1455:96;1475:5;1505:27;;;1534:4;1540:2;1544:5;1482:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:19;:96::i;:::-;1355:203;;;;:::o;3779:410::-;3866:25;3917:22;;;3941:7;3950:5;3894:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3866:90;;3972:44;3996:5;4003:12;3972:23;:44::i;:::-;3967:216;;4032:86;4052:5;4082:22;;;4106:7;4115:1;4059:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4032:19;:86::i;:::-;4132:40;4152:5;4159:12;4132:19;:40::i;:::-;3967:216;3856:333;3779:410;;;:::o;941:175::-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;2059:405:77:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2143:30;;2261:17;2292:2;2281:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2261:34;;2383:3;2378;2371:16;2423:4;2416;2411:3;2407:14;2400:28;2454:3;2447:10;;;;2059:405;;;:::o;4006:198:157:-;4090:14;:19;;;4110:6;4118:26;4136:7;4118:17;:26::i;:::-;4090:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4185:1;4160:37;;4169:6;4160:37;;;4189:7;4160:37;;;;;;:::i;:::-;;;;;;;;4006:198;;:::o;945:123:76:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;8336:397:80:-;8429:12;8536:4;8530:11;8566:10;8561:3;8554:23;8613:15;8606:4;8601:3;8597:14;8590:39;8665:10;8658:4;8653:3;8649:14;8642:34;8712:4;8707:3;8697:20;8689:28;;8505:222;8336:397;;;;:::o;5009:1456::-;5097:7;5106:12;6021:66;6016:1;6008:10;;:79;6004:161;;;6119:1;6123:30;6103:51;;;;;;6004:161;6259:14;6276:24;6286:4;6292:1;6295;6298;6276:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:41;;6332:1;6314:20;;:6;:20;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;6437:20;6421:37;;;;;5009:1456;;;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;683:7;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;5196:642:69:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5749:1;5728:10;:17;:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5728:56;5720:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5266:572;5196:642;;:::o;6339:594::-;6422:4;6724:12;6738:23;6773:5;6765:19;;6785:4;6765:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6723:67;;;;6819:7;:69;;;;;6852:1;6831:10;:17;:22;:56;;;;6868:10;6857:30;;;;;;;;;;;;:::i;:::-;6831:56;6819:69;:107;;;;;6892:34;6919:5;6892:18;:34::i;:::-;6819:107;6800:126;;;;6339:594;;;;:::o;2536:245:77:-;2597:7;2616:14;2669:4;2660;2633:33;;:40;2616:57;;2696:2;2687:6;:11;2683:69;;;2721:20;;;;;;;;;;;;;;2683:69;2768:6;2761:13;;;2536:245;;;:::o;4108:223:74:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:278:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:246::-;803:1;813:113;827:6;824:1;821:13;813:113;;;912:1;907:3;903:11;897:18;893:1;888:3;884:11;877:39;849:2;846:1;842:10;837:15;;813:113;;;960:1;951:6;946:3;942:16;935:27;784:184;722:246;;;:::o;974:102::-;1015:6;1066:2;1062:7;1057:2;1050:5;1046:14;1042:28;1032:38;;974:102;;;:::o;1082:377::-;1170:3;1198:39;1231:5;1198:39;:::i;:::-;1253:71;1317:6;1312:3;1253:71;:::i;:::-;1246:78;;1333:65;1391:6;1386:3;1379:4;1372:5;1368:16;1333:65;:::i;:::-;1423:29;1445:6;1423:29;:::i;:::-;1418:3;1414:39;1407:46;;1174:285;1082:377;;;;:::o;1465:313::-;1578:4;1616:2;1605:9;1601:18;1593:26;;1665:9;1659:4;1655:20;1651:1;1640:9;1636:17;1629:47;1693:78;1766:4;1757:6;1693:78;:::i;:::-;1685:86;;1465:313;;;;:::o;1784:75::-;1817:6;1850:2;1844:9;1834:19;;1784:75;:::o;1865:117::-;1974:1;1971;1964:12;1988:117;2097:1;2094;2087:12;2111:122;2184:24;2202:5;2184:24;:::i;:::-;2177:5;2174:35;2164:63;;2223:1;2220;2213:12;2164:63;2111:122;:::o;2239:139::-;2285:5;2323:6;2310:20;2301:29;;2339:33;2366:5;2339:33;:::i;:::-;2239:139;;;;:::o;2384:329::-;2443:6;2492:2;2480:9;2471:7;2467:23;2463:32;2460:119;;;2498:79;;:::i;:::-;2460:119;2618:1;2643:53;2688:7;2679:6;2668:9;2664:22;2643:53;:::i;:::-;2633:63;;2589:117;2384:329;;;;:::o;2719:126::-;2756:7;2796:42;2789:5;2785:54;2774:65;;2719:126;;;:::o;2851:96::-;2888:7;2917:24;2935:5;2917:24;:::i;:::-;2906:35;;2851:96;;;:::o;2953:122::-;3026:24;3044:5;3026:24;:::i;:::-;3019:5;3016:35;3006:63;;3065:1;3062;3055:12;3006:63;2953:122;:::o;3081:139::-;3127:5;3165:6;3152:20;3143:29;;3181:33;3208:5;3181:33;:::i;:::-;3081:139;;;;:::o;3226:474::-;3294:6;3302;3351:2;3339:9;3330:7;3326:23;3322:32;3319:119;;;3357:79;;:::i;:::-;3319:119;3477:1;3502:53;3547:7;3538:6;3527:9;3523:22;3502:53;:::i;:::-;3492:63;;3448:117;3604:2;3630:53;3675:7;3666:6;3655:9;3651:22;3630:53;:::i;:::-;3620:63;;3575:118;3226:474;;;;;:::o;3706:90::-;3740:7;3783:5;3776:13;3769:21;3758:32;;3706:90;;;:::o;3802:109::-;3883:21;3898:5;3883:21;:::i;:::-;3878:3;3871:34;3802:109;;:::o;3917:210::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:65;4117:1;4106:9;4102:17;4093:6;4055:65;:::i;:::-;3917:210;;;;:::o;4133:474::-;4201:6;4209;4258:2;4246:9;4237:7;4233:23;4229:32;4226:119;;;4264:79;;:::i;:::-;4226:119;4384:1;4409:53;4454:7;4445:6;4434:9;4430:22;4409:53;:::i;:::-;4399:63;;4355:117;4511:2;4537:53;4582:7;4573:6;4562:9;4558:22;4537:53;:::i;:::-;4527:63;;4482:118;4133:474;;;;;:::o;4613:93::-;4649:7;4689:10;4682:5;4678:22;4667:33;;4613:93;;;:::o;4712:115::-;4797:23;4814:5;4797:23;:::i;:::-;4792:3;4785:36;4712:115;;:::o;4833:218::-;4924:4;4962:2;4951:9;4947:18;4939:26;;4975:69;5041:1;5030:9;5026:17;5017:6;4975:69;:::i;:::-;4833:218;;;;:::o;5057:619::-;5134:6;5142;5150;5199:2;5187:9;5178:7;5174:23;5170:32;5167:119;;;5205:79;;:::i;:::-;5167:119;5325:1;5350:53;5395:7;5386:6;5375:9;5371:22;5350:53;:::i;:::-;5340:63;;5296:117;5452:2;5478:53;5523:7;5514:6;5503:9;5499:22;5478:53;:::i;:::-;5468:63;;5423:118;5580:2;5606:53;5651:7;5642:6;5631:9;5627:22;5606:53;:::i;:::-;5596:63;;5551:118;5057:619;;;;;:::o;5682:329::-;5741:6;5790:2;5778:9;5769:7;5765:23;5761:32;5758:119;;;5796:79;;:::i;:::-;5758:119;5916:1;5941:53;5986:7;5977:6;5966:9;5962:22;5941:53;:::i;:::-;5931:63;;5887:117;5682:329;;;;:::o;6017:86::-;6052:7;6092:4;6085:5;6081:16;6070:27;;6017:86;;;:::o;6109:118::-;6180:22;6196:5;6180:22;:::i;:::-;6173:5;6170:33;6160:61;;6217:1;6214;6207:12;6160:61;6109:118;:::o;6233:135::-;6277:5;6315:6;6302:20;6293:29;;6331:31;6356:5;6331:31;:::i;:::-;6233:135;;;;:::o;6374:120::-;6446:23;6463:5;6446:23;:::i;:::-;6439:5;6436:34;6426:62;;6484:1;6481;6474:12;6426:62;6374:120;:::o;6500:137::-;6545:5;6583:6;6570:20;6561:29;;6599:32;6625:5;6599:32;:::i;:::-;6500:137;;;;:::o;6643:109::-;6679:7;6719:26;6712:5;6708:38;6697:49;;6643:109;;;:::o;6758:120::-;6830:23;6847:5;6830:23;:::i;:::-;6823:5;6820:34;6810:62;;6868:1;6865;6858:12;6810:62;6758:120;:::o;6884:137::-;6929:5;6967:6;6954:20;6945:29;;6983:32;7009:5;6983:32;:::i;:::-;6884:137;;;;:::o;7027:903::-;7118:6;7126;7134;7142;7150;7199:3;7187:9;7178:7;7174:23;7170:33;7167:120;;;7206:79;;:::i;:::-;7167:120;7326:1;7351:53;7396:7;7387:6;7376:9;7372:22;7351:53;:::i;:::-;7341:63;;7297:117;7453:2;7479:51;7522:7;7513:6;7502:9;7498:22;7479:51;:::i;:::-;7469:61;;7424:116;7579:2;7605:52;7649:7;7640:6;7629:9;7625:22;7605:52;:::i;:::-;7595:62;;7550:117;7706:2;7732:52;7776:7;7767:6;7756:9;7752:22;7732:52;:::i;:::-;7722:62;;7677:117;7833:3;7860:53;7905:7;7896:6;7885:9;7881:22;7860:53;:::i;:::-;7850:63;;7804:119;7027:903;;;;;;;;:::o;7936:112::-;8019:22;8035:5;8019:22;:::i;:::-;8014:3;8007:35;7936:112;;:::o;8054:214::-;8143:4;8181:2;8170:9;8166:18;8158:26;;8194:67;8258:1;8247:9;8243:17;8234:6;8194:67;:::i;:::-;8054:214;;;;:::o;8274:77::-;8311:7;8340:5;8329:16;;8274:77;;;:::o;8357:118::-;8444:24;8462:5;8444:24;:::i;:::-;8439:3;8432:37;8357:118;;:::o;8481:222::-;8574:4;8612:2;8601:9;8597:18;8589:26;;8625:71;8693:1;8682:9;8678:17;8669:6;8625:71;:::i;:::-;8481:222;;;;:::o;8709:118::-;8796:24;8814:5;8796:24;:::i;:::-;8791:3;8784:37;8709:118;;:::o;8833:222::-;8926:4;8964:2;8953:9;8949:18;8941:26;;8977:71;9045:1;9034:9;9030:17;9021:6;8977:71;:::i;:::-;8833:222;;;;:::o;9061:91::-;9097:7;9137:8;9130:5;9126:20;9115:31;;9061:91;;;:::o;9158:115::-;9243:23;9260:5;9243:23;:::i;:::-;9238:3;9231:36;9158:115;;:::o;9279:218::-;9370:4;9408:2;9397:9;9393:18;9385:26;;9421:69;9487:1;9476:9;9472:17;9463:6;9421:69;:::i;:::-;9279:218;;;;:::o;9503:122::-;9576:24;9594:5;9576:24;:::i;:::-;9569:5;9566:35;9556:63;;9615:1;9612;9605:12;9556:63;9503:122;:::o;9631:139::-;9677:5;9715:6;9702:20;9693:29;;9731:33;9758:5;9731:33;:::i;:::-;9631:139;;;;:::o;9776:1053::-;9878:6;9886;9894;9902;9910;9918;9967:3;9955:9;9946:7;9942:23;9938:33;9935:120;;;9974:79;;:::i;:::-;9935:120;10094:1;10119:53;10164:7;10155:6;10144:9;10140:22;10119:53;:::i;:::-;10109:63;;10065:117;10221:2;10247:53;10292:7;10283:6;10272:9;10268:22;10247:53;:::i;:::-;10237:63;;10192:118;10349:2;10375:53;10420:7;10411:6;10400:9;10396:22;10375:53;:::i;:::-;10365:63;;10320:118;10477:2;10503:51;10546:7;10537:6;10526:9;10522:22;10503:51;:::i;:::-;10493:61;;10448:116;10603:3;10630:53;10675:7;10666:6;10655:9;10651:22;10630:53;:::i;:::-;10620:63;;10574:119;10732:3;10759:53;10804:7;10795:6;10784:9;10780:22;10759:53;:::i;:::-;10749:63;;10703:119;9776:1053;;;;;;;;:::o;10835:474::-;10903:6;10911;10960:2;10948:9;10939:7;10935:23;10931:32;10928:119;;;10966:79;;:::i;:::-;10928:119;11086:1;11111:53;11156:7;11147:6;11136:9;11132:22;11111:53;:::i;:::-;11101:63;;11057:117;11213:2;11239:53;11284:7;11275:6;11264:9;11260:22;11239:53;:::i;:::-;11229:63;;11184:118;10835:474;;;;;:::o;11315:60::-;11343:3;11364:5;11357:12;;11315:60;;;:::o;11381:142::-;11431:9;11464:53;11482:34;11491:24;11509:5;11491:24;:::i;:::-;11482:34;:::i;:::-;11464:53;:::i;:::-;11451:66;;11381:142;;;:::o;11529:126::-;11579:9;11612:37;11643:5;11612:37;:::i;:::-;11599:50;;11529:126;;;:::o;11661:145::-;11730:9;11763:37;11794:5;11763:37;:::i;:::-;11750:50;;11661:145;;;:::o;11812:169::-;11918:56;11968:5;11918:56;:::i;:::-;11913:3;11906:69;11812:169;;:::o;11987:260::-;12099:4;12137:2;12126:9;12122:18;12114:26;;12150:90;12237:1;12226:9;12222:17;12213:6;12150:90;:::i;:::-;11987:260;;;;:::o;12253:765::-;12339:6;12347;12355;12363;12412:3;12400:9;12391:7;12387:23;12383:33;12380:120;;;12419:79;;:::i;:::-;12380:120;12539:1;12564:53;12609:7;12600:6;12589:9;12585:22;12564:53;:::i;:::-;12554:63;;12510:117;12666:2;12692:53;12737:7;12728:6;12717:9;12713:22;12692:53;:::i;:::-;12682:63;;12637:118;12794:2;12820:53;12865:7;12856:6;12845:9;12841:22;12820:53;:::i;:::-;12810:63;;12765:118;12922:2;12948:53;12993:7;12984:6;12973:9;12969:22;12948:53;:::i;:::-;12938:63;;12893:118;12253:765;;;;;;;:::o;13024:98::-;13075:6;13109:5;13103:12;13093:22;;13024:98;;;:::o;13128:168::-;13211:11;13245:6;13240:3;13233:19;13285:4;13280:3;13276:14;13261:29;;13128:168;;;;:::o;13302:373::-;13388:3;13416:38;13448:5;13416:38;:::i;:::-;13470:70;13533:6;13528:3;13470:70;:::i;:::-;13463:77;;13549:65;13607:6;13602:3;13595:4;13588:5;13584:16;13549:65;:::i;:::-;13639:29;13661:6;13639:29;:::i;:::-;13634:3;13630:39;13623:46;;13392:283;13302:373;;;;:::o;13681:309::-;13792:4;13830:2;13819:9;13815:18;13807:26;;13879:9;13873:4;13869:20;13865:1;13854:9;13850:17;13843:47;13907:76;13978:4;13969:6;13907:76;:::i;:::-;13899:84;;13681:309;;;;:::o;13996:149::-;14032:7;14072:66;14065:5;14061:78;14050:89;;13996:149;;;:::o;14151:115::-;14236:23;14253:5;14236:23;:::i;:::-;14231:3;14224:36;14151:115;;:::o;14272:114::-;14339:6;14373:5;14367:12;14357:22;;14272:114;;;:::o;14392:184::-;14491:11;14525:6;14520:3;14513:19;14565:4;14560:3;14556:14;14541:29;;14392:184;;;;:::o;14582:132::-;14649:4;14672:3;14664:11;;14702:4;14697:3;14693:14;14685:22;;14582:132;;;:::o;14720:108::-;14797:24;14815:5;14797:24;:::i;:::-;14792:3;14785:37;14720:108;;:::o;14834:179::-;14903:10;14924:46;14966:3;14958:6;14924:46;:::i;:::-;15002:4;14997:3;14993:14;14979:28;;14834:179;;;;:::o;15019:113::-;15089:4;15121;15116:3;15112:14;15104:22;;15019:113;;;:::o;15168:732::-;15287:3;15316:54;15364:5;15316:54;:::i;:::-;15386:86;15465:6;15460:3;15386:86;:::i;:::-;15379:93;;15496:56;15546:5;15496:56;:::i;:::-;15575:7;15606:1;15591:284;15616:6;15613:1;15610:13;15591:284;;;15692:6;15686:13;15719:63;15778:3;15763:13;15719:63;:::i;:::-;15712:70;;15805:60;15858:6;15805:60;:::i;:::-;15795:70;;15651:224;15638:1;15635;15631:9;15626:14;;15591:284;;;15595:14;15891:3;15884:10;;15292:608;;;15168:732;;;;:::o;15906:1215::-;16255:4;16293:3;16282:9;16278:19;16270:27;;16307:69;16373:1;16362:9;16358:17;16349:6;16307:69;:::i;:::-;16423:9;16417:4;16413:20;16408:2;16397:9;16393:18;16386:48;16451:78;16524:4;16515:6;16451:78;:::i;:::-;16443:86;;16576:9;16570:4;16566:20;16561:2;16550:9;16546:18;16539:48;16604:78;16677:4;16668:6;16604:78;:::i;:::-;16596:86;;16692:72;16760:2;16749:9;16745:18;16736:6;16692:72;:::i;:::-;16774:73;16842:3;16831:9;16827:19;16818:6;16774:73;:::i;:::-;16857;16925:3;16914:9;16910:19;16901:6;16857:73;:::i;:::-;16978:9;16972:4;16968:20;16962:3;16951:9;16947:19;16940:49;17006:108;17109:4;17100:6;17006:108;:::i;:::-;16998:116;;15906:1215;;;;;;;;;;:::o;17127:765::-;17213:6;17221;17229;17237;17286:3;17274:9;17265:7;17261:23;17257:33;17254:120;;;17293:79;;:::i;:::-;17254:120;17413:1;17438:53;17483:7;17474:6;17463:9;17459:22;17438:53;:::i;:::-;17428:63;;17384:117;17540:2;17566:53;17611:7;17602:6;17591:9;17587:22;17566:53;:::i;:::-;17556:63;;17511:118;17668:2;17694:53;17739:7;17730:6;17719:9;17715:22;17694:53;:::i;:::-;17684:63;;17639:118;17796:2;17822:53;17867:7;17858:6;17847:9;17843:22;17822:53;:::i;:::-;17812:63;;17767:118;17127:765;;;;;;;:::o;17898:144::-;17966:9;17999:37;18030:5;17999:37;:::i;:::-;17986:50;;17898:144;;;:::o;18048:167::-;18153:55;18202:5;18153:55;:::i;:::-;18148:3;18141:68;18048:167;;:::o;18221:258::-;18332:4;18370:2;18359:9;18355:18;18347:26;;18383:89;18469:1;18458:9;18454:17;18445:6;18383:89;:::i;:::-;18221:258;;;;:::o;18485:150::-;18559:9;18592:37;18623:5;18592:37;:::i;:::-;18579:50;;18485:150;;;:::o;18641:179::-;18752:61;18807:5;18752:61;:::i;:::-;18747:3;18740:74;18641:179;;:::o;18826:270::-;18943:4;18981:2;18970:9;18966:18;18958:26;;18994:95;19086:1;19075:9;19071:17;19062:6;18994:95;:::i;:::-;18826:270;;;;:::o;19102:619::-;19179:6;19187;19195;19244:2;19232:9;19223:7;19219:23;19215:32;19212:119;;;19250:79;;:::i;:::-;19212:119;19370:1;19395:53;19440:7;19431:6;19420:9;19416:22;19395:53;:::i;:::-;19385:63;;19341:117;19497:2;19523:53;19568:7;19559:6;19548:9;19544:22;19523:53;:::i;:::-;19513:63;;19468:118;19625:2;19651:53;19696:7;19687:6;19676:9;19672:22;19651:53;:::i;:::-;19641:63;;19596:118;19102:619;;;;;:::o;19727:117::-;19836:1;19833;19826:12;19875:235;19952:5;19993:2;19984:6;19979:3;19975:16;19971:25;19968:112;;;19999:79;;:::i;:::-;19968:112;20098:6;20089:15;;19875:235;;;;:::o;20116:391::-;20206:6;20255:2;20243:9;20234:7;20230:23;20226:32;20223:119;;;20261:79;;:::i;:::-;20223:119;20381:1;20406:84;20482:7;20473:6;20462:9;20458:22;20406:84;:::i;:::-;20396:94;;20352:148;20116:391;;;;:::o;20513:117::-;20622:1;20619;20612:12;20636:117;20745:1;20742;20735:12;20759:117;20868:1;20865;20858:12;20895:552;20952:8;20962:6;21012:3;21005:4;20997:6;20993:17;20989:27;20979:122;;21020:79;;:::i;:::-;20979:122;21133:6;21120:20;21110:30;;21163:18;21155:6;21152:30;21149:117;;;21185:79;;:::i;:::-;21149:117;21299:4;21291:6;21287:17;21275:29;;21353:3;21345:4;21337:6;21333:17;21323:8;21319:32;21316:41;21313:128;;;21360:79;;:::i;:::-;21313:128;20895:552;;;;;:::o;21453:817::-;21541:6;21549;21557;21565;21614:2;21602:9;21593:7;21589:23;21585:32;21582:119;;;21620:79;;:::i;:::-;21582:119;21740:1;21765:53;21810:7;21801:6;21790:9;21786:22;21765:53;:::i;:::-;21755:63;;21711:117;21867:2;21893:53;21938:7;21929:6;21918:9;21914:22;21893:53;:::i;:::-;21883:63;;21838:118;22023:2;22012:9;22008:18;21995:32;22054:18;22046:6;22043:30;22040:117;;;22076:79;;:::i;:::-;22040:117;22189:64;22245:7;22236:6;22225:9;22221:22;22189:64;:::i;:::-;22171:82;;;;21966:297;21453:817;;;;;;;:::o;22276:89::-;22312:7;22352:6;22345:5;22341:18;22330:29;;22276:89;;;:::o;22371:115::-;22456:23;22473:5;22456:23;:::i;:::-;22451:3;22444:36;22371:115;;:::o;22492:218::-;22583:4;22621:2;22610:9;22606:18;22598:26;;22634:69;22700:1;22689:9;22685:17;22676:6;22634:69;:::i;:::-;22492:218;;;;:::o;22716:1199::-;22827:6;22835;22843;22851;22859;22867;22875;22924:3;22912:9;22903:7;22899:23;22895:33;22892:120;;;22931:79;;:::i;:::-;22892:120;23051:1;23076:53;23121:7;23112:6;23101:9;23097:22;23076:53;:::i;:::-;23066:63;;23022:117;23178:2;23204:53;23249:7;23240:6;23229:9;23225:22;23204:53;:::i;:::-;23194:63;;23149:118;23306:2;23332:53;23377:7;23368:6;23357:9;23353:22;23332:53;:::i;:::-;23322:63;;23277:118;23434:2;23460:53;23505:7;23496:6;23485:9;23481:22;23460:53;:::i;:::-;23450:63;;23405:118;23562:3;23589:51;23632:7;23623:6;23612:9;23608:22;23589:51;:::i;:::-;23579:61;;23533:117;23689:3;23716:53;23761:7;23752:6;23741:9;23737:22;23716:53;:::i;:::-;23706:63;;23660:119;23818:3;23845:53;23890:7;23881:6;23870:9;23866:22;23845:53;:::i;:::-;23835:63;;23789:119;22716:1199;;;;;;;;;;:::o;23921:99::-;23992:21;24007:5;23992:21;:::i;:::-;23987:3;23980:34;23921:99;;:::o;24026:147::-;24097:9;24130:37;24161:5;24130:37;:::i;:::-;24117:50;;24026:147;;;:::o;24179:163::-;24277:58;24329:5;24277:58;:::i;:::-;24272:3;24265:71;24179:163;;:::o;24394:737::-;24549:4;24544:3;24540:14;24651:4;24644:5;24640:16;24634:23;24670:57;24721:4;24716:3;24712:14;24698:12;24670:57;:::i;:::-;24564:173;24833:4;24826:5;24822:16;24816:23;24852:57;24903:4;24898:3;24894:14;24880:12;24852:57;:::i;:::-;24747:172;25011:4;25004:5;25000:16;24994:23;25030:84;25108:4;25103:3;25099:14;25085:12;25030:84;:::i;:::-;24929:195;24518:613;24394:737;;:::o;25137:338::-;25288:4;25326:2;25315:9;25311:18;25303:26;;25339:129;25465:1;25454:9;25450:17;25441:6;25339:129;:::i;:::-;25137:338;;;;:::o;25481:327::-;25539:6;25588:2;25576:9;25567:7;25563:23;25559:32;25556:119;;;25594:79;;:::i;:::-;25556:119;25714:1;25739:52;25783:7;25774:6;25763:9;25759:22;25739:52;:::i;:::-;25729:62;;25685:116;25481:327;;;;:::o;25814:143::-;25871:5;25902:6;25896:13;25887:22;;25918:33;25945:5;25918:33;:::i;:::-;25814:143;;;;:::o;25963:351::-;26033:6;26082:2;26070:9;26061:7;26057:23;26053:32;26050:119;;;26088:79;;:::i;:::-;26050:119;26208:1;26233:64;26289:7;26280:6;26269:9;26265:22;26233:64;:::i;:::-;26223:74;;26179:128;25963:351;;;;:::o;26320:180::-;26368:77;26365:1;26358:88;26465:4;26462:1;26455:15;26489:4;26486:1;26479:15;26506:191;26546:3;26565:20;26583:1;26565:20;:::i;:::-;26560:25;;26599:20;26617:1;26599:20;:::i;:::-;26594:25;;26642:1;26639;26635:9;26628:16;;26663:3;26660:1;26657:10;26654:36;;;26670:18;;:::i;:::-;26654:36;26506:191;;;;:::o;26703:180::-;26751:77;26748:1;26741:88;26848:4;26845:1;26838:15;26872:4;26869:1;26862:15;26889:320;26933:6;26970:1;26964:4;26960:12;26950:22;;27017:1;27011:4;27007:12;27038:18;27028:81;;27094:4;27086:6;27082:17;27072:27;;27028:81;27156:2;27148:6;27145:14;27125:18;27122:38;27119:84;;27175:18;;:::i;:::-;27119:84;26940:269;26889:320;;;:::o;27215:174::-;27355:26;27351:1;27343:6;27339:14;27332:50;27215:174;:::o;27395:366::-;27537:3;27558:67;27622:2;27617:3;27558:67;:::i;:::-;27551:74;;27634:93;27723:3;27634:93;:::i;:::-;27752:2;27747:3;27743:12;27736:19;;27395:366;;;:::o;27767:419::-;27933:4;27971:2;27960:9;27956:18;27948:26;;28020:9;28014:4;28010:20;28006:1;27995:9;27991:17;27984:47;28048:131;28174:4;28048:131;:::i;:::-;28040:139;;27767:419;;;:::o;28192:332::-;28313:4;28351:2;28340:9;28336:18;28328:26;;28364:71;28432:1;28421:9;28417:17;28408:6;28364:71;:::i;:::-;28445:72;28513:2;28502:9;28498:18;28489:6;28445:72;:::i;:::-;28192:332;;;;;:::o;28530:115::-;28615:23;28632:5;28615:23;:::i;:::-;28610:3;28603:36;28530:115;;:::o;28651:648::-;28848:4;28886:3;28875:9;28871:19;28863:27;;28900:71;28968:1;28957:9;28953:17;28944:6;28900:71;:::i;:::-;28981:68;29045:2;29034:9;29030:18;29021:6;28981:68;:::i;:::-;29059:70;29125:2;29114:9;29110:18;29101:6;29059:70;:::i;:::-;29139;29205:2;29194:9;29190:18;29181:6;29139:70;:::i;:::-;29219:73;29287:3;29276:9;29272:19;29263:6;29219:73;:::i;:::-;28651:648;;;;;;;;:::o;29305:140::-;29354:9;29387:52;29405:33;29414:23;29431:5;29414:23;:::i;:::-;29405:33;:::i;:::-;29387:52;:::i;:::-;29374:65;;29305:140;;;:::o;29451:129::-;29537:36;29567:5;29537:36;:::i;:::-;29532:3;29525:49;29451:129;;:::o;29586:330::-;29706:4;29744:2;29733:9;29729:18;29721:26;;29757:71;29825:1;29814:9;29810:17;29801:6;29757:71;:::i;:::-;29838;29905:2;29894:9;29890:18;29881:6;29838:71;:::i;:::-;29586:330;;;;;:::o;29922:104::-;29967:7;29996:24;30014:5;29996:24;:::i;:::-;29985:35;;29922:104;;;:::o;30032:138::-;30113:32;30139:5;30113:32;:::i;:::-;30106:5;30103:43;30093:71;;30160:1;30157;30150:12;30093:71;30032:138;:::o;30176:159::-;30241:5;30272:6;30266:13;30257:22;;30288:41;30323:5;30288:41;:::i;:::-;30176:159;;;;:::o;30341:117::-;30450:1;30447;30440:12;30464:180;30512:77;30509:1;30502:88;30609:4;30606:1;30599:15;30633:4;30630:1;30623:15;30650:281;30733:27;30755:4;30733:27;:::i;:::-;30725:6;30721:40;30863:6;30851:10;30848:22;30827:18;30815:10;30812:34;30809:62;30806:88;;;30874:18;;:::i;:::-;30806:88;30914:10;30910:2;30903:22;30693:238;30650:281;;:::o;30937:129::-;30971:6;30998:20;;:::i;:::-;30988:30;;31027:33;31055:4;31047:6;31027:33;:::i;:::-;30937:129;;;:::o;31072:307::-;31133:4;31223:18;31215:6;31212:30;31209:56;;;31245:18;;:::i;:::-;31209:56;31283:29;31305:6;31283:29;:::i;:::-;31275:37;;31367:4;31361;31357:15;31349:23;;31072:307;;;:::o;31385:432::-;31473:5;31498:65;31514:48;31555:6;31514:48;:::i;:::-;31498:65;:::i;:::-;31489:74;;31586:6;31579:5;31572:21;31624:4;31617:5;31613:16;31662:3;31653:6;31648:3;31644:16;31641:25;31638:112;;;31669:79;;:::i;:::-;31638:112;31759:52;31804:6;31799:3;31794;31759:52;:::i;:::-;31479:338;31385:432;;;;;:::o;31836:353::-;31902:5;31951:3;31944:4;31936:6;31932:17;31928:27;31918:122;;31959:79;;:::i;:::-;31918:122;32069:6;32063:13;32094:89;32179:3;32171:6;32164:4;32156:6;32152:17;32094:89;:::i;:::-;32085:98;;31908:281;31836:353;;;;:::o;32195:694::-;32291:6;32299;32348:2;32336:9;32327:7;32323:23;32319:32;32316:119;;;32354:79;;:::i;:::-;32316:119;32474:1;32499:72;32563:7;32554:6;32543:9;32539:22;32499:72;:::i;:::-;32489:82;;32445:136;32641:2;32630:9;32626:18;32620:25;32672:18;32664:6;32661:30;32658:117;;;32694:79;;:::i;:::-;32658:117;32799:73;32864:7;32855:6;32844:9;32840:22;32799:73;:::i;:::-;32789:83;;32591:291;32195:694;;;;;:::o;32895:759::-;33120:4;33158:3;33147:9;33143:19;33135:27;;33172:71;33240:1;33229:9;33225:17;33216:6;33172:71;:::i;:::-;33253:68;33317:2;33306:9;33302:18;33293:6;33253:68;:::i;:::-;33331:70;33397:2;33386:9;33382:18;33373:6;33331:70;:::i;:::-;33411:72;33479:2;33468:9;33464:18;33455:6;33411:72;:::i;:::-;33493:71;33559:3;33548:9;33544:19;33535:6;33493:71;:::i;:::-;33574:73;33642:3;33631:9;33627:19;33618:6;33574:73;:::i;:::-;32895:759;;;;;;;;;:::o;33660:194::-;33700:4;33720:20;33738:1;33720:20;:::i;:::-;33715:25;;33754:20;33772:1;33754:20;:::i;:::-;33749:25;;33798:1;33795;33791:9;33783:17;;33822:1;33816:4;33813:11;33810:37;;;33827:18;;:::i;:::-;33810:37;33660:194;;;;:::o;33860:850::-;34105:4;34143:3;34132:9;34128:19;34120:27;;34157:71;34225:1;34214:9;34210:17;34201:6;34157:71;:::i;:::-;34238:68;34302:2;34291:9;34287:18;34278:6;34238:68;:::i;:::-;34316:70;34382:2;34371:9;34367:18;34358:6;34316:70;:::i;:::-;34396:72;34464:2;34453:9;34449:18;34440:6;34396:72;:::i;:::-;34478:73;34546:3;34535:9;34531:19;34522:6;34478:73;:::i;:::-;34599:9;34593:4;34589:20;34583:3;34572:9;34568:19;34561:49;34627:76;34698:4;34689:6;34627:76;:::i;:::-;34619:84;;33860:850;;;;;;;;;:::o;34716:332::-;34837:4;34875:2;34864:9;34860:18;34852:26;;34888:71;34956:1;34945:9;34941:17;34932:6;34888:71;:::i;:::-;34969:72;35037:2;35026:9;35022:18;35013:6;34969:72;:::i;:::-;34716:332;;;;;:::o;35054:180::-;35102:77;35099:1;35092:88;35199:4;35196:1;35189:15;35223:4;35220:1;35213:15;35240:185;35280:1;35297:20;35315:1;35297:20;:::i;:::-;35292:25;;35331:20;35349:1;35331:20;:::i;:::-;35326:25;;35370:1;35360:35;;35375:18;;:::i;:::-;35360:35;35417:1;35414;35410:9;35405:14;;35240:185;;;;:::o;35431:181::-;35571:33;35567:1;35559:6;35555:14;35548:57;35431:181;:::o;35618:366::-;35760:3;35781:67;35845:2;35840:3;35781:67;:::i;:::-;35774:74;;35857:93;35946:3;35857:93;:::i;:::-;35975:2;35970:3;35966:12;35959:19;;35618:366;;;:::o;35990:419::-;36156:4;36194:2;36183:9;36179:18;36171:26;;36243:9;36237:4;36233:20;36229:1;36218:9;36214:17;36207:47;36271:131;36397:4;36271:131;:::i;:::-;36263:139;;35990:419;;;:::o;36415:878::-;36672:4;36710:3;36699:9;36695:19;36687:27;;36724:71;36792:1;36781:9;36777:17;36768:6;36724:71;:::i;:::-;36805:72;36873:2;36862:9;36858:18;36849:6;36805:72;:::i;:::-;36887;36955:2;36944:9;36940:18;36931:6;36887:72;:::i;:::-;36969;37037:2;37026:9;37022:18;37013:6;36969:72;:::i;:::-;37051:69;37115:3;37104:9;37100:19;37091:6;37051:69;:::i;:::-;37130:73;37198:3;37187:9;37183:19;37174:6;37130:73;:::i;:::-;37213;37281:3;37270:9;37266:19;37257:6;37213:73;:::i;:::-;36415:878;;;;;;;;;;:::o;37299:200::-;37338:4;37358:19;37375:1;37358:19;:::i;:::-;37353:24;;37391:19;37408:1;37391:19;:::i;:::-;37386:24;;37434:1;37431;37427:9;37419:17;;37458:10;37452:4;37449:20;37446:46;;;37472:18;;:::i;:::-;37446:46;37299:200;;;;:::o;37505:410::-;37545:7;37568:20;37586:1;37568:20;:::i;:::-;37563:25;;37602:20;37620:1;37602:20;:::i;:::-;37597:25;;37657:1;37654;37650:9;37679:30;37697:11;37679:30;:::i;:::-;37668:41;;37858:1;37849:7;37845:15;37842:1;37839:22;37819:1;37812:9;37792:83;37769:139;;37888:18;;:::i;:::-;37769:139;37553:362;37505:410;;;;:::o;37921:224::-;38061:34;38057:1;38049:6;38045:14;38038:58;38130:7;38125:2;38117:6;38113:15;38106:32;37921:224;:::o;38151:366::-;38293:3;38314:67;38378:2;38373:3;38314:67;:::i;:::-;38307:74;;38390:93;38479:3;38390:93;:::i;:::-;38508:2;38503:3;38499:12;38492:19;;38151:366;;;:::o;38523:419::-;38689:4;38727:2;38716:9;38712:18;38704:26;;38776:9;38770:4;38766:20;38762:1;38751:9;38747:17;38740:47;38804:131;38930:4;38804:131;:::i;:::-;38796:139;;38523:419;;;:::o;39134:116::-;39204:21;39219:5;39204:21;:::i;:::-;39197:5;39194:32;39184:60;;39240:1;39237;39230:12;39184:60;39134:116;:::o;39256:180::-;39298:11;39347:3;39334:17;39360:30;39384:5;39360:30;:::i;:::-;39424:5;39400:29;;39310:126;39256:180;;;:::o;39442:92::-;39474:8;39521:5;39518:1;39514:13;39493:34;;39442:92;;;:::o;39540:226::-;39597:6;39626:3;39650:22;39663:8;39650:22;:::i;:::-;39638:34;;39705:4;39701:9;39694:5;39690:21;39681:30;;39754:4;39744:8;39740:19;39733:5;39730:30;39720:40;;39604:162;39540:226;;;;:::o;39772:104::-;39816:9;39849:21;39864:5;39849:21;:::i;:::-;39836:34;;39772:104;;;:::o;39882:72::-;39922:3;39943:5;39936:12;;39882:72;;;:::o;39960:246::-;40064:33;40089:7;40064:33;:::i;:::-;40119:80;40160:38;40181:16;40160:38;:::i;:::-;40153:4;40147:11;40119:80;:::i;:::-;40113:4;40106:94;40030:176;39960:246;;:::o;40212:92::-;40244:8;40291:5;40288:1;40284:13;40263:34;;40212:92;;;:::o;40310:228::-;40367:6;40396:5;40422:22;40435:8;40422:22;:::i;:::-;40410:34;;40477:4;40473:9;40466:5;40462:21;40453:30;;40526:4;40516:8;40512:19;40505:5;40502:30;40492:40;;40374:164;40310:228;;;;:::o;40544:246::-;40648:33;40673:7;40648:33;:::i;:::-;40703:80;40744:38;40765:16;40744:38;:::i;:::-;40737:4;40731:11;40703:80;:::i;:::-;40697:4;40690:94;40614:176;40544:246;;:::o;40796:117::-;40854:7;40883:24;40901:5;40883:24;:::i;:::-;40872:35;;40796:117;;;:::o;40919:164::-;41013:45;41052:5;41013:45;:::i;:::-;41006:5;41003:56;40993:84;;41073:1;41070;41063:12;40993:84;40919:164;:::o;41089:228::-;41155:11;41204:3;41191:17;41217:54;41265:5;41217:54;:::i;:::-;41305:5;41281:29;;41167:150;41089:228;;;:::o;41323:94::-;41356:8;41404:5;41400:2;41396:14;41375:35;;41323:94;;;:::o;41423:271::-;41481:6;41510:46;41577:23;41591:8;41577:23;:::i;:::-;41565:35;;41633:4;41629:9;41622:5;41618:21;41609:30;;41682:4;41672:8;41668:19;41661:5;41658:30;41648:40;;41488:206;41423:271;;;;:::o;41700:147::-;41771:9;41804:37;41835:5;41804:37;:::i;:::-;41791:50;;41700:147;;;:::o;41853:189::-;41945:9;41978:58;42030:5;41978:58;:::i;:::-;41965:71;;41853:189;;;:::o;42048:96::-;42112:3;42133:5;42126:12;;42048:96;;;:::o;42150:367::-;42302:81;42375:7;42302:81;:::i;:::-;42405:105;42447:62;42492:16;42447:62;:::i;:::-;42440:4;42434:11;42405:105;:::i;:::-;42399:4;42392:119;42268:249;42150:367;;:::o;42523:1196::-;42707:1;42701:4;42697:12;42753:1;42746:5;42742:13;42803:12;42846:39;42871:13;42846:39;:::i;:::-;42829:56;;42899:72;42957:13;42945:10;42899:72;:::i;:::-;42664:318;;;43035:1;43029:4;43025:12;43081:2;43074:5;43070:14;43132:12;43175:39;43200:13;43175:39;:::i;:::-;43158:56;;43228:72;43286:13;43274:10;43228:72;:::i;:::-;42992:319;;;43364:1;43358:4;43354:12;43410:2;43403:5;43399:14;43461:12;43504:63;43553:13;43504:63;:::i;:::-;43487:80;;43581:120;43687:13;43675:10;43581:120;:::i;:::-;43321:391;;;42523:1196;;:::o;43725:272::-;43869:122;43983:7;43977:4;43869:122;:::i;:::-;43725:272;;:::o;44003:133::-;44046:5;44084:6;44071:20;44062:29;;44100:30;44124:5;44100:30;:::i;:::-;44003:133;;;;:::o;44142:116::-;44191:5;44216:36;44248:2;44243:3;44239:12;44234:3;44216:36;:::i;:::-;44207:45;;44142:116;;;;:::o;44264:181::-;44331:5;44369:6;44356:20;44347:29;;44385:54;44433:5;44385:54;:::i;:::-;44264:181;;;;:::o;44451:164::-;44524:5;44549:60;44605:2;44600:3;44596:12;44591:3;44549:60;:::i;:::-;44540:69;;44451:164;;;;:::o;44667:835::-;44824:4;44819:3;44815:14;44909:47;44950:4;44943:5;44939:16;44932:5;44909:47;:::i;:::-;44969:57;45020:4;45015:3;45011:14;44997:12;44969:57;:::i;:::-;44839:197;45115:47;45156:4;45149:5;45145:16;45138:5;45115:47;:::i;:::-;45175:57;45226:4;45221:3;45217:14;45203:12;45175:57;:::i;:::-;45046:196;45317:71;45382:4;45375:5;45371:16;45364:5;45317:71;:::i;:::-;45401:84;45479:4;45474:3;45470:14;45456:12;45401:84;:::i;:::-;45252:243;44793:709;44667:835;;:::o;45508:342::-;45661:4;45699:2;45688:9;45684:18;45676:26;;45712:131;45840:1;45829:9;45825:17;45816:6;45712:131;:::i;:::-;45508:342;;;;:::o;45856:112::-;45909:7;45938:24;45956:5;45938:24;:::i;:::-;45927:35;;45856:112;;;:::o;45974:154::-;46063:40;46097:5;46063:40;:::i;:::-;46056:5;46053:51;46043:79;;46118:1;46115;46108:12;46043:79;45974:154;:::o;46134:175::-;46207:5;46238:6;46232:13;46223:22;;46254:49;46297:5;46254:49;:::i;:::-;46134:175;;;;:::o;46315:383::-;46401:6;46450:2;46438:9;46429:7;46425:23;46421:32;46418:119;;;46456:79;;:::i;:::-;46418:119;46576:1;46601:80;46673:7;46664:6;46653:9;46649:22;46601:80;:::i;:::-;46591:90;;46547:144;46315:383;;;;:::o;46704:332::-;46825:4;46863:2;46852:9;46848:18;46840:26;;46876:71;46944:1;46933:9;46929:17;46920:6;46876:71;:::i;:::-;46957:72;47025:2;47014:9;47010:18;47001:6;46957:72;:::i;:::-;46704:332;;;;;:::o;47042:179::-;47182:31;47178:1;47170:6;47166:14;47159:55;47042:179;:::o;47227:366::-;47369:3;47390:67;47454:2;47449:3;47390:67;:::i;:::-;47383:74;;47466:93;47555:3;47466:93;:::i;:::-;47584:2;47579:3;47575:12;47568:19;;47227:366;;;:::o;47599:419::-;47765:4;47803:2;47792:9;47788:18;47780:26;;47852:9;47846:4;47842:20;47838:1;47827:9;47823:17;47816:47;47880:131;48006:4;47880:131;:::i;:::-;47872:139;;47599:419;;;:::o;48024:775::-;48257:4;48295:3;48284:9;48280:19;48272:27;;48309:71;48377:1;48366:9;48362:17;48353:6;48309:71;:::i;:::-;48390:72;48458:2;48447:9;48443:18;48434:6;48390:72;:::i;:::-;48472;48540:2;48529:9;48525:18;48516:6;48472:72;:::i;:::-;48554;48622:2;48611:9;48607:18;48598:6;48554:72;:::i;:::-;48636:73;48704:3;48693:9;48689:19;48680:6;48636:73;:::i;:::-;48719;48787:3;48776:9;48772:19;48763:6;48719:73;:::i;:::-;48024:775;;;;;;;;;:::o;48805:180::-;48945:32;48941:1;48933:6;48929:14;48922:56;48805:180;:::o;48991:366::-;49133:3;49154:67;49218:2;49213:3;49154:67;:::i;:::-;49147:74;;49230:93;49319:3;49230:93;:::i;:::-;49348:2;49343:3;49339:12;49332:19;;48991:366;;;:::o;49363:419::-;49529:4;49567:2;49556:9;49552:18;49544:26;;49616:9;49610:4;49606:20;49602:1;49591:9;49587:17;49580:47;49644:131;49770:4;49644:131;:::i;:::-;49636:139;;49363:419;;;:::o;49788:224::-;49928:34;49924:1;49916:6;49912:14;49905:58;49997:7;49992:2;49984:6;49980:15;49973:32;49788:224;:::o;50018:366::-;50160:3;50181:67;50245:2;50240:3;50181:67;:::i;:::-;50174:74;;50257:93;50346:3;50257:93;:::i;:::-;50375:2;50370:3;50366:12;50359:19;;50018:366;;;:::o;50390:419::-;50556:4;50594:2;50583:9;50579:18;50571:26;;50643:9;50637:4;50633:20;50629:1;50618:9;50614:17;50607:47;50671:131;50797:4;50671:131;:::i;:::-;50663:139;;50390:419;;;:::o;50815:223::-;50955:34;50951:1;50943:6;50939:14;50932:58;51024:6;51019:2;51011:6;51007:15;51000:31;50815:223;:::o;51044:366::-;51186:3;51207:67;51271:2;51266:3;51207:67;:::i;:::-;51200:74;;51283:93;51372:3;51283:93;:::i;:::-;51401:2;51396:3;51392:12;51385:19;;51044:366;;;:::o;51416:419::-;51582:4;51620:2;51609:9;51605:18;51597:26;;51669:9;51663:4;51659:20;51655:1;51644:9;51640:17;51633:47;51697:131;51823:4;51697:131;:::i;:::-;51689:139;;51416:419;;;:::o;51841:221::-;51981:34;51977:1;51969:6;51965:14;51958:58;52050:4;52045:2;52037:6;52033:15;52026:29;51841:221;:::o;52068:366::-;52210:3;52231:67;52295:2;52290:3;52231:67;:::i;:::-;52224:74;;52307:93;52396:3;52307:93;:::i;:::-;52425:2;52420:3;52416:12;52409:19;;52068:366;;;:::o;52440:419::-;52606:4;52644:2;52633:9;52629:18;52621:26;;52693:9;52687:4;52683:20;52679:1;52668:9;52664:17;52657:47;52721:131;52847:4;52721:131;:::i;:::-;52713:139;;52440:419;;;:::o;52865:179::-;53005:31;53001:1;52993:6;52989:14;52982:55;52865:179;:::o;53050:366::-;53192:3;53213:67;53277:2;53272:3;53213:67;:::i;:::-;53206:74;;53289:93;53378:3;53289:93;:::i;:::-;53407:2;53402:3;53398:12;53391:19;;53050:366;;;:::o;53422:419::-;53588:4;53626:2;53615:9;53611:18;53603:26;;53675:9;53669:4;53665:20;53661:1;53650:9;53646:17;53639:47;53703:131;53829:4;53703:131;:::i;:::-;53695:139;;53422:419;;;:::o;53847:438::-;53994:4;54032:2;54021:9;54017:18;54009:26;;54045:71;54113:1;54102:9;54098:17;54089:6;54045:71;:::i;:::-;54126:72;54194:2;54183:9;54179:18;54170:6;54126:72;:::i;:::-;54208:70;54274:2;54263:9;54259:18;54250:6;54208:70;:::i;:::-;53847:438;;;;;;:::o;54291:328::-;54410:4;54448:2;54437:9;54433:18;54425:26;;54461:71;54529:1;54518:9;54514:17;54505:6;54461:71;:::i;:::-;54542:70;54608:2;54597:9;54593:18;54584:6;54542:70;:::i;:::-;54291:328;;;;;:::o;54625:332::-;54746:4;54784:2;54773:9;54769:18;54761:26;;54797:71;54865:1;54854:9;54850:17;54841:6;54797:71;:::i;:::-;54878:72;54946:2;54935:9;54931:18;54922:6;54878:72;:::i;:::-;54625:332;;;;;:::o;54963:442::-;55112:4;55150:2;55139:9;55135:18;55127:26;;55163:71;55231:1;55220:9;55216:17;55207:6;55163:71;:::i;:::-;55244:72;55312:2;55301:9;55297:18;55288:6;55244:72;:::i;:::-;55326;55394:2;55383:9;55379:18;55370:6;55326:72;:::i;:::-;54963:442;;;;;;:::o;55411:171::-;55551:23;55547:1;55539:6;55535:14;55528:47;55411:171;:::o;55588:366::-;55730:3;55751:67;55815:2;55810:3;55751:67;:::i;:::-;55744:74;;55827:93;55916:3;55827:93;:::i;:::-;55945:2;55940:3;55936:12;55929:19;;55588:366;;;:::o;55960:419::-;56126:4;56164:2;56153:9;56149:18;56141:26;;56213:9;56207:4;56203:20;56199:1;56188:9;56184:17;56177:47;56241:131;56367:4;56241:131;:::i;:::-;56233:139;;55960:419;;;:::o;56385:140::-;56434:9;56467:52;56485:33;56494:23;56511:5;56494:23;:::i;:::-;56485:33;:::i;:::-;56467:52;:::i;:::-;56454:65;;56385:140;;;:::o;56531:129::-;56617:36;56647:5;56617:36;:::i;:::-;56612:3;56605:49;56531:129;;:::o;56666:328::-;56785:4;56823:2;56812:9;56808:18;56800:26;;56836:70;56903:1;56892:9;56888:17;56879:6;56836:70;:::i;:::-;56916:71;56983:2;56972:9;56968:18;56959:6;56916:71;:::i;:::-;56666:328;;;;;:::o;57000:220::-;57092:4;57130:2;57119:9;57115:18;57107:26;;57143:70;57210:1;57199:9;57195:17;57186:6;57143:70;:::i;:::-;57000:220;;;;:::o;57226:180::-;57274:77;57271:1;57264:88;57371:4;57368:1;57361:15;57395:4;57392:1;57385:15;57412:225;57552:34;57548:1;57540:6;57536:14;57529:58;57621:8;57616:2;57608:6;57604:15;57597:33;57412:225;:::o;57643:366::-;57785:3;57806:67;57870:2;57865:3;57806:67;:::i;:::-;57799:74;;57882:93;57971:3;57882:93;:::i;:::-;58000:2;57995:3;57991:12;57984:19;;57643:366;;;:::o;58015:419::-;58181:4;58219:2;58208:9;58204:18;58196:26;;58268:9;58262:4;58258:20;58254:1;58243:9;58239:17;58232:47;58296:131;58422:4;58296:131;:::i;:::-;58288:139;;58015:419;;;:::o;58440:664::-;58645:4;58683:3;58672:9;58668:19;58660:27;;58697:71;58765:1;58754:9;58750:17;58741:6;58697:71;:::i;:::-;58778:72;58846:2;58835:9;58831:18;58822:6;58778:72;:::i;:::-;58860;58928:2;58917:9;58913:18;58904:6;58860:72;:::i;:::-;58942;59010:2;58999:9;58995:18;58986:6;58942:72;:::i;:::-;59024:73;59092:3;59081:9;59077:19;59068:6;59024:73;:::i;:::-;58440:664;;;;;;;;:::o;59110:442::-;59259:4;59297:2;59286:9;59282:18;59274:26;;59310:71;59378:1;59367:9;59363:17;59354:6;59310:71;:::i;:::-;59391:72;59459:2;59448:9;59444:18;59435:6;59391:72;:::i;:::-;59473;59541:2;59530:9;59526:18;59517:6;59473:72;:::i;:::-;59110:442;;;;;;:::o;59558:85::-;59603:7;59632:5;59621:16;;59558:85;;;:::o;59649:154::-;59705:9;59738:59;59754:42;59763:32;59789:5;59763:32;:::i;:::-;59754:42;:::i;:::-;59738:59;:::i;:::-;59725:72;;59649:154;;;:::o;59809:143::-;59902:43;59939:5;59902:43;:::i;:::-;59897:3;59890:56;59809:143;;:::o;59958:344::-;60085:4;60123:2;60112:9;60108:18;60100:26;;60136:71;60204:1;60193:9;60189:17;60180:6;60136:71;:::i;:::-;60217:78;60291:2;60280:9;60276:18;60267:6;60217:78;:::i;:::-;59958:344;;;;;:::o;60308:545::-;60481:4;60519:3;60508:9;60504:19;60496:27;;60533:71;60601:1;60590:9;60586:17;60577:6;60533:71;:::i;:::-;60614:68;60678:2;60667:9;60663:18;60654:6;60614:68;:::i;:::-;60692:72;60760:2;60749:9;60745:18;60736:6;60692:72;:::i;:::-;60774;60842:2;60831:9;60827:18;60818:6;60774:72;:::i;:::-;60308:545;;;;;;;:::o;60859:174::-;60999:26;60995:1;60987:6;60983:14;60976:50;60859:174;:::o;61039:366::-;61181:3;61202:67;61266:2;61261:3;61202:67;:::i;:::-;61195:74;;61278:93;61367:3;61278:93;:::i;:::-;61396:2;61391:3;61387:12;61380:19;;61039:366;;;:::o;61411:419::-;61577:4;61615:2;61604:9;61600:18;61592:26;;61664:9;61658:4;61654:20;61650:1;61639:9;61635:17;61628:47;61692:131;61818:4;61692:131;:::i;:::-;61684:139;;61411:419;;;:::o;61836:181::-;61976:33;61972:1;61964:6;61960:14;61953:57;61836:181;:::o;62023:366::-;62165:3;62186:67;62250:2;62245:3;62186:67;:::i;:::-;62179:74;;62262:93;62351:3;62262:93;:::i;:::-;62380:2;62375:3;62371:12;62364:19;;62023:366;;;:::o;62395:419::-;62561:4;62599:2;62588:9;62584:18;62576:26;;62648:9;62642:4;62638:20;62634:1;62623:9;62619:17;62612:47;62676:131;62802:4;62676:131;:::i;:::-;62668:139;;62395:419;;;:::o;62820:221::-;62960:34;62956:1;62948:6;62944:14;62937:58;63029:4;63024:2;63016:6;63012:15;63005:29;62820:221;:::o;63047:366::-;63189:3;63210:67;63274:2;63269:3;63210:67;:::i;:::-;63203:74;;63286:93;63375:3;63286:93;:::i;:::-;63404:2;63399:3;63395:12;63388:19;;63047:366;;;:::o;63419:419::-;63585:4;63623:2;63612:9;63608:18;63600:26;;63672:9;63666:4;63662:20;63658:1;63647:9;63643:17;63636:47;63700:131;63826:4;63700:131;:::i;:::-;63692:139;;63419:419;;;:::o;63844:137::-;63898:5;63929:6;63923:13;63914:22;;63945:30;63969:5;63945:30;:::i;:::-;63844:137;;;;:::o;63987:345::-;64054:6;64103:2;64091:9;64082:7;64078:23;64074:32;64071:119;;;64109:79;;:::i;:::-;64071:119;64229:1;64254:61;64307:7;64298:6;64287:9;64283:22;64254:61;:::i;:::-;64244:71;;64200:125;63987:345;;;;:::o;64338:229::-;64478:34;64474:1;64466:6;64462:14;64455:58;64547:12;64542:2;64534:6;64530:15;64523:37;64338:229;:::o;64573:366::-;64715:3;64736:67;64800:2;64795:3;64736:67;:::i;:::-;64729:74;;64812:93;64901:3;64812:93;:::i;:::-;64930:2;64925:3;64921:12;64914:19;;64573:366;;;:::o;64945:419::-;65111:4;65149:2;65138:9;65134:18;65126:26;;65198:9;65192:4;65188:20;65184:1;65173:9;65169:17;65162:47;65226:131;65352:4;65226:131;:::i;:::-;65218:139;;64945:419;;;:::o;65370:147::-;65471:11;65508:3;65493:18;;65370:147;;;;:::o;65523:386::-;65627:3;65655:38;65687:5;65655:38;:::i;:::-;65709:88;65790:6;65785:3;65709:88;:::i;:::-;65702:95;;65806:65;65864:6;65859:3;65852:4;65845:5;65841:16;65806:65;:::i;:::-;65896:6;65891:3;65887:16;65880:23;;65631:278;65523:386;;;;:::o;65915:271::-;66045:3;66067:93;66156:3;66147:6;66067:93;:::i;:::-;66060:100;;66177:3;66170:10;;65915:271;;;;:::o;66192:225::-;66332:34;66328:1;66320:6;66316:14;66309:58;66401:8;66396:2;66388:6;66384:15;66377:33;66192:225;:::o;66423:366::-;66565:3;66586:67;66650:2;66645:3;66586:67;:::i;:::-;66579:74;;66662:93;66751:3;66662:93;:::i;:::-;66780:2;66775:3;66771:12;66764:19;;66423:366;;;:::o;66795:419::-;66961:4;66999:2;66988:9;66984:18;66976:26;;67048:9;67042:4;67038:20;67034:1;67023:9;67019:17;67012:47;67076:131;67202:4;67076:131;:::i;:::-;67068:139;;66795:419;;;:::o;67220:179::-;67360:31;67356:1;67348:6;67344:14;67337:55;67220:179;:::o;67405:366::-;67547:3;67568:67;67632:2;67627:3;67568:67;:::i;:::-;67561:74;;67644:93;67733:3;67644:93;:::i;:::-;67762:2;67757:3;67753:12;67746:19;;67405:366;;;:::o;67777:419::-;67943:4;67981:2;67970:9;67966:18;67958:26;;68030:9;68024:4;68020:20;68016:1;68005:9;68001:17;67994:47;68058:131;68184:4;68058:131;:::i;:::-;68050:139;;67777:419;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "53088": [
        {
          "start": 16512,
          "length": 32
        }
      ],
      "53090": [
        {
          "start": 16471,
          "length": 32
        }
      ],
      "53092": [
        {
          "start": 16385,
          "length": 32
        }
      ],
      "53094": [
        {
          "start": 20847,
          "length": 32
        }
      ],
      "53096": [
        {
          "start": 20880,
          "length": 32
        }
      ],
      "53099": [
        {
          "start": 10496,
          "length": 32
        }
      ],
      "53102": [
        {
          "start": 10548,
          "length": 32
        }
      ],
      "79515": [
        {
          "start": 4462,
          "length": 32
        },
        {
          "start": 4923,
          "length": 32
        },
        {
          "start": 7262,
          "length": 32
        },
        {
          "start": 15481,
          "length": 32
        }
      ],
      "79519": [
        {
          "start": 3805,
          "length": 32
        },
        {
          "start": 3865,
          "length": 32
        },
        {
          "start": 7491,
          "length": 32
        },
        {
          "start": 7866,
          "length": 32
        },
        {
          "start": 7926,
          "length": 32
        },
        {
          "start": 11295,
          "length": 32
        },
        {
          "start": 17278,
          "length": 32
        },
        {
          "start": 17383,
          "length": 32
        },
        {
          "start": 17537,
          "length": 32
        },
        {
          "start": 18329,
          "length": 32
        },
        {
          "start": 18494,
          "length": 32
        },
        {
          "start": 19302,
          "length": 32
        },
        {
          "start": 19362,
          "length": 32
        }
      ],
      "79535": [
        {
          "start": 3653,
          "length": 32
        },
        {
          "start": 4657,
          "length": 32
        },
        {
          "start": 7127,
          "length": 32
        },
        {
          "start": 7336,
          "length": 32
        },
        {
          "start": 7714,
          "length": 32
        },
        {
          "start": 8585,
          "length": 32
        },
        {
          "start": 8744,
          "length": 32
        },
        {
          "start": 9993,
          "length": 32
        },
        {
          "start": 11509,
          "length": 32
        },
        {
          "start": 11592,
          "length": 32
        },
        {
          "start": 13001,
          "length": 32
        },
        {
          "start": 13652,
          "length": 32
        },
        {
          "start": 17049,
          "length": 32
        },
        {
          "start": 17121,
          "length": 32
        },
        {
          "start": 17312,
          "length": 32
        },
        {
          "start": 18166,
          "length": 32
        },
        {
          "start": 18710,
          "length": 32
        }
      ],
      "79538": [
        {
          "start": 6647,
          "length": 32
        }
      ],
      "81785": [
        {
          "start": 4499,
          "length": 32
        },
        {
          "start": 9172,
          "length": 32
        },
        {
          "start": 11365,
          "length": 32
        },
        {
          "start": 15714,
          "length": 32
        },
        {
          "start": 16135,
          "length": 32
        },
        {
          "start": 21630,
          "length": 32
        }
      ],
      "81981": [
        {
          "start": 6124,
          "length": 32
        },
        {
          "start": 9131,
          "length": 32
        },
        {
          "start": 9461,
          "length": 32
        },
        {
          "start": 12421,
          "length": 32
        },
        {
          "start": 12678,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "FEE_PRECISION()": "e63a391f",
    "HOOK_GAS()": "4006522b",
    "HOOK_RETURN_DATA_LIMIT()": "d30ae1b4",
    "MAX_YIELD_FEE()": "1caa73cb",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "asset()": "38d52e0f",
    "availableYieldBalance()": "0d1e5255",
    "balanceOf(address)": "70a08231",
    "claimOwnership()": "4e71e0c8",
    "claimPrize(address,uint8,uint32,uint96,address)": "2895cace",
    "claimYieldFeeShares(uint256)": "353d5a18",
    "claimer()": "d379be23",
    "convertToAssets(uint256)": "07a2d13a",
    "convertToShares(uint256)": "c6e6f592",
    "currentYieldBuffer()": "237fd108",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deposit(uint256,address)": "6e553f65",
    "depositWithPermit(uint256,address,uint256,uint8,bytes32,bytes32)": "50921b23",
    "eip712Domain()": "84b0196e",
    "getHooks(address)": "de03f408",
    "increaseAllowance(address,uint256)": "39509351",
    "isLiquidationPair(address,address)": "1b571924",
    "liquidatableBalanceOf(address)": "b0fcf626",
    "liquidationPair()": "649f2394",
    "maxDeposit(address)": "402d267d",
    "maxMint(address)": "c63d75b6",
    "maxRedeem(address)": "d905777e",
    "maxWithdraw(address)": "ce96cb77",
    "mint(uint256,address)": "94bf804d",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "previewDeposit(uint256)": "ef8b30f7",
    "previewMint(uint256)": "b3d7f6b9",
    "previewRedeem(uint256)": "4cdad506",
    "previewWithdraw(uint256)": "0a28a477",
    "prizePool()": "719ce73e",
    "redeem(uint256,address,address)": "ba087652",
    "redeem(uint256,address,address,uint256)": "9f40a7b3",
    "renounceOwnership()": "715018a6",
    "setClaimer(address)": "cdfb5832",
    "setHooks((bool,bool,address))": "c78c72c1",
    "setLiquidationPair(address)": "25fa66e0",
    "setYieldFeePercentage(uint32)": "e4e243ac",
    "setYieldFeeRecipient(address)": "63003b16",
    "symbol()": "95d89b41",
    "targetOf(address)": "700f04ef",
    "totalAssets()": "01e1d114",
    "totalDebt()": "fc7b9c18",
    "totalPreciseAssets()": "4244aa9b",
    "totalSupply()": "18160ddd",
    "totalYieldBalance()": "d4122abf",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "transferTokensOut(address,address,address,uint256)": "7cc99d3f",
    "twabController()": "b0812d7b",
    "verifyTokensIn(address,uint256,bytes)": "c8576e61",
    "withdraw(uint256,address,address)": "b460af94",
    "withdraw(uint256,address,address,uint256)": "a318c1a4",
    "yieldBuffer()": "13dc6c5d",
    "yieldFeeBalance()": "9a1adf9a",
    "yieldFeePercentage()": "e16777c1",
    "yieldFeeRecipient()": "edb8eb80",
    "yieldVault()": "a7f8a5e2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"contract IERC4626\",\"name\":\"yieldVault_\",\"type\":\"address\"},{\"internalType\":\"contract PrizePool\",\"name\":\"prizePool_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimer_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"yieldFeeRecipient_\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"yieldFeePercentage_\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"yieldBuffer_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BurnZeroShares\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"CallerNotClaimer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidationPair\",\"type\":\"address\"}],\"name\":\"CallerNotLP\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"yieldFeeRecipient\",\"type\":\"address\"}],\"name\":\"CallerNotYieldFeeRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimRecipientZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimerZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositZeroAssets\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"FailedToGetAssetDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LPZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidationAmountOutZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalToWithdraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableYield\",\"type\":\"uint256\"}],\"name\":\"LiquidationExceedsAvailable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prizeToken\",\"type\":\"address\"}],\"name\":\"LiquidationTokenInNotPrizeToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"LiquidationTokenOutNotSupported\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAssets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"LossyDeposit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"name\":\"MaxSharesExceeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAssets\",\"type\":\"uint256\"}],\"name\":\"MinAssetsNotReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"excess\",\"type\":\"uint256\"}],\"name\":\"MintLimitExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroShares\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PermitCallerNotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrizePoolZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"returnDataSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hookDataLimit\",\"type\":\"uint256\"}],\"name\":\"ReturnDataOverLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yieldFeeBalance\",\"type\":\"uint256\"}],\"name\":\"SharesExceedsYieldFeeBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TwabControllerZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawZeroAssets\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"yieldFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxYieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"YieldFeePercentageExceedsMax\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"YieldVaultZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroTotalAssets\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"ClaimYieldFeeShares\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidationPair\",\"type\":\"address\"}],\"name\":\"LiquidationPairSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"OwnershipOffered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"useBeforeClaimPrize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useAfterClaimPrize\",\"type\":\"bool\"},{\"internalType\":\"contract IPrizeHooks\",\"name\":\"implementation\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct PrizeHooks\",\"name\":\"hooks\",\"type\":\"tuple\"}],\"name\":\"SetHooks\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidationPair\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"yieldFee\",\"type\":\"uint256\"}],\"name\":\"TransferYieldOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"yieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"YieldFeePercentageSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"yieldFeeRecipient\",\"type\":\"address\"}],\"name\":\"YieldFeeRecipientSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_PRECISION\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HOOK_GAS\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HOOK_RETURN_DATA_LIMIT\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_YIELD_FEE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableYieldBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_winner\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_tier\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"_prizeIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"_reward\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_rewardRecipient\",\"type\":\"address\"}],\"name\":\"claimPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"claimYieldFeeShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentYieldBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"depositWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getHooks\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"useBeforeClaimPrize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useAfterClaimPrize\",\"type\":\"bool\"},{\"internalType\":\"contract IPrizeHooks\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct PrizeHooks\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidationPair\",\"type\":\"address\"}],\"name\":\"isLiquidationPair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"}],\"name\":\"liquidatableBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prizePool\",\"outputs\":[{\"internalType\":\"contract PrizePool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minAssets\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"setClaimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"useBeforeClaimPrize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"useAfterClaimPrize\",\"type\":\"bool\"},{\"internalType\":\"contract IPrizeHooks\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct PrizeHooks\",\"name\":\"hooks\",\"type\":\"tuple\"}],\"name\":\"setHooks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidationPair\",\"type\":\"address\"}],\"name\":\"setLiquidationPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_yieldFeePercentage\",\"type\":\"uint32\"}],\"name\":\"setYieldFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_yieldFeeRecipient\",\"type\":\"address\"}],\"name\":\"setYieldFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"targetOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPreciseAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalYieldBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"}],\"name\":\"transferTokensOut\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twabController\",\"outputs\":[{\"internalType\":\"contract TwabController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"verifyTokensIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxShares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldFeeBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldFeePercentage\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldVault\",\"outputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"G9 Software Inc.\",\"details\":\"Share balances are stored in the TwabController contract.Depositors should always expect to be able to withdraw their full deposit amount and no more as long as         global withdrawal limits meet or exceed their balance. However, if the underlying yield source loses         assets, depositors will only be able to withdraw a proportional amount of remaining assets based on their         share balance and the total debt balance.The prize vault is designed to embody the \\\"no loss\\\" spirit of PoolTogether, down to the last wei. Most          ERC4626 yield vaults incur small, necessary rounding errors on deposit and withdrawal to ensure the         internal accounting cannot be taken advantage of. The prize vault employs two strategies in an attempt         to cover these rounding errors with yield to ensure that depositors can withdraw every last wei of their         initial deposit:             1. The \\\"dust collection strategy\\\":                Rounding errors are directly related to the exchange rate of the underlying yield vault; the more                assets a single yield vault share is worth, the more severe the rounding errors can become. For                example, if the exchange rate is 100 assets for 1 yield vault share and we assume 0 decimal                precision; if alice deposits 199 assets, the yield vault will round down on the conversion and mint                alice 1 share, essentially donating the remaining 99 assets to the yield vault. This behavior can                open pathways for exploits in the prize vault since a bad actor could repeatedly make deposits and                withdrawals that result in large rounding errors and since the prize vault covers rounding errors                with yield, the attacker could withdraw without loss while essentially donating the yield back to                the yield vault.                To mitigate this issue, the prize vault calculates the amount of yield vault shares that would be                minted during a deposit, but mints those shares directly instead, ensuring that only the exact                amount of assets needed are sent to the yield vault while keeping the remainder as a latent balance                in the prize vault until it can be used in the next deposit or withdraw. An inverse strategy is also                used when withdrawing assets from the yield vault. This reduces the possible rounding errors to just                1 wei per deposit or withdraw.             2. The \\\"yield buffer\\\":                Since the prize vault can still incur minimal rounding errors from the yield vault, a yield buffer                is required to ensure that there is always enough yield reserved to cover the rounding errors on                 deposits and withdrawals. This buffer should never run dry during normal operating conditions and                expected yield rates. If the yield buffer is ever depleted, new deposits will be prevented and the                prize vault will enter a lossy withdrawal state where depositors will incur the rounding errors on                withdraw.The prize vault does not support underlying yield vaults that take a fee on deposit or withdraw.\",\"errors\":{\"CallerNotClaimer(address,address)\":[{\"params\":{\"caller\":\"The caller address\",\"claimer\":\"The claimer address\"}}],\"CallerNotLP(address,address)\":[{\"params\":{\"caller\":\"The caller address\",\"liquidationPair\":\"The LP address\"}}],\"CallerNotYieldFeeRecipient(address,address)\":[{\"params\":{\"caller\":\"The caller address\",\"yieldFeeRecipient\":\"The yield fee recipient address\"}}],\"FailedToGetAssetDecimals(address)\":[{\"params\":{\"asset\":\"The underlying asset that was checked\"}}],\"LiquidationExceedsAvailable(uint256,uint256)\":[{\"params\":{\"availableYield\":\"The available yield\",\"totalToWithdraw\":\"The total yield to withdraw\"}}],\"LiquidationTokenInNotPrizeToken(address,address)\":[{\"params\":{\"prizeToken\":\"The prize token address\",\"tokenIn\":\"The provided tokenIn address\"}}],\"LiquidationTokenOutNotSupported(address)\":[{\"params\":{\"tokenOut\":\"The provided tokenOut address\"}}],\"LossyDeposit(uint256,uint256)\":[{\"params\":{\"totalAssets\":\"The total assets controlled by the vault\",\"totalSupply\":\"The total shares minted and internally accounted for by the vault\"}}],\"MaxSharesExceeded(uint256,uint256)\":[{\"params\":{\"maxShares\":\"The max share limit provided\",\"shares\":\"The shares burned by the withdrawal\"}}],\"MinAssetsNotReached(uint256,uint256)\":[{\"params\":{\"assets\":\"The assets provided by the redemption\",\"minAssets\":\"The min asset threshold requested\"}}],\"MintLimitExceeded(uint256)\":[{\"params\":{\"excess\":\"The amount in excess over the limit\"}}],\"PermitCallerNotOwner(address,address)\":[{\"params\":{\"caller\":\"The address of the caller\",\"owner\":\"The address of the owner\"}}],\"ReturnDataOverLimit(uint256,uint256)\":[{\"params\":{\"hookDataLimit\":\"The return data size limit for hooks\",\"returnDataSize\":\"The actual size of the return data\"}}],\"SharesExceedsYieldFeeBalance(uint256,uint256)\":[{\"params\":{\"shares\":\"The shares being withdrawn\",\"yieldFeeBalance\":\"The available yield fee shares\"}}],\"YieldFeePercentageExceedsMax(uint256,uint256)\":[{\"params\":{\"maxYieldFeePercentage\":\"The max yield fee percentage in integer format\",\"yieldFeePercentage\":\"The yield fee percentage in integer format\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"ClaimYieldFeeShares(address,uint256)\":{\"params\":{\"recipient\":\"Address receiving the fee shares\",\"shares\":\"Amount of shares claimed\"}},\"ClaimerSet(address)\":{\"details\":\"This event MUST be emitted when a new claimer has been set.\",\"params\":{\"claimer\":\"Address of the new claimer\"}},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"LiquidationPairSet(address,address)\":{\"params\":{\"liquidationPair\":\"The new liquidation pair for the token\",\"tokenOut\":\"The token being liquidated\"}},\"OwnershipOffered(address)\":{\"details\":\"Emitted when `_pendingOwner` has been changed.\",\"params\":{\"pendingOwner\":\"new `_pendingOwner` address.\"}},\"OwnershipTransferred(address,address)\":{\"details\":\"Emitted when `_owner` has been changed.\",\"params\":{\"newOwner\":\"new `_owner` address.\",\"previousOwner\":\"previous `_owner` address.\"}},\"SetHooks(address,(bool,bool,address))\":{\"params\":{\"account\":\"The account whose hooks are being configured\",\"hooks\":\"The hooks being set\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"TransferYieldOut(address,address,address,uint256,uint256)\":{\"params\":{\"amountOut\":\"The amount of tokens sent to the recipient\",\"liquidationPair\":\"The liquidation pair address that initiated the transfer\",\"recipient\":\"The recipient of the tokens\",\"tokenOut\":\"The token that was transferred out\",\"yieldFee\":\"The amount of shares accrued on the yield fee balance\"}},\"YieldFeePercentageSet(uint256)\":{\"params\":{\"yieldFeePercentage\":\"New yield fee percentage\"}},\"YieldFeeRecipientSet(address)\":{\"params\":{\"yieldFeeRecipient\":\"Address of the new yield fee recipient\"}}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"availableYieldBalance()\":{\"details\":\"Equal to total assets minus total allocation (total debt + yield buffer)\",\"returns\":{\"_0\":\"The available yield balance\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"claimOwnership()\":{\"details\":\"This function is only callable by the `_pendingOwner`.\"},\"claimPrize(address,uint8,uint32,uint96,address)\":{\"details\":\"Also calls the before and after claim hooks if set by the winner.Reverts if the return data size of the `beforeClaimPrize` hook exceeds `HOOK_RETURN_DATA_LIMIT`.\",\"params\":{\"_prizeIndex\":\"The prize index\",\"_reward\":\"The reward to allocate to the reward recipient, in prize tokens\",\"_rewardRecipient\":\"The recipient of the reward\",\"_tier\":\"The prize tier\",\"_winner\":\"The winner of the prize\"},\"returns\":{\"_0\":\"The total prize token amount claimed (zero if already claimed)\"}},\"claimYieldFeeShares(uint256)\":{\"details\":\"Emits a `ClaimYieldFeeShares` eventWill revert if the caller is not the yield fee recipient or if zero shares are withdrawn\",\"params\":{\"_shares\":\"The shares to mint to the yield fee recipient\"}},\"constructor\":{\"params\":{\"claimer_\":\"Address of the claimer\",\"name_\":\"Name of the ERC20 share minted by the vault\",\"owner_\":\"Address that will gain ownership of this contract\",\"prizePool_\":\"Address of the PrizePool that computes prizes\",\"symbol_\":\"Symbol of the ERC20 share minted by the vault\",\"yieldBuffer_\":\"Amount of yield to keep as a buffer\",\"yieldFeePercentage_\":\"Yield fee percentage\",\"yieldFeeRecipient_\":\"Address of the yield fee recipient\",\"yieldVault_\":\"Address of the underlying ERC4626 vault in which assets are deposited to generate yield\"}},\"convertToAssets(uint256)\":{\"details\":\"This function uses approximate total assets and should not be used for onchain conversions.\"},\"convertToShares(uint256)\":{\"details\":\"This function uses approximate total assets and should not be used for onchain conversions.\"},\"currentYieldBuffer()\":{\"returns\":{\"_0\":\"The available assets in the yield buffer\"}},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"depositWithPermit(uint256,address,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Can't be used to deposit on behalf of another user since `permit` does not accept a receiver parameter, meaning that anyone could reuse the signature and pass an arbitrary receiver to this function.\",\"params\":{\"_assets\":\"Amount of assets to approve and deposit\",\"_deadline\":\"Timestamp after which the approval is no longer valid\",\"_owner\":\"Address of the owner depositing `_assets` and signing the permit\",\"_r\":\"R part of the secp256k1 signature\",\"_s\":\"S part of the secp256k1 signature\",\"_v\":\"V part of the secp256k1 signature\"},\"returns\":{\"_0\":\"Amount of Vault shares minted to `_owner`.\"}},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getHooks(address)\":{\"params\":{\"account\":\"The account to retrieve the hooks for\"},\"returns\":{\"_0\":\"PrizeHooks The hooks for the given account\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isLiquidationPair(address,address)\":{\"params\":{\"liquidationPair\":\"The address of the liquidation pair that is being checked\",\"tokenOut\":\"The address of the token to liquidate\"},\"returns\":{\"_0\":\"bool True if the liquidation pair can be used, false otherwise\"}},\"liquidatableBalanceOf(address)\":{\"details\":\"Returns the liquid amount of `_tokenOut` minus any yield fees.Supports the liquidation of either assets or prize vault shares.\",\"params\":{\"tokenOut\":\"Address of the token to get available balance for\"},\"returns\":{\"_0\":\"uint256 Available amount of `token`\"}},\"maxDeposit(address)\":{\"details\":\"Considers the TWAB mint limitReturns zero if any deposit would result in a loss of assetsReturns zero if total assets cannot be determinedReturns zero if the yield buffer is less than half full. This is a safety precaution to ensure a deposit of the asset amount returned by this function cannot reasonably trigger a `LossyDeposit` revert in the `deposit` or `mint` functions if the yield buffer has been configured properly.Any latent balance of assets in the prize vault will be swept in with the deposit as a part of the \\\"dust collection strategy\\\". This means that the max deposit must account for the latent balance by subtracting it from the max deposit available otherwise.\"},\"maxMint(address)\":{\"details\":\"Returns the same value as `maxDeposit` since shares and assets are 1:1 on mintReturns zero if any deposit would result in a loss of assets\"},\"maxRedeem(address)\":{\"details\":\"The prize vault maintains a latent balance of assets as part of the \\\"dust collection strategy\\\". This latent balance are accounted for in the max redeem limits.Returns zero if total assets cannot be determined\"},\"maxWithdraw(address)\":{\"details\":\"The prize vault maintains a latent balance of assets as part of the \\\"dust collection strategy\\\". This latent balance are accounted for in the max withdraw limits.Returns zero if total assets cannot be determined\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"pendingOwner()\":{\"returns\":{\"_0\":\"Current `_pendingOwner` address.\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Reverts if `totalAssets` in the vault is zero\"},\"redeem(uint256,address,address)\":{\"details\":\"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"redeem(uint256,address,address,uint256)\":{\"params\":{\"_minAssets\":\"The minimum assets that can be returned for the redemption to succeed\",\"_owner\":\"See `IERC4626.redeem`\",\"_receiver\":\"See `IERC4626.redeem`\",\"_shares\":\"See `IERC4626.redeem`\"},\"returns\":{\"_0\":\"The amount of assets returned for the redemption\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setClaimer(address)\":{\"params\":{\"_claimer\":\"Address of the claimer\"}},\"setHooks((bool,bool,address))\":{\"details\":\"Emits a `SetHooks` event\",\"params\":{\"hooks\":\"The hooks to set\"}},\"setLiquidationPair(address)\":{\"details\":\"Emits a `LiquidationPairSet` event\",\"params\":{\"_liquidationPair\":\"New liquidationPair address\"}},\"setYieldFeePercentage(uint32)\":{\"details\":\"Yield fee is defined on a scale from `0` to `FEE_PRECISION`, inclusive.\",\"params\":{\"_yieldFeePercentage\":\"The new yield fee percentage to set\"}},\"setYieldFeeRecipient(address)\":{\"params\":{\"_yieldFeeRecipient\":\"Address of the fee recipient\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"targetOf(address)\":{\"params\":{\"tokenIn\":\"Address of the token to get the target address for\"},\"returns\":{\"_0\":\"address Address of the target\"}},\"totalAssets()\":{\"details\":\"The latent asset balance is included in the total asset count to account for the \\\"dust collection strategy\\\".This function uses `convertToAssets` to ensure it does not revert, but may result in some approximation depending on the yield vault implementation.\"},\"totalDebt()\":{\"returns\":{\"_0\":\"The total asset debt of the vault\"}},\"totalPreciseAssets()\":{\"details\":\"The latent asset balance is included in the total asset count to account for the \\\"dust collection strategy\\\".This function should be favored over `totalAssets` for state-changing functions since it uses `previewRedeem` over `convertToAssets`.May revert for reasons that would cause `yieldVault.previewRedeem` to revert.\",\"returns\":{\"_0\":\"The total assets controlled by the vault based on current onchain conditions\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalYieldBalance()\":{\"details\":\"Equal to total assets minus total debt\",\"returns\":{\"_0\":\"The total yield balance\"}},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"params\":{\"_newOwner\":\"Address to transfer ownership to.\"}},\"transferTokensOut(address,address,address,uint256)\":{\"details\":\"Emits a `TransferYieldOut` eventSupports the liquidation of either assets or prize vault shares.\",\"params\":{\"amountOut\":\"Amount of token being bought\",\"receiver\":\"Address of the account that will receive `tokenOut`\",\"sender\":\"Address that triggered the liquidation\",\"tokenOut\":\"Address of the token being bought\"}},\"verifyTokensIn(address,uint256,bytes)\":{\"params\":{\"amountIn\":\"Amount of token being sold\",\"tokenIn\":\"Address of the token being sold\",\"transferTokensOutData\":\"Data returned by the corresponding transferTokensOut call\"}},\"withdraw(uint256,address,address)\":{\"details\":\"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"withdraw(uint256,address,address,uint256)\":{\"params\":{\"_assets\":\"See `IERC4626.withdraw`\",\"_maxShares\":\"The max shares that can be burned for the withdrawal to succeed.\",\"_owner\":\"See `IERC4626.withdraw`\",\"_receiver\":\"See `IERC4626.withdraw`\"},\"returns\":{\"_0\":\"The amount of shares burned for the withdrawal\"}}},\"stateVariables\":{\"MAX_YIELD_FEE\":{\"details\":\"Decimal precision is defined by `FEE_PRECISION`.If the yield fee is set too high, liquidations won't occur on a regular basis. If a use case requires a yield fee higher than this max, a custom liquidation pair can be set to manipulate the yield as required.\"},\"yieldBuffer\":{\"details\":\"The buffer prevents the entire yield balance from being liquidated, which would leave the vault in a state where a single rounding error could reduce the totalAssets to less than the totalSupply.  The yield buffer is expected to be of insignificant value and is used to cover rounding errors on deposits and withdrawals. Yield is expected to accrue faster than the yield buffer can be reasonably depleted. IT IS RECOMMENDED TO DONATE ASSETS DIRECTLY TO THE PRIZE VAULT AFTER DEPLOYMENT TO FILL THE YIELD BUFFER AND COVER ROUNDING ERRORS UNTIL THE DEPOSITS CAN GENERATE ENOUGH YIELD TO KEEP THE BUFFER  FULL WITHOUT ASSISTANCE. The yield buffer should be set as high as possible while still being considered insignificant for the underlying asset. For example, a reasonable yield buffer for USDC with 6 decimals might be 1e5 ($0.10), which will cover up to 100k rounding errors while still being an insignificant value. Some assets may be considered incompatible with the prize vault if the yield vault incurs rounding errors and the underlying asset has a low precision per dollar ratio.  Precision per dollar (PPD) can be calculated by: (10 ^ DECIMALS) / ($ value of 1 asset). For example, USDC has a PPD of (10 ^ 6) / ($1) = 10e6 p/$.  As a rule of thumb, assets with lower PPD than USDC should not be assumed to be compatible since the potential loss of a single unit rounding error is likely too high to be made up by yield at  a reasonable rate. Actual results may vary based on expected gas costs, asset fluctuation, and yield accrual rates. If the underlying yield vault does not incur any rounding errors, then the yield buffer can be set to zero. If the yield buffer is depleted on the prize vault, new deposits will be prevented if it would result in a rounding error and any rounding errors incurred by withdrawals will not be covered by yield. The yield buffer will be replenished automatically as yield accrues.\"},\"yieldFeePercentage\":{\"details\":\"For example, if `FEE_PRECISION` were 1e9 a value of 1e7 = 0.01 = 1%.\"}},\"title\":\"PoolTogether V5 Prize Vault\",\"version\":1},\"userdoc\":{\"errors\":{\"BurnZeroShares()\":[{\"notice\":\"Thrown when no shares are being burnt during a withdrawal of assets\"}],\"CallerNotClaimer(address,address)\":[{\"notice\":\"Thrown when the caller is not the prize claimer.\"}],\"CallerNotLP(address,address)\":[{\"notice\":\"Thrown during the liquidation process when the caller is not the liquidation pair contract.\"}],\"CallerNotYieldFeeRecipient(address,address)\":[{\"notice\":\"Thrown if the caller is not the yield fee recipient when withdrawing yield fee shares.\"}],\"ClaimRecipientZeroAddress()\":[{\"notice\":\"Thrown when a prize is claimed for the zero address.\"}],\"ClaimerZeroAddress()\":[{\"notice\":\"Thrown when the Claimer is set to the zero address.\"}],\"DepositZeroAssets()\":[{\"notice\":\"Thrown when zero assets are being deposited\"}],\"FailedToGetAssetDecimals(address)\":[{\"notice\":\"Thrown when the underlying asset does not specify it's number of decimals.\"}],\"LPZeroAddress()\":[{\"notice\":\"Thrown when the Liquidation Pair being set is the zero address.\"}],\"LiquidationAmountOutZero()\":[{\"notice\":\"Thrown during the liquidation process when the liquidation amount out is zero.\"}],\"LiquidationExceedsAvailable(uint256,uint256)\":[{\"notice\":\"Thrown during the liquidation process if the total to withdraw is greater than the available yield.\"}],\"LiquidationTokenInNotPrizeToken(address,address)\":[{\"notice\":\"Thrown during the liquidation process when the token in is not the prize token.\"}],\"LiquidationTokenOutNotSupported(address)\":[{\"notice\":\"Thrown during the liquidation process when the token out is not supported.\"}],\"LossyDeposit(uint256,uint256)\":[{\"notice\":\"Thrown when a deposit results in a state where the total assets are less than the total share supply.\"}],\"MaxSharesExceeded(uint256,uint256)\":[{\"notice\":\"Thrown when a withdraw call burns more shares than the max share limit provided.\"}],\"MinAssetsNotReached(uint256,uint256)\":[{\"notice\":\"Thrown when a redeem call returns less assets than the min threshold provided.\"}],\"MintLimitExceeded(uint256)\":[{\"notice\":\"Thrown when the mint limit is exceeded after increasing an external or internal share balance.\"}],\"MintZeroShares()\":[{\"notice\":\"Thrown when zero shares are being minted\"}],\"OwnerZeroAddress()\":[{\"notice\":\"Thrown when the Owner is set to the zero address.\"}],\"PermitCallerNotOwner(address,address)\":[{\"notice\":\"Thrown when the caller of a permit function is not the owner of the assets being permitted.\"}],\"PrizePoolZeroAddress()\":[{\"notice\":\"Thrown when the Prize Pool is set to the zero address.\"}],\"ReturnDataOverLimit(uint256,uint256)\":[{\"notice\":\"Thrown if relevant hook return data is greater than the `HOOK_RETURN_DATA_LIMIT`.\"}],\"SharesExceedsYieldFeeBalance(uint256,uint256)\":[{\"notice\":\"Thrown when the yield fee shares being withdrawn exceeds the available yieldFee Balance.\"}],\"TwabControllerZeroAddress()\":[{\"notice\":\"Thrown if the TwabController address is the zero address.\"}],\"WithdrawZeroAssets()\":[{\"notice\":\"Thrown when a withdrawal of zero assets on the yield vault is attempted\"}],\"YieldFeePercentageExceedsMax(uint256,uint256)\":[{\"notice\":\"Thrown when the yield fee percentage being set exceeds the max yield fee allowed.\"}],\"YieldVaultZeroAddress()\":[{\"notice\":\"Thrown when the Yield Vault is set to the zero address.\"}],\"ZeroTotalAssets()\":[{\"notice\":\"Thrown if `totalAssets` is zero during a withdraw\"}]},\"events\":{\"ClaimYieldFeeShares(address,uint256)\":{\"notice\":\"Emitted when yield fee shares are claimed by the yield fee recipient.\"},\"ClaimerSet(address)\":{\"notice\":\"Emitted when a new claimer has been set\"},\"LiquidationPairSet(address,address)\":{\"notice\":\"Emitted when a new liquidation pair is set for the given `tokenOut`.\"},\"SetHooks(address,(bool,bool,address))\":{\"notice\":\"Emitted when an account sets new hooks\"},\"TransferYieldOut(address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when yield is transferred out by the liquidation pair address.\"},\"YieldFeePercentageSet(uint256)\":{\"notice\":\"Emitted when a new yield fee percentage has been set.\"},\"YieldFeeRecipientSet(address)\":{\"notice\":\"Emitted when a new yield fee recipient has been set.\"}},\"kind\":\"user\",\"methods\":{\"FEE_PRECISION()\":{\"notice\":\"The yield fee decimal precision.\"},\"HOOK_GAS()\":{\"notice\":\"The gas to give to each of the before and after prize claim hooks.\"},\"HOOK_RETURN_DATA_LIMIT()\":{\"notice\":\"The number of bytes to limit hook return / revert data.\"},\"MAX_YIELD_FEE()\":{\"notice\":\"The max yield fee that can be set.\"},\"availableYieldBalance()\":{\"notice\":\"Total available yield on the vault\"},\"claimOwnership()\":{\"notice\":\"Allows the `_pendingOwner` address to finalize the transfer.\"},\"claimPrize(address,uint8,uint32,uint96,address)\":{\"notice\":\"Claim a prize for a winner\"},\"claimYieldFeeShares(uint256)\":{\"notice\":\"Transfers yield fee shares to the yield fee recipient\"},\"claimer()\":{\"notice\":\"Address of the claimer.\"},\"constructor\":{\"notice\":\"Vault constructor\"},\"currentYieldBuffer()\":{\"notice\":\"Current amount of assets available in the yield buffer\"},\"depositWithPermit(uint256,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve underlying asset with permit, deposit into the Vault and mint Vault shares to `_owner`.\"},\"getHooks(address)\":{\"notice\":\"Gets the hooks for the given account.\"},\"isLiquidationPair(address,address)\":{\"notice\":\"Checks if a liquidation pair can be used to liquidate the given tokenOut from this source.\"},\"liquidatableBalanceOf(address)\":{\"notice\":\"Get the available amount of tokens that can be swapped.\"},\"liquidationPair()\":{\"notice\":\"Address of the liquidation pair used to liquidate yield for prize token.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"notice\":\"Gets current `_pendingOwner`.\"},\"prizePool()\":{\"notice\":\"Address of the PrizePool that computes prizes.\"},\"redeem(uint256,address,address,uint256)\":{\"notice\":\"Alternate flow for `IERC4626.redeem` that reverts if the assets returned does not reach the minimum asset threshold.\"},\"renounceOwnership()\":{\"notice\":\"Renounce ownership of the contract.\"},\"setClaimer(address)\":{\"notice\":\"Set claimer.\"},\"setHooks((bool,bool,address))\":{\"notice\":\"Sets the hooks for a winner.\"},\"setLiquidationPair(address)\":{\"notice\":\"Set liquidationPair.\"},\"setYieldFeePercentage(uint32)\":{\"notice\":\"Set yield fee percentage.\"},\"setYieldFeeRecipient(address)\":{\"notice\":\"Set fee recipient.\"},\"targetOf(address)\":{\"notice\":\"Get the address that will receive `tokenIn`.\"},\"totalDebt()\":{\"notice\":\"Returns the total assets that are owed to share holders and any other internal balances.\"},\"totalPreciseAssets()\":{\"notice\":\"Calculates the amount of assets the vault controls based on current onchain conditions.\"},\"totalYieldBalance()\":{\"notice\":\"Total yield balance of the vault\"},\"transferOwnership(address)\":{\"notice\":\"Allows current owner to set the `_pendingOwner` address.\"},\"transferTokensOut(address,address,address,uint256)\":{\"notice\":\"Transfers tokens to the receiver\"},\"twabController()\":{\"notice\":\"Address of the TwabController used to keep track of balances.\"},\"verifyTokensIn(address,uint256,bytes)\":{\"notice\":\"Verifies that tokens have been transferred in.\"},\"withdraw(uint256,address,address,uint256)\":{\"notice\":\"Alternate flow for `IERC4626.withdraw` that reverts if the max share limit is exceeded.\"},\"yieldBuffer()\":{\"notice\":\"The yield buffer that is reserved for covering rounding errors on withdrawals and deposits.\"},\"yieldFeeBalance()\":{\"notice\":\"The accrued yield fee balance that the fee recipient can claim as vault shares.\"},\"yieldFeePercentage()\":{\"notice\":\"Yield fee percentage represented in integer format with decimal precision defined by `FEE_PRECISION`.\"},\"yieldFeeRecipient()\":{\"notice\":\"Address of the yield fee recipient.\"},\"yieldVault()\":{\"notice\":\"Address of the underlying ERC4626 vault generating yield.\"}},\"notice\":\"The prize vault takes deposits of an asset and earns yield with the deposits through an underlying yield         vault. The yield is then expected to be liquidated and contributed to the prize pool as prize tokens. The         depositors of the prize vault will then be eligible to win prizes from the pool. If a prize is won, The          permitted claimer contract for the prize vault will claim the prize on behalf of the winner. Depositors         can also set custom hooks that are called directly before and after their prize is claimed.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PrizeVault.sol\":\"PrizeVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/rETHERC4626/lib/openzeppelin-contracts/contracts/\",\":ExcessivelySafeCall/=lib/ExcessivelySafeCall/src/\",\":brokentoken/=lib/brokentoken/src/\",\":create3-factory/=lib/yield-daddy/lib/create3-factory/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/erc4626-tests/\",\":excessively-safe-call/=lib/ExcessivelySafeCall/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":owner-manager-contracts/=lib/owner-manager-contracts/contracts/\",\":prb-math/=lib/pt-v5-prize-pool/lib/prb-math/src/\",\":pt-v5-claimable-interface/=lib/pt-v5-claimable-interface/src/\",\":pt-v5-liquidator-interfaces/=lib/pt-v5-liquidator-interfaces/src/interfaces/\",\":pt-v5-prize-pool/=lib/pt-v5-prize-pool/src/\",\":pt-v5-staking-vault/=lib/pt-v5-staking-vault/src/\",\":pt-v5-twab-controller/=lib/pt-v5-twab-controller/src/\",\":rETHERC4626/=lib/rETHERC4626/src/\",\":ring-buffer-lib/=lib/pt-v5-twab-controller/lib/ring-buffer-lib/src/\",\":solmate/=lib/brokentoken/lib/solmate/src/\",\":uniform-random-number/=lib/pt-v5-prize-pool/lib/uniform-random-number/src/\",\":weird-erc20/=lib/brokentoken/lib/weird-erc20/src/\",\":yield-daddy/=lib/yield-daddy/src/\"]},\"sources\":{\"lib/ExcessivelySafeCall/src/ExcessivelySafeCall.sol\":{\"keccak256\":\"0x7d9d432e8f02168bf3f790e3dabcf36402782acf7ffa476cabe86fc4d8962eb2\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://1adc13e7f399f500ea5f81480ad149a50408fde7990a2c6347e6377486f389dc\",\"dweb:/ipfs/QmSvm5TUBJqknsqNJLLHqNS4MLSH5k3vNrbquVg6ZKSfx9\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x5a173dcd1c1f0074e4df6a9cdab3257e17f2e64f7b8f30ca9e17a8c5ea250e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7883819ce2b72264a756063ae578661f62b23f4104b08e9565ac075e619f6ce3\",\"dweb:/ipfs/QmcSZdFiEQkWRmZQhnCdfH9ychooV81pBjr7hfaiYiNZT2\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/owner-manager-contracts/contracts/Ownable.sol\":{\"keccak256\":\"0x6484ebaf635caa4518dff19424d9a1e3aa866fa01c762d7f32c196dda044f03e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a594d34ecb8ec2896c5510c25d47488c76ec672cc2c2ae0630da6e8bbf66c4cf\",\"dweb:/ipfs/QmXXRsHh5h3bpmL5teKrFvTAgzTsNdZ2VJHjbZHRv9A4gg\"]},\"lib/pt-v5-claimable-interface/src/interfaces/IClaimable.sol\":{\"keccak256\":\"0xc3de33d7f64a189a8670a1cde2c0432d1d2bdd398432e55b7ae0cd497c81cd0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fe31b94e74fdf2f1856d90fd8219671ea816dab885f396fdc3fad83fb67b00f\",\"dweb:/ipfs/QmadhfAA4Y8eLjjdAqGapYE6Zf4Ab24FoEGgzdGweJu3qd\"]},\"lib/pt-v5-liquidator-interfaces/src/interfaces/ILiquidationSource.sol\":{\"keccak256\":\"0x051b1993bd0cada8dbb7e8cf3d7252d4b8f6510c0c3a86a52ecbd1b6cb0d7bd4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb4edf4442863be977ee528d5463f70e30c3d651809377092bf65ddd0cc3778\",\"dweb:/ipfs/QmPwWeF8W3rcjUiwDvfWwE9KxqhayvCwCbMykkaviXVVEN\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/Common.sol\":{\"keccak256\":\"0xaa374e2c26cc93e8c22a6953804ee05f811597ef5fa82f76824378b22944778b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://279c732e161d623cf4d8a9519ca4c42c0c2db99842d0eb2a20c10fde3fa722c9\",\"dweb:/ipfs/QmVViuUXbinQGqtG5M21SgVzKihiCbFUChd4tDhtvwRmxH\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/SD59x18.sol\":{\"keccak256\":\"0xff25fe75f8e77d4c839fbe69198d273039575fa72f31ce9725bcacb80db65461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ed7bc89a4efa33fc9392de8104c8af609fd3372b323d7824a6a3ae888bad3be\",\"dweb:/ipfs/QmfCbW4geVSm7uJW4KUoXrejR2SywcRJrXwMBzUBWYiXJa\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/UD60x18.sol\":{\"keccak256\":\"0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9\",\"dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/sd1x18/Casting.sol\":{\"keccak256\":\"0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a\",\"dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/sd1x18/Constants.sol\":{\"keccak256\":\"0x6496165b80552785a4b65a239b96e2a5fedf62fe54f002eeed72d75e566d7585\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a1623b9a1e03f548787d9f876a26647090f40db765a32a99167cb89da145339\",\"dweb:/ipfs/QmezifZR7md7GzQisgdUmYKWJx1zuiqosVRsmJyNkvJxK9\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/sd1x18/Errors.sol\":{\"keccak256\":\"0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499\",\"dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/sd1x18/ValueType.sol\":{\"keccak256\":\"0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd\",\"dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/sd59x18/Casting.sol\":{\"keccak256\":\"0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809\",\"dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/sd59x18/Constants.sol\":{\"keccak256\":\"0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f\",\"dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/sd59x18/Conversions.sol\":{\"keccak256\":\"0x9876a288dcbb2583c5361a3e60b5b30c7d4c89c8d2aa35364f2f521656d8db80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c76a858b3462070671babff2d079f9368bc022017f34921092c93ee5751b99a5\",\"dweb:/ipfs/QmYQqUodEny8uqQeqXwYU5GDsHPMEUz5HvGF2ChjbmDWbL\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/sd59x18/Errors.sol\":{\"keccak256\":\"0xa6d00fe5efa215ac0df25c896e3da99a12fb61e799644b2ec32da947313d3db4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbfcf2d9681a2af1e076439791e2853b466066d867bfcbbf6b46b4a4476f712f\",\"dweb:/ipfs/QmWGznYLYdvsjMSyauT2DoipgGLVGW9KASXEknTgR5eRMv\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/sd59x18/Helpers.sol\":{\"keccak256\":\"0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed\",\"dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/sd59x18/Math.sol\":{\"keccak256\":\"0xa074831139fc89ca0e5a36086b30eb50896bb6770cd5823461b1f2769017d2f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd0ce38e8e85ed1a5179c1016af6131eb29674f195c66971d5e6da2764222d0d\",\"dweb:/ipfs/QmbHLp9E8dNuz8Fi2rRcYjLVGfVdacLyjrktQzxf62FLXp\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/sd59x18/ValueType.sol\":{\"keccak256\":\"0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6\",\"dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/ud2x18/Casting.sol\":{\"keccak256\":\"0x9b1a35d432ef951a415fae8098b3c609a99b630a3d5464b3c8e1efa8893eea07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://977ab8a458a6aeaf7cfd125c06e1e4c50fa1147f0b72638d1ae1fb4f6ad37ddd\",\"dweb:/ipfs/QmeVVDpmYm1Tc8kpscF1Z2rtYvkpb1NeGBwRoYgLBuwXeA\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/ud2x18/Constants.sol\":{\"keccak256\":\"0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9\",\"dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/ud2x18/Errors.sol\":{\"keccak256\":\"0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec\",\"dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/ud2x18/ValueType.sol\":{\"keccak256\":\"0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95\",\"dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/ud60x18/Casting.sol\":{\"keccak256\":\"0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe\",\"dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/ud60x18/Constants.sol\":{\"keccak256\":\"0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b\",\"dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/ud60x18/Conversions.sol\":{\"keccak256\":\"0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75\",\"dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/ud60x18/Errors.sol\":{\"keccak256\":\"0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf\",\"dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/ud60x18/Helpers.sol\":{\"keccak256\":\"0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5\",\"dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/ud60x18/Math.sol\":{\"keccak256\":\"0x462144667aac3f96d5f8dba7aa68fe4c5a3f61e1d7bbbc81bee21168817f9c09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9bb7f11754e2202ed03351e52ef72f7ec85120b4a3ddec2f312b7bf5b08d4d7\",\"dweb:/ipfs/Qmd1tg9PEfdHD1GNmTiB8wUM7VrS4jfQFto3KKn1vfYGjw\"]},\"lib/pt-v5-prize-pool/lib/prb-math/src/ud60x18/ValueType.sol\":{\"keccak256\":\"0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29\",\"dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ\"]},\"lib/pt-v5-prize-pool/lib/uniform-random-number/src/UniformRandomNumber.sol\":{\"keccak256\":\"0x5cbadada1a363148c597af60819db7df16119f1259b499ee1bf27e38fe97d0e2\",\"urls\":[\"bzz-raw://4f0d2aab442e8461aa367da648303b3109e9080b8dbe6a66b46fdbcaebd61eb1\",\"dweb:/ipfs/QmWt1hK2y26f9mWRjGyrvNQr6VNdMzkaNTf7eLa78FAWvL\"]},\"lib/pt-v5-prize-pool/src/PrizePool.sol\":{\"keccak256\":\"0xe75462dc942391e6e370c27640202587395adfcb8cd0b7e6cfa06e20ead2dc35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cdaf5564454f15d999ac4c905521d63d2da73eac4a6e9dd65590ab7a18132b4\",\"dweb:/ipfs/QmcCFb8uvZ77EctBBuiET5gmPn9yzQLCcA7ZRUcuq3d8Bb\"]},\"lib/pt-v5-prize-pool/src/abstract/TieredLiquidityDistributor.sol\":{\"keccak256\":\"0x1e2ebbf106a2216ee811c744eaddbd38887dd4d3647dd981c8b8f6e859e95ee9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://580981de541e7f812b662c75def1e302692173fc2aea7f3d19b605148b7fef00\",\"dweb:/ipfs/QmVQp2iThPtFmbFJ4mRcT9NYZEfi8MMq6PdLvHeiErjp7d\"]},\"lib/pt-v5-prize-pool/src/libraries/DrawAccumulatorLib.sol\":{\"keccak256\":\"0x251959c4080f621558eaada278b79907684b9f0d9b3c474c2a3b5cb7c4afa588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c1168aa6fa01a4d096ee6b4b2019745046d3827883719d94cb09e70a111a810\",\"dweb:/ipfs/QmcJSdkv7gd39TaoZ4tssismSu7iMF9n42hWaT25zp9SUV\"]},\"lib/pt-v5-prize-pool/src/libraries/TierCalculationLib.sol\":{\"keccak256\":\"0xcfecbb35cb3b385b527963c2eee7eda8252d37ca9973a84592a140cdccc7bc16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730f372524fdc7405bbfaca6717d8efcf691fba90bf10a1ea9c1d277fe5c6df1\",\"dweb:/ipfs/QmPnRNne689GvZR1BDEbCGJb86eknQ15Xo8Pu3gSqf1Ke6\"]},\"lib/pt-v5-twab-controller/lib/ring-buffer-lib/src/RingBufferLib.sol\":{\"keccak256\":\"0x13f69c8567b82e6edb529e7d6e55e16a622e99ee76dcd951a95f44bea4d715fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cec6de058b2f59ece4c0995cae10737dc50c392ae016f432401414f002e7ac2\",\"dweb:/ipfs/QmVKyxWoQk1HsFPnaZ1AtX8Jdhd7Ye7EexnEXABAYpr47e\"]},\"lib/pt-v5-twab-controller/src/TwabController.sol\":{\"keccak256\":\"0x43f330e9c5f588ec043c22ba167ad907c585ff101d85e6ff77d846a8903b7d1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10c72471a91b60ff6ea1c751cc33877e797a9e9d10ff763a5d6cd613a60be16d\",\"dweb:/ipfs/QmXpdfTMahLaZR3EeuV3E3NX1rKNVsyNPfFZUobgpz2T38\"]},\"lib/pt-v5-twab-controller/src/libraries/ObservationLib.sol\":{\"keccak256\":\"0xd8d01f1fb0ff1947a8a1c2882df2b1830087d12414ff9902c7b443d9f904dcbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://579403d2daf108f865eba7080c67060f4dba0e7f0271117065d3b05186bf9b12\",\"dweb:/ipfs/QmdNAegaGnFDqmqeVuKbv2BPwZD4dLJSUpm3w8tLwNKT8r\"]},\"lib/pt-v5-twab-controller/src/libraries/TwabLib.sol\":{\"keccak256\":\"0x13a49907d2ab6d74e7a334c79d509fa917a6ae9e00aef71a40e7c7beb6a1633a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b651e42754e4b81da7d1984c3c98e7d0259ceb2f78ce8ff134c74e7c23542ab9\",\"dweb:/ipfs/QmUs5qyRy9cPmEsJvyMrPdEKkqdHJm6YE4PJXXu7hQoiTp\"]},\"src/PrizeVault.sol\":{\"keccak256\":\"0x7531d9877b97630b5d17e49ff4af29999e6c1ce05cd49eeccae7ad1fc81e43c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c847e90e44ea8b27208d76235271ca1b20768cf56ab805025a6fb32c3e64b8\",\"dweb:/ipfs/QmPdokNp5JdtC5UHL5KSkTNcie1wvQyoLN2RDGtgdghj8N\"]},\"src/TwabERC20.sol\":{\"keccak256\":\"0xf5b19ac7c6bd71b7e63d90d741dc87605e318e5fb6ccaeac64f214c3dd12b125\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b01e42d2af2977237b24f8764d22a7c1e8d14e40bc7923649c79bd52d92334bf\",\"dweb:/ipfs/QmPpQpV6NruT1XSjEQk2sXLZCBC8xMCQkFJzwCe6kptCzS\"]},\"src/abstract/Claimable.sol\":{\"keccak256\":\"0x49ed1580ede31f768b1ec024331bb793b5fb93c0c84c78fbb3b5d50456cbd69c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b81cacd7d411d02e0f2a20692df844bc8b8beaf3392d3cd43c24d8ba2df70d5\",\"dweb:/ipfs/Qmf2qf4w7B21DfAiDL5SMrsvGWtmuDQrZK6rDsaL7TRSng\"]},\"src/abstract/HookManager.sol\":{\"keccak256\":\"0xbee0c8d5337d383e680c90c8529f0fd9e415b6b6596878880579b969a9cc9bb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa6abc4117ea8421e6e3ba22f76bb3556cccf9553ef9a0af12f25463f5861005\",\"dweb:/ipfs/QmPZg6TR7NqHZzd6iS7ACkv1tVR9eX1QHGDeaE1WqcY3Xx\"]},\"src/interfaces/IPrizeHooks.sol\":{\"keccak256\":\"0xeca2a9281add09d6ae4c12720c79fe3c3ca4831d73af2e11330844dcdf253d03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c59b0003f57c9e9a12fc12fc7c86e6a5d8b3f2ac8bb572981d8159f123109d31\",\"dweb:/ipfs/QmYp5GMNzAhWQshNf9qo618RwMM17zbKKg7YyA6uJ4drkF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.24+commit.e11b9ed9"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            },
            {
              "internalType": "contract IERC4626",
              "name": "yieldVault_",
              "type": "address"
            },
            {
              "internalType": "contract PrizePool",
              "name": "prizePool_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "claimer_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "yieldFeeRecipient_",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "yieldFeePercentage_",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "yieldBuffer_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BurnZeroShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "CallerNotClaimer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidationPair",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "CallerNotLP"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "yieldFeeRecipient",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "CallerNotYieldFeeRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClaimRecipientZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClaimerZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DepositZeroAssets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "FailedToGetAssetDecimals"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LPZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LiquidationAmountOutZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "totalToWithdraw",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "availableYield",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "LiquidationExceedsAvailable"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "prizeToken",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LiquidationTokenInNotPrizeToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LiquidationTokenOutNotSupported"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "totalAssets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "LossyDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxShares",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MaxSharesExceeded"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minAssets",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MinAssetsNotReached"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "excess",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MintLimitExceeded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroShares"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "PermitCallerNotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PrizePoolZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "returnDataSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hookDataLimit",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ReturnDataOverLimit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "yieldFeeBalance",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SharesExceedsYieldFeeBalance"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TwabControllerZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawZeroAssets"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "yieldFeePercentage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxYieldFeePercentage",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "YieldFeePercentageExceedsMax"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "YieldVaultZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroTotalAssets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimYieldFeeShares",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ClaimerSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "liquidationPair",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LiquidationPairSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipOffered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct PrizeHooks",
              "name": "hooks",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "useBeforeClaimPrize",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "useAfterClaimPrize",
                  "type": "bool"
                },
                {
                  "internalType": "contract IPrizeHooks",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetHooks",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "liquidationPair",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "yieldFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferYieldOut",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "assets",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "yieldFeePercentage",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "YieldFeePercentageSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "yieldFeeRecipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "YieldFeeRecipientSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FEE_PRECISION",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HOOK_GAS",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HOOK_RETURN_DATA_LIMIT",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_YIELD_FEE",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "asset",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "availableYieldBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_winner",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "_tier",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "_prizeIndex",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "_reward",
              "type": "uint96"
            },
            {
              "internalType": "address",
              "name": "_rewardRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimPrize",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimYieldFeeShares"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentYieldBuffer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "_v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "_r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositWithPermit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getHooks",
          "outputs": [
            {
              "internalType": "struct PrizeHooks",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "useBeforeClaimPrize",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "useAfterClaimPrize",
                  "type": "bool"
                },
                {
                  "internalType": "contract IPrizeHooks",
                  "name": "implementation",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenOut",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_liquidationPair",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLiquidationPair",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenOut",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidatableBalanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidationPair",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxRedeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "previewDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "previewMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewRedeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "previewWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "prizePool",
          "outputs": [
            {
              "internalType": "contract PrizePool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_minAssets",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shares",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimer"
        },
        {
          "inputs": [
            {
              "internalType": "struct PrizeHooks",
              "name": "hooks",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "useBeforeClaimPrize",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "useAfterClaimPrize",
                  "type": "bool"
                },
                {
                  "internalType": "contract IPrizeHooks",
                  "name": "implementation",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setHooks"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_liquidationPair",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLiquidationPair"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_yieldFeePercentage",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setYieldFeePercentage"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_yieldFeeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setYieldFeeRecipient"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "targetOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalDebt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalPreciseAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalYieldBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amountOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferTokensOut",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "twabController",
          "outputs": [
            {
              "internalType": "contract TwabController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenIn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amountIn",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyTokensIn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_maxShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_assets",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "yieldBuffer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "yieldFeeBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "yieldFeePercentage",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "yieldFeeRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "yieldVault",
          "outputs": [
            {
              "internalType": "contract IERC4626",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "asset()": {
            "details": "Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert."
          },
          "availableYieldBalance()": {
            "details": "Equal to total assets minus total allocation (total debt + yield buffer)",
            "returns": {
              "_0": "The available yield balance"
            }
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "claimOwnership()": {
            "details": "This function is only callable by the `_pendingOwner`."
          },
          "claimPrize(address,uint8,uint32,uint96,address)": {
            "details": "Also calls the before and after claim hooks if set by the winner.Reverts if the return data size of the `beforeClaimPrize` hook exceeds `HOOK_RETURN_DATA_LIMIT`.",
            "params": {
              "_prizeIndex": "The prize index",
              "_reward": "The reward to allocate to the reward recipient, in prize tokens",
              "_rewardRecipient": "The recipient of the reward",
              "_tier": "The prize tier",
              "_winner": "The winner of the prize"
            },
            "returns": {
              "_0": "The total prize token amount claimed (zero if already claimed)"
            }
          },
          "claimYieldFeeShares(uint256)": {
            "details": "Emits a `ClaimYieldFeeShares` eventWill revert if the caller is not the yield fee recipient or if zero shares are withdrawn",
            "params": {
              "_shares": "The shares to mint to the yield fee recipient"
            }
          },
          "constructor": {
            "params": {
              "claimer_": "Address of the claimer",
              "name_": "Name of the ERC20 share minted by the vault",
              "owner_": "Address that will gain ownership of this contract",
              "prizePool_": "Address of the PrizePool that computes prizes",
              "symbol_": "Symbol of the ERC20 share minted by the vault",
              "yieldBuffer_": "Amount of yield to keep as a buffer",
              "yieldFeePercentage_": "Yield fee percentage",
              "yieldFeeRecipient_": "Address of the yield fee recipient",
              "yieldVault_": "Address of the underlying ERC4626 vault in which assets are deposited to generate yield"
            }
          },
          "convertToAssets(uint256)": {
            "details": "This function uses approximate total assets and should not be used for onchain conversions."
          },
          "convertToShares(uint256)": {
            "details": "This function uses approximate total assets and should not be used for onchain conversions."
          },
          "currentYieldBuffer()": {
            "returns": {
              "_0": "The available assets in the yield buffer"
            }
          },
          "decimals()": {
            "details": "Returns the decimals places of the token."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "deposit(uint256,address)": {
            "details": "Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
          },
          "depositWithPermit(uint256,address,uint256,uint8,bytes32,bytes32)": {
            "details": "Can't be used to deposit on behalf of another user since `permit` does not accept a receiver parameter, meaning that anyone could reuse the signature and pass an arbitrary receiver to this function.",
            "params": {
              "_assets": "Amount of assets to approve and deposit",
              "_deadline": "Timestamp after which the approval is no longer valid",
              "_owner": "Address of the owner depositing `_assets` and signing the permit",
              "_r": "R part of the secp256k1 signature",
              "_s": "S part of the secp256k1 signature",
              "_v": "V part of the secp256k1 signature"
            },
            "returns": {
              "_0": "Amount of Vault shares minted to `_owner`."
            }
          },
          "eip712Domain()": {
            "details": "See {EIP-5267}. _Available since v4.9._"
          },
          "getHooks(address)": {
            "params": {
              "account": "The account to retrieve the hooks for"
            },
            "returns": {
              "_0": "PrizeHooks The hooks for the given account"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "isLiquidationPair(address,address)": {
            "params": {
              "liquidationPair": "The address of the liquidation pair that is being checked",
              "tokenOut": "The address of the token to liquidate"
            },
            "returns": {
              "_0": "bool True if the liquidation pair can be used, false otherwise"
            }
          },
          "liquidatableBalanceOf(address)": {
            "details": "Returns the liquid amount of `_tokenOut` minus any yield fees.Supports the liquidation of either assets or prize vault shares.",
            "params": {
              "tokenOut": "Address of the token to get available balance for"
            },
            "returns": {
              "_0": "uint256 Available amount of `token`"
            }
          },
          "maxDeposit(address)": {
            "details": "Considers the TWAB mint limitReturns zero if any deposit would result in a loss of assetsReturns zero if total assets cannot be determinedReturns zero if the yield buffer is less than half full. This is a safety precaution to ensure a deposit of the asset amount returned by this function cannot reasonably trigger a `LossyDeposit` revert in the `deposit` or `mint` functions if the yield buffer has been configured properly.Any latent balance of assets in the prize vault will be swept in with the deposit as a part of the \"dust collection strategy\". This means that the max deposit must account for the latent balance by subtracting it from the max deposit available otherwise."
          },
          "maxMint(address)": {
            "details": "Returns the same value as `maxDeposit` since shares and assets are 1:1 on mintReturns zero if any deposit would result in a loss of assets"
          },
          "maxRedeem(address)": {
            "details": "The prize vault maintains a latent balance of assets as part of the \"dust collection strategy\". This latent balance are accounted for in the max redeem limits.Returns zero if total assets cannot be determined"
          },
          "maxWithdraw(address)": {
            "details": "The prize vault maintains a latent balance of assets as part of the \"dust collection strategy\". This latent balance are accounted for in the max withdraw limits.Returns zero if total assets cannot be determined"
          },
          "mint(uint256,address)": {
            "details": "Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
          },
          "pendingOwner()": {
            "returns": {
              "_0": "Current `_pendingOwner` address."
            }
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
          },
          "previewDeposit(uint256)": {
            "details": "Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."
          },
          "previewMint(uint256)": {
            "details": "Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting."
          },
          "previewRedeem(uint256)": {
            "details": "Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming."
          },
          "previewWithdraw(uint256)": {
            "details": "Reverts if `totalAssets` in the vault is zero"
          },
          "redeem(uint256,address,address)": {
            "details": "Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."
          },
          "redeem(uint256,address,address,uint256)": {
            "params": {
              "_minAssets": "The minimum assets that can be returned for the redemption to succeed",
              "_owner": "See `IERC4626.redeem`",
              "_receiver": "See `IERC4626.redeem`",
              "_shares": "See `IERC4626.redeem`"
            },
            "returns": {
              "_0": "The amount of assets returned for the redemption"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setClaimer(address)": {
            "params": {
              "_claimer": "Address of the claimer"
            }
          },
          "setHooks((bool,bool,address))": {
            "details": "Emits a `SetHooks` event",
            "params": {
              "hooks": "The hooks to set"
            }
          },
          "setLiquidationPair(address)": {
            "details": "Emits a `LiquidationPairSet` event",
            "params": {
              "_liquidationPair": "New liquidationPair address"
            }
          },
          "setYieldFeePercentage(uint32)": {
            "details": "Yield fee is defined on a scale from `0` to `FEE_PRECISION`, inclusive.",
            "params": {
              "_yieldFeePercentage": "The new yield fee percentage to set"
            }
          },
          "setYieldFeeRecipient(address)": {
            "params": {
              "_yieldFeeRecipient": "Address of the fee recipient"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "targetOf(address)": {
            "params": {
              "tokenIn": "Address of the token to get the target address for"
            },
            "returns": {
              "_0": "address Address of the target"
            }
          },
          "totalAssets()": {
            "details": "The latent asset balance is included in the total asset count to account for the \"dust collection strategy\".This function uses `convertToAssets` to ensure it does not revert, but may result in some approximation depending on the yield vault implementation."
          },
          "totalDebt()": {
            "returns": {
              "_0": "The total asset debt of the vault"
            }
          },
          "totalPreciseAssets()": {
            "details": "The latent asset balance is included in the total asset count to account for the \"dust collection strategy\".This function should be favored over `totalAssets` for state-changing functions since it uses `previewRedeem` over `convertToAssets`.May revert for reasons that would cause `yieldVault.previewRedeem` to revert.",
            "returns": {
              "_0": "The total assets controlled by the vault based on current onchain conditions"
            }
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "totalYieldBalance()": {
            "details": "Equal to total assets minus total debt",
            "returns": {
              "_0": "The total yield balance"
            }
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "params": {
              "_newOwner": "Address to transfer ownership to."
            }
          },
          "transferTokensOut(address,address,address,uint256)": {
            "details": "Emits a `TransferYieldOut` eventSupports the liquidation of either assets or prize vault shares.",
            "params": {
              "amountOut": "Amount of token being bought",
              "receiver": "Address of the account that will receive `tokenOut`",
              "sender": "Address that triggered the liquidation",
              "tokenOut": "Address of the token being bought"
            }
          },
          "verifyTokensIn(address,uint256,bytes)": {
            "params": {
              "amountIn": "Amount of token being sold",
              "tokenIn": "Address of the token being sold",
              "transferTokensOutData": "Data returned by the corresponding transferTokensOut call"
            }
          },
          "withdraw(uint256,address,address)": {
            "details": "Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."
          },
          "withdraw(uint256,address,address,uint256)": {
            "params": {
              "_assets": "See `IERC4626.withdraw`",
              "_maxShares": "The max shares that can be burned for the withdrawal to succeed.",
              "_owner": "See `IERC4626.withdraw`",
              "_receiver": "See `IERC4626.withdraw`"
            },
            "returns": {
              "_0": "The amount of shares burned for the withdrawal"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "FEE_PRECISION()": {
            "notice": "The yield fee decimal precision."
          },
          "HOOK_GAS()": {
            "notice": "The gas to give to each of the before and after prize claim hooks."
          },
          "HOOK_RETURN_DATA_LIMIT()": {
            "notice": "The number of bytes to limit hook return / revert data."
          },
          "MAX_YIELD_FEE()": {
            "notice": "The max yield fee that can be set."
          },
          "availableYieldBalance()": {
            "notice": "Total available yield on the vault"
          },
          "claimOwnership()": {
            "notice": "Allows the `_pendingOwner` address to finalize the transfer."
          },
          "claimPrize(address,uint8,uint32,uint96,address)": {
            "notice": "Claim a prize for a winner"
          },
          "claimYieldFeeShares(uint256)": {
            "notice": "Transfers yield fee shares to the yield fee recipient"
          },
          "claimer()": {
            "notice": "Address of the claimer."
          },
          "constructor": {
            "notice": "Vault constructor"
          },
          "currentYieldBuffer()": {
            "notice": "Current amount of assets available in the yield buffer"
          },
          "depositWithPermit(uint256,address,uint256,uint8,bytes32,bytes32)": {
            "notice": "Approve underlying asset with permit, deposit into the Vault and mint Vault shares to `_owner`."
          },
          "getHooks(address)": {
            "notice": "Gets the hooks for the given account."
          },
          "isLiquidationPair(address,address)": {
            "notice": "Checks if a liquidation pair can be used to liquidate the given tokenOut from this source."
          },
          "liquidatableBalanceOf(address)": {
            "notice": "Get the available amount of tokens that can be swapped."
          },
          "liquidationPair()": {
            "notice": "Address of the liquidation pair used to liquidate yield for prize token."
          },
          "owner()": {
            "notice": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "notice": "Gets current `_pendingOwner`."
          },
          "prizePool()": {
            "notice": "Address of the PrizePool that computes prizes."
          },
          "redeem(uint256,address,address,uint256)": {
            "notice": "Alternate flow for `IERC4626.redeem` that reverts if the assets returned does not reach the minimum asset threshold."
          },
          "renounceOwnership()": {
            "notice": "Renounce ownership of the contract."
          },
          "setClaimer(address)": {
            "notice": "Set claimer."
          },
          "setHooks((bool,bool,address))": {
            "notice": "Sets the hooks for a winner."
          },
          "setLiquidationPair(address)": {
            "notice": "Set liquidationPair."
          },
          "setYieldFeePercentage(uint32)": {
            "notice": "Set yield fee percentage."
          },
          "setYieldFeeRecipient(address)": {
            "notice": "Set fee recipient."
          },
          "targetOf(address)": {
            "notice": "Get the address that will receive `tokenIn`."
          },
          "totalDebt()": {
            "notice": "Returns the total assets that are owed to share holders and any other internal balances."
          },
          "totalPreciseAssets()": {
            "notice": "Calculates the amount of assets the vault controls based on current onchain conditions."
          },
          "totalYieldBalance()": {
            "notice": "Total yield balance of the vault"
          },
          "transferOwnership(address)": {
            "notice": "Allows current owner to set the `_pendingOwner` address."
          },
          "transferTokensOut(address,address,address,uint256)": {
            "notice": "Transfers tokens to the receiver"
          },
          "twabController()": {
            "notice": "Address of the TwabController used to keep track of balances."
          },
          "verifyTokensIn(address,uint256,bytes)": {
            "notice": "Verifies that tokens have been transferred in."
          },
          "withdraw(uint256,address,address,uint256)": {
            "notice": "Alternate flow for `IERC4626.withdraw` that reverts if the max share limit is exceeded."
          },
          "yieldBuffer()": {
            "notice": "The yield buffer that is reserved for covering rounding errors on withdrawals and deposits."
          },
          "yieldFeeBalance()": {
            "notice": "The accrued yield fee balance that the fee recipient can claim as vault shares."
          },
          "yieldFeePercentage()": {
            "notice": "Yield fee percentage represented in integer format with decimal precision defined by `FEE_PRECISION`."
          },
          "yieldFeeRecipient()": {
            "notice": "Address of the yield fee recipient."
          },
          "yieldVault()": {
            "notice": "Address of the underlying ERC4626 vault generating yield."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/rETHERC4626/lib/openzeppelin-contracts/contracts/",
        "ExcessivelySafeCall/=lib/ExcessivelySafeCall/src/",
        "brokentoken/=lib/brokentoken/src/",
        "create3-factory/=lib/yield-daddy/lib/create3-factory/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/erc4626-tests/",
        "excessively-safe-call/=lib/ExcessivelySafeCall/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "owner-manager-contracts/=lib/owner-manager-contracts/contracts/",
        "prb-math/=lib/pt-v5-prize-pool/lib/prb-math/src/",
        "pt-v5-claimable-interface/=lib/pt-v5-claimable-interface/src/",
        "pt-v5-liquidator-interfaces/=lib/pt-v5-liquidator-interfaces/src/interfaces/",
        "pt-v5-prize-pool/=lib/pt-v5-prize-pool/src/",
        "pt-v5-staking-vault/=lib/pt-v5-staking-vault/src/",
        "pt-v5-twab-controller/=lib/pt-v5-twab-controller/src/",
        "rETHERC4626/=lib/rETHERC4626/src/",
        "ring-buffer-lib/=lib/pt-v5-twab-controller/lib/ring-buffer-lib/src/",
        "solmate/=lib/brokentoken/lib/solmate/src/",
        "uniform-random-number/=lib/pt-v5-prize-pool/lib/uniform-random-number/src/",
        "weird-erc20/=lib/brokentoken/lib/weird-erc20/src/",
        "yield-daddy/=lib/yield-daddy/src/"
      ],
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/PrizeVault.sol": "PrizeVault"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/ExcessivelySafeCall/src/ExcessivelySafeCall.sol": {
        "keccak256": "0x7d9d432e8f02168bf3f790e3dabcf36402782acf7ffa476cabe86fc4d8962eb2",
        "urls": [
          "bzz-raw://1adc13e7f399f500ea5f81480ad149a50408fde7990a2c6347e6377486f389dc",
          "dweb:/ipfs/QmSvm5TUBJqknsqNJLLHqNS4MLSH5k3vNrbquVg6ZKSfx9"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x5a173dcd1c1f0074e4df6a9cdab3257e17f2e64f7b8f30ca9e17a8c5ea250e1c",
        "urls": [
          "bzz-raw://7883819ce2b72264a756063ae578661f62b23f4104b08e9565ac075e619f6ce3",
          "dweb:/ipfs/QmcSZdFiEQkWRmZQhnCdfH9ychooV81pBjr7hfaiYiNZT2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f",
        "urls": [
          "bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc",
          "dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol": {
        "keccak256": "0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174",
        "urls": [
          "bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca",
          "dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69",
        "urls": [
          "bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71",
          "dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439",
        "urls": [
          "bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c",
          "dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
        "keccak256": "0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256",
        "urls": [
          "bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516",
          "dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd",
        "urls": [
          "bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a",
          "dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/owner-manager-contracts/contracts/Ownable.sol": {
        "keccak256": "0x6484ebaf635caa4518dff19424d9a1e3aa866fa01c762d7f32c196dda044f03e",
        "urls": [
          "bzz-raw://a594d34ecb8ec2896c5510c25d47488c76ec672cc2c2ae0630da6e8bbf66c4cf",
          "dweb:/ipfs/QmXXRsHh5h3bpmL5teKrFvTAgzTsNdZ2VJHjbZHRv9A4gg"
        ],
        "license": "GPL-3.0"
      },
      "lib/pt-v5-claimable-interface/src/interfaces/IClaimable.sol": {
        "keccak256": "0xc3de33d7f64a189a8670a1cde2c0432d1d2bdd398432e55b7ae0cd497c81cd0b",
        "urls": [
          "bzz-raw://8fe31b94e74fdf2f1856d90fd8219671ea816dab885f396fdc3fad83fb67b00f",
          "dweb:/ipfs/QmadhfAA4Y8eLjjdAqGapYE6Zf4Ab24FoEGgzdGweJu3qd"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-liquidator-interfaces/src/interfaces/ILiquidationSource.sol": {
        "keccak256": "0x051b1993bd0cada8dbb7e8cf3d7252d4b8f6510c0c3a86a52ecbd1b6cb0d7bd4",
        "urls": [
          "bzz-raw://dfb4edf4442863be977ee528d5463f70e30c3d651809377092bf65ddd0cc3778",
          "dweb:/ipfs/QmPwWeF8W3rcjUiwDvfWwE9KxqhayvCwCbMykkaviXVVEN"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/Common.sol": {
        "keccak256": "0xaa374e2c26cc93e8c22a6953804ee05f811597ef5fa82f76824378b22944778b",
        "urls": [
          "bzz-raw://279c732e161d623cf4d8a9519ca4c42c0c2db99842d0eb2a20c10fde3fa722c9",
          "dweb:/ipfs/QmVViuUXbinQGqtG5M21SgVzKihiCbFUChd4tDhtvwRmxH"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/SD59x18.sol": {
        "keccak256": "0xff25fe75f8e77d4c839fbe69198d273039575fa72f31ce9725bcacb80db65461",
        "urls": [
          "bzz-raw://7ed7bc89a4efa33fc9392de8104c8af609fd3372b323d7824a6a3ae888bad3be",
          "dweb:/ipfs/QmfCbW4geVSm7uJW4KUoXrejR2SywcRJrXwMBzUBWYiXJa"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/UD60x18.sol": {
        "keccak256": "0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48",
        "urls": [
          "bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9",
          "dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/sd1x18/Casting.sol": {
        "keccak256": "0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670",
        "urls": [
          "bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a",
          "dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/sd1x18/Constants.sol": {
        "keccak256": "0x6496165b80552785a4b65a239b96e2a5fedf62fe54f002eeed72d75e566d7585",
        "urls": [
          "bzz-raw://3a1623b9a1e03f548787d9f876a26647090f40db765a32a99167cb89da145339",
          "dweb:/ipfs/QmezifZR7md7GzQisgdUmYKWJx1zuiqosVRsmJyNkvJxK9"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/sd1x18/Errors.sol": {
        "keccak256": "0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee",
        "urls": [
          "bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499",
          "dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/sd1x18/ValueType.sol": {
        "keccak256": "0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7",
        "urls": [
          "bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd",
          "dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/sd59x18/Casting.sol": {
        "keccak256": "0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99",
        "urls": [
          "bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809",
          "dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/sd59x18/Constants.sol": {
        "keccak256": "0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a",
        "urls": [
          "bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f",
          "dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/sd59x18/Conversions.sol": {
        "keccak256": "0x9876a288dcbb2583c5361a3e60b5b30c7d4c89c8d2aa35364f2f521656d8db80",
        "urls": [
          "bzz-raw://c76a858b3462070671babff2d079f9368bc022017f34921092c93ee5751b99a5",
          "dweb:/ipfs/QmYQqUodEny8uqQeqXwYU5GDsHPMEUz5HvGF2ChjbmDWbL"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/sd59x18/Errors.sol": {
        "keccak256": "0xa6d00fe5efa215ac0df25c896e3da99a12fb61e799644b2ec32da947313d3db4",
        "urls": [
          "bzz-raw://cbfcf2d9681a2af1e076439791e2853b466066d867bfcbbf6b46b4a4476f712f",
          "dweb:/ipfs/QmWGznYLYdvsjMSyauT2DoipgGLVGW9KASXEknTgR5eRMv"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/sd59x18/Helpers.sol": {
        "keccak256": "0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716",
        "urls": [
          "bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed",
          "dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/sd59x18/Math.sol": {
        "keccak256": "0xa074831139fc89ca0e5a36086b30eb50896bb6770cd5823461b1f2769017d2f0",
        "urls": [
          "bzz-raw://bd0ce38e8e85ed1a5179c1016af6131eb29674f195c66971d5e6da2764222d0d",
          "dweb:/ipfs/QmbHLp9E8dNuz8Fi2rRcYjLVGfVdacLyjrktQzxf62FLXp"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/sd59x18/ValueType.sol": {
        "keccak256": "0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7",
        "urls": [
          "bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6",
          "dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/ud2x18/Casting.sol": {
        "keccak256": "0x9b1a35d432ef951a415fae8098b3c609a99b630a3d5464b3c8e1efa8893eea07",
        "urls": [
          "bzz-raw://977ab8a458a6aeaf7cfd125c06e1e4c50fa1147f0b72638d1ae1fb4f6ad37ddd",
          "dweb:/ipfs/QmeVVDpmYm1Tc8kpscF1Z2rtYvkpb1NeGBwRoYgLBuwXeA"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/ud2x18/Constants.sol": {
        "keccak256": "0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc",
        "urls": [
          "bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9",
          "dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/ud2x18/Errors.sol": {
        "keccak256": "0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33",
        "urls": [
          "bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec",
          "dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/ud2x18/ValueType.sol": {
        "keccak256": "0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1",
        "urls": [
          "bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95",
          "dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/ud60x18/Casting.sol": {
        "keccak256": "0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85",
        "urls": [
          "bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe",
          "dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/ud60x18/Constants.sol": {
        "keccak256": "0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90",
        "urls": [
          "bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b",
          "dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/ud60x18/Conversions.sol": {
        "keccak256": "0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b",
        "urls": [
          "bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75",
          "dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/ud60x18/Errors.sol": {
        "keccak256": "0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3",
        "urls": [
          "bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf",
          "dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/ud60x18/Helpers.sol": {
        "keccak256": "0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268",
        "urls": [
          "bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5",
          "dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/ud60x18/Math.sol": {
        "keccak256": "0x462144667aac3f96d5f8dba7aa68fe4c5a3f61e1d7bbbc81bee21168817f9c09",
        "urls": [
          "bzz-raw://d9bb7f11754e2202ed03351e52ef72f7ec85120b4a3ddec2f312b7bf5b08d4d7",
          "dweb:/ipfs/Qmd1tg9PEfdHD1GNmTiB8wUM7VrS4jfQFto3KKn1vfYGjw"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/prb-math/src/ud60x18/ValueType.sol": {
        "keccak256": "0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31",
        "urls": [
          "bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29",
          "dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/lib/uniform-random-number/src/UniformRandomNumber.sol": {
        "keccak256": "0x5cbadada1a363148c597af60819db7df16119f1259b499ee1bf27e38fe97d0e2",
        "urls": [
          "bzz-raw://4f0d2aab442e8461aa367da648303b3109e9080b8dbe6a66b46fdbcaebd61eb1",
          "dweb:/ipfs/QmWt1hK2y26f9mWRjGyrvNQr6VNdMzkaNTf7eLa78FAWvL"
        ],
        "license": null
      },
      "lib/pt-v5-prize-pool/src/PrizePool.sol": {
        "keccak256": "0xe75462dc942391e6e370c27640202587395adfcb8cd0b7e6cfa06e20ead2dc35",
        "urls": [
          "bzz-raw://1cdaf5564454f15d999ac4c905521d63d2da73eac4a6e9dd65590ab7a18132b4",
          "dweb:/ipfs/QmcCFb8uvZ77EctBBuiET5gmPn9yzQLCcA7ZRUcuq3d8Bb"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/src/abstract/TieredLiquidityDistributor.sol": {
        "keccak256": "0x1e2ebbf106a2216ee811c744eaddbd38887dd4d3647dd981c8b8f6e859e95ee9",
        "urls": [
          "bzz-raw://580981de541e7f812b662c75def1e302692173fc2aea7f3d19b605148b7fef00",
          "dweb:/ipfs/QmVQp2iThPtFmbFJ4mRcT9NYZEfi8MMq6PdLvHeiErjp7d"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/src/libraries/DrawAccumulatorLib.sol": {
        "keccak256": "0x251959c4080f621558eaada278b79907684b9f0d9b3c474c2a3b5cb7c4afa588",
        "urls": [
          "bzz-raw://9c1168aa6fa01a4d096ee6b4b2019745046d3827883719d94cb09e70a111a810",
          "dweb:/ipfs/QmcJSdkv7gd39TaoZ4tssismSu7iMF9n42hWaT25zp9SUV"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-prize-pool/src/libraries/TierCalculationLib.sol": {
        "keccak256": "0xcfecbb35cb3b385b527963c2eee7eda8252d37ca9973a84592a140cdccc7bc16",
        "urls": [
          "bzz-raw://730f372524fdc7405bbfaca6717d8efcf691fba90bf10a1ea9c1d277fe5c6df1",
          "dweb:/ipfs/QmPnRNne689GvZR1BDEbCGJb86eknQ15Xo8Pu3gSqf1Ke6"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-twab-controller/lib/ring-buffer-lib/src/RingBufferLib.sol": {
        "keccak256": "0x13f69c8567b82e6edb529e7d6e55e16a622e99ee76dcd951a95f44bea4d715fd",
        "urls": [
          "bzz-raw://7cec6de058b2f59ece4c0995cae10737dc50c392ae016f432401414f002e7ac2",
          "dweb:/ipfs/QmVKyxWoQk1HsFPnaZ1AtX8Jdhd7Ye7EexnEXABAYpr47e"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-twab-controller/src/TwabController.sol": {
        "keccak256": "0x43f330e9c5f588ec043c22ba167ad907c585ff101d85e6ff77d846a8903b7d1c",
        "urls": [
          "bzz-raw://10c72471a91b60ff6ea1c751cc33877e797a9e9d10ff763a5d6cd613a60be16d",
          "dweb:/ipfs/QmXpdfTMahLaZR3EeuV3E3NX1rKNVsyNPfFZUobgpz2T38"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-twab-controller/src/libraries/ObservationLib.sol": {
        "keccak256": "0xd8d01f1fb0ff1947a8a1c2882df2b1830087d12414ff9902c7b443d9f904dcbf",
        "urls": [
          "bzz-raw://579403d2daf108f865eba7080c67060f4dba0e7f0271117065d3b05186bf9b12",
          "dweb:/ipfs/QmdNAegaGnFDqmqeVuKbv2BPwZD4dLJSUpm3w8tLwNKT8r"
        ],
        "license": "MIT"
      },
      "lib/pt-v5-twab-controller/src/libraries/TwabLib.sol": {
        "keccak256": "0x13a49907d2ab6d74e7a334c79d509fa917a6ae9e00aef71a40e7c7beb6a1633a",
        "urls": [
          "bzz-raw://b651e42754e4b81da7d1984c3c98e7d0259ceb2f78ce8ff134c74e7c23542ab9",
          "dweb:/ipfs/QmUs5qyRy9cPmEsJvyMrPdEKkqdHJm6YE4PJXXu7hQoiTp"
        ],
        "license": "MIT"
      },
      "src/PrizeVault.sol": {
        "keccak256": "0x7531d9877b97630b5d17e49ff4af29999e6c1ce05cd49eeccae7ad1fc81e43c1",
        "urls": [
          "bzz-raw://56c847e90e44ea8b27208d76235271ca1b20768cf56ab805025a6fb32c3e64b8",
          "dweb:/ipfs/QmPdokNp5JdtC5UHL5KSkTNcie1wvQyoLN2RDGtgdghj8N"
        ],
        "license": "MIT"
      },
      "src/TwabERC20.sol": {
        "keccak256": "0xf5b19ac7c6bd71b7e63d90d741dc87605e318e5fb6ccaeac64f214c3dd12b125",
        "urls": [
          "bzz-raw://b01e42d2af2977237b24f8764d22a7c1e8d14e40bc7923649c79bd52d92334bf",
          "dweb:/ipfs/QmPpQpV6NruT1XSjEQk2sXLZCBC8xMCQkFJzwCe6kptCzS"
        ],
        "license": "MIT"
      },
      "src/abstract/Claimable.sol": {
        "keccak256": "0x49ed1580ede31f768b1ec024331bb793b5fb93c0c84c78fbb3b5d50456cbd69c",
        "urls": [
          "bzz-raw://0b81cacd7d411d02e0f2a20692df844bc8b8beaf3392d3cd43c24d8ba2df70d5",
          "dweb:/ipfs/Qmf2qf4w7B21DfAiDL5SMrsvGWtmuDQrZK6rDsaL7TRSng"
        ],
        "license": "MIT"
      },
      "src/abstract/HookManager.sol": {
        "keccak256": "0xbee0c8d5337d383e680c90c8529f0fd9e415b6b6596878880579b969a9cc9bb9",
        "urls": [
          "bzz-raw://fa6abc4117ea8421e6e3ba22f76bb3556cccf9553ef9a0af12f25463f5861005",
          "dweb:/ipfs/QmPZg6TR7NqHZzd6iS7ACkv1tVR9eX1QHGDeaE1WqcY3Xx"
        ],
        "license": "MIT"
      },
      "src/interfaces/IPrizeHooks.sol": {
        "keccak256": "0xeca2a9281add09d6ae4c12720c79fe3c3ca4831d73af2e11330844dcdf253d03",
        "urls": [
          "bzz-raw://c59b0003f57c9e9a12fc12fc7c86e6a5d8b3f2ac8bb572981d8159f123109d31",
          "dweb:/ipfs/QmYp5GMNzAhWQshNf9qo618RwMM17zbKKg7YyA6uJ4drkF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/PrizeVault.sol",
    "id": 81606,
    "exportedSymbols": {
      "Claimable": [
        82261
      ],
      "ERC20": [
        49311
      ],
      "IERC20": [
        49389
      ],
      "IERC20Metadata": [
        50213
      ],
      "IERC20Permit": [
        50249
      ],
      "IERC4626": [
        48611
      ],
      "ILiquidationSource": [
        56069
      ],
      "Math": [
        54177
      ],
      "Ownable": [
        55978
      ],
      "PrizePool": [
        65462
      ],
      "PrizeVault": [
        81605
      ],
      "SafeERC20": [
        50628
      ],
      "TWAB_SUPPLY_LIMIT": [
        79486
      ],
      "TwabController": [
        73104
      ],
      "TwabERC20": [
        81949
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:53075:155",
    "nodes": [
      {
        "id": 79455,
        "nodeType": "PragmaDirective",
        "src": "32:24:155",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".24"
        ]
      },
      {
        "id": 79457,
        "nodeType": "ImportDirective",
        "src": "58:64:155",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol",
        "file": "openzeppelin/interfaces/IERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 81606,
        "sourceUnit": 48612,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79456,
              "name": "IERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48611,
              "src": "67:8:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79460,
        "nodeType": "ImportDirective",
        "src": "123:87:155",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 81606,
        "sourceUnit": 50629,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79458,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50628,
              "src": "132:9:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 79459,
              "name": "IERC20Permit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50249,
              "src": "143:12:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79464,
        "nodeType": "ImportDirective",
        "src": "211:83:155",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 81606,
        "sourceUnit": 49312,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79461,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49311,
              "src": "220:5:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 79462,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49389,
              "src": "227:6:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 79463,
              "name": "IERC20Metadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50213,
              "src": "235:14:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79466,
        "nodeType": "ImportDirective",
        "src": "295:56:155",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "file": "openzeppelin/utils/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 81606,
        "sourceUnit": 54178,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79465,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54177,
              "src": "304:4:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79468,
        "nodeType": "ImportDirective",
        "src": "352:62:155",
        "nodes": [],
        "absolutePath": "lib/owner-manager-contracts/contracts/Ownable.sol",
        "file": "owner-manager-contracts/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 81606,
        "sourceUnit": 55979,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79467,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55978,
              "src": "361:7:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79470,
        "nodeType": "ImportDirective",
        "src": "416:53:155",
        "nodes": [],
        "absolutePath": "src/abstract/Claimable.sol",
        "file": "./abstract/Claimable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 81606,
        "sourceUnit": 82262,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79469,
              "name": "Claimable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 82261,
              "src": "425:9:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79472,
        "nodeType": "ImportDirective",
        "src": "470:44:155",
        "nodes": [],
        "absolutePath": "src/TwabERC20.sol",
        "file": "./TwabERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 81606,
        "sourceUnit": 81950,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79471,
              "name": "TwabERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 81949,
              "src": "479:9:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79474,
        "nodeType": "ImportDirective",
        "src": "516:88:155",
        "nodes": [],
        "absolutePath": "lib/pt-v5-liquidator-interfaces/src/interfaces/ILiquidationSource.sol",
        "file": "pt-v5-liquidator-interfaces/ILiquidationSource.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 81606,
        "sourceUnit": 56070,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79473,
              "name": "ILiquidationSource",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56069,
              "src": "525:18:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79476,
        "nodeType": "ImportDirective",
        "src": "605:59:155",
        "nodes": [],
        "absolutePath": "lib/pt-v5-prize-pool/src/PrizePool.sol",
        "file": "pt-v5-prize-pool/PrizePool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 81606,
        "sourceUnit": 65463,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79475,
              "name": "PrizePool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65462,
              "src": "614:9:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79478,
        "nodeType": "ImportDirective",
        "src": "665:74:155",
        "nodes": [],
        "absolutePath": "lib/pt-v5-twab-controller/src/TwabController.sol",
        "file": "pt-v5-twab-controller/TwabController.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 81606,
        "sourceUnit": 73105,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79477,
              "name": "TwabController",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 73104,
              "src": "674:14:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79486,
        "nodeType": "VariableDeclaration",
        "src": "843:53:155",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "TWAB_SUPPLY_LIMIT",
        "nameLocation": "860:17:155",
        "scope": 81606,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 79480,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "843:7:155",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "expression": {
            "arguments": [
              {
                "id": 79483,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "885:6:155",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_uint96_$",
                  "typeString": "type(uint96)"
                },
                "typeName": {
                  "id": 79482,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "885:6:155",
                  "typeDescriptions": {}
                }
              }
            ],
            "expression": {
              "argumentTypes": [
                {
                  "typeIdentifier": "t_type$_t_uint96_$",
                  "typeString": "type(uint96)"
                }
              ],
              "id": 79481,
              "name": "type",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": -27,
              "src": "880:4:155",
              "typeDescriptions": {
                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                "typeString": "function () pure"
              }
            },
            "id": 79484,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "kind": "functionCall",
            "lValueRequested": false,
            "nameLocations": [],
            "names": [],
            "nodeType": "FunctionCall",
            "src": "880:12:155",
            "tryCall": false,
            "typeDescriptions": {
              "typeIdentifier": "t_magic_meta_type_t_uint96",
              "typeString": "type(uint96)"
            }
          },
          "id": 79485,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "lValueRequested": false,
          "memberLocation": "893:3:155",
          "memberName": "max",
          "nodeType": "MemberAccess",
          "src": "880:16:155",
          "typeDescriptions": {
            "typeIdentifier": "t_uint96",
            "typeString": "uint96"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 81605,
        "nodeType": "ContractDefinition",
        "src": "4951:48156:155",
        "nodes": [
          {
            "id": 79500,
            "nodeType": "UsingForDirective",
            "src": "5040:23:155",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 79498,
              "name": "Math",
              "nameLocations": [
                "5046:4:155"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54177,
              "src": "5046:4:155"
            },
            "typeName": {
              "id": 79499,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5055:7:155",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 79504,
            "nodeType": "UsingForDirective",
            "src": "5068:27:155",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 79501,
              "name": "SafeERC20",
              "nameLocations": [
                "5074:9:155"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50628,
              "src": "5074:9:155"
            },
            "typeName": {
              "id": 79503,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 79502,
                "name": "IERC20",
                "nameLocations": [
                  "5088:6:155"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49389,
                "src": "5088:6:155"
              },
              "referencedDeclaration": 49389,
              "src": "5088:6:155",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$49389",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 79508,
            "nodeType": "VariableDeclaration",
            "src": "5359:42:155",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 79505,
              "nodeType": "StructuredDocumentation",
              "src": "5310:44:155",
              "text": "@notice The yield fee decimal precision."
            },
            "functionSelector": "e63a391f",
            "mutability": "constant",
            "name": "FEE_PRECISION",
            "nameLocation": "5382:13:155",
            "scope": 81605,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 79506,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "5359:6:155",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "316539",
              "id": 79507,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5398:3:155",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              },
              "value": "1e9"
            },
            "visibility": "public"
          },
          {
            "id": 79512,
            "nodeType": "VariableDeclaration",
            "src": "5756:42:155",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 79509,
              "nodeType": "StructuredDocumentation",
              "src": "5412:339:155",
              "text": "@notice The max yield fee that can be set.\n @dev Decimal precision is defined by `FEE_PRECISION`.\n @dev If the yield fee is set too high, liquidations won't occur on a regular basis. If a use case requires\n a yield fee higher than this max, a custom liquidation pair can be set to manipulate the yield as required."
            },
            "functionSelector": "1caa73cb",
            "mutability": "constant",
            "name": "MAX_YIELD_FEE",
            "nameLocation": "5779:13:155",
            "scope": 81605,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 79510,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "5756:6:155",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "396538",
              "id": 79511,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5795:3:155",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_900000000_by_1",
                "typeString": "int_const 900000000"
              },
              "value": "9e8"
            },
            "visibility": "public"
          },
          {
            "id": 79515,
            "nodeType": "VariableDeclaration",
            "src": "8075:36:155",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 79513,
              "nodeType": "StructuredDocumentation",
              "src": "5805:2265:155",
              "text": "@notice The yield buffer that is reserved for covering rounding errors on withdrawals and deposits.\n @dev The buffer prevents the entire yield balance from being liquidated, which would leave the vault\n in a state where a single rounding error could reduce the totalAssets to less than the totalSupply.\n \n The yield buffer is expected to be of insignificant value and is used to cover rounding\n errors on deposits and withdrawals. Yield is expected to accrue faster than the yield buffer\n can be reasonably depleted.\n IT IS RECOMMENDED TO DONATE ASSETS DIRECTLY TO THE PRIZE VAULT AFTER DEPLOYMENT TO FILL THE YIELD\n BUFFER AND COVER ROUNDING ERRORS UNTIL THE DEPOSITS CAN GENERATE ENOUGH YIELD TO KEEP THE BUFFER \n FULL WITHOUT ASSISTANCE.\n The yield buffer should be set as high as possible while still being considered insignificant\n for the underlying asset. For example, a reasonable yield buffer for USDC with 6 decimals might be\n 1e5 ($0.10), which will cover up to 100k rounding errors while still being an insignificant value.\n Some assets may be considered incompatible with the prize vault if the yield vault incurs rounding\n errors and the underlying asset has a low precision per dollar ratio.\n \n Precision per dollar (PPD) can be calculated by: (10 ^ DECIMALS) / ($ value of 1 asset).\n For example, USDC has a PPD of (10 ^ 6) / ($1) = 10e6 p/$.\n \n As a rule of thumb, assets with lower PPD than USDC should not be assumed to be compatible since\n the potential loss of a single unit rounding error is likely too high to be made up by yield at \n a reasonable rate. Actual results may vary based on expected gas costs, asset fluctuation, and yield\n accrual rates. If the underlying yield vault does not incur any rounding errors, then the yield buffer\n can be set to zero.\n If the yield buffer is depleted on the prize vault, new deposits will be prevented if it would result in\n a rounding error and any rounding errors incurred by withdrawals will not be covered by yield. The yield\n buffer will be replenished automatically as yield accrues."
            },
            "functionSelector": "13dc6c5d",
            "mutability": "immutable",
            "name": "yieldBuffer",
            "nameLocation": "8100:11:155",
            "scope": 81605,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79514,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "8075:7:155",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79519,
            "nodeType": "VariableDeclaration",
            "src": "8192:36:155",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 79516,
              "nodeType": "StructuredDocumentation",
              "src": "8118:69:155",
              "text": "@notice Address of the underlying ERC4626 vault generating yield."
            },
            "functionSelector": "a7f8a5e2",
            "mutability": "immutable",
            "name": "yieldVault",
            "nameLocation": "8218:10:155",
            "scope": 81605,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC4626_$48611",
              "typeString": "contract IERC4626"
            },
            "typeName": {
              "id": 79518,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 79517,
                "name": "IERC4626",
                "nameLocations": [
                  "8192:8:155"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48611,
                "src": "8192:8:155"
              },
              "referencedDeclaration": 48611,
              "src": "8192:8:155",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC4626_$48611",
                "typeString": "contract IERC4626"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79522,
            "nodeType": "VariableDeclaration",
            "src": "8435:32:155",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 79520,
              "nodeType": "StructuredDocumentation",
              "src": "8235:195:155",
              "text": "@notice Yield fee percentage represented in integer format with decimal precision defined by `FEE_PRECISION`.\n @dev For example, if `FEE_PRECISION` were 1e9 a value of 1e7 = 0.01 = 1%."
            },
            "functionSelector": "e16777c1",
            "mutability": "mutable",
            "name": "yieldFeePercentage",
            "nameLocation": "8449:18:155",
            "scope": 81605,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 79521,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "8435:6:155",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79525,
            "nodeType": "VariableDeclaration",
            "src": "8526:32:155",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 79523,
              "nodeType": "StructuredDocumentation",
              "src": "8474:47:155",
              "text": "@notice Address of the yield fee recipient."
            },
            "functionSelector": "edb8eb80",
            "mutability": "mutable",
            "name": "yieldFeeRecipient",
            "nameLocation": "8541:17:155",
            "scope": 81605,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 79524,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "8526:7:155",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79528,
            "nodeType": "VariableDeclaration",
            "src": "8661:30:155",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 79526,
              "nodeType": "StructuredDocumentation",
              "src": "8565:91:155",
              "text": "@notice The accrued yield fee balance that the fee recipient can claim as vault shares."
            },
            "functionSelector": "9a1adf9a",
            "mutability": "mutable",
            "name": "yieldFeeBalance",
            "nameLocation": "8676:15:155",
            "scope": 81605,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 79527,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "8661:7:155",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79531,
            "nodeType": "VariableDeclaration",
            "src": "8787:30:155",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 79529,
              "nodeType": "StructuredDocumentation",
              "src": "8698:84:155",
              "text": "@notice Address of the liquidation pair used to liquidate yield for prize token."
            },
            "functionSelector": "649f2394",
            "mutability": "mutable",
            "name": "liquidationPair",
            "nameLocation": "8802:15:155",
            "scope": 81605,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 79530,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "8787:7:155",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79535,
            "nodeType": "VariableDeclaration",
            "src": "9087:31:155",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 79532,
              "nodeType": "StructuredDocumentation",
              "src": "9020:62:155",
              "text": "@notice Address of the underlying asset used by the Vault."
            },
            "mutability": "immutable",
            "name": "_asset",
            "nameLocation": "9112:6:155",
            "scope": 81605,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$49389",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 79534,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 79533,
                "name": "IERC20",
                "nameLocations": [
                  "9087:6:155"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49389,
                "src": "9087:6:155"
              },
              "referencedDeclaration": 49389,
              "src": "9087:6:155",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$49389",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "id": 79538,
            "nodeType": "VariableDeclaration",
            "src": "9168:43:155",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 79536,
              "nodeType": "StructuredDocumentation",
              "src": "9125:38:155",
              "text": "@notice Underlying asset decimals."
            },
            "mutability": "immutable",
            "name": "_underlyingDecimals",
            "nameLocation": "9192:19:155",
            "scope": 81605,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 79537,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "9168:5:155",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "id": 79543,
            "nodeType": "EventDefinition",
            "src": "9544:62:155",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 79539,
              "nodeType": "StructuredDocumentation",
              "src": "9403:136:155",
              "text": "@notice Emitted when a new yield fee recipient has been set.\n @param yieldFeeRecipient Address of the new yield fee recipient"
            },
            "eventSelector": "5d55a9f17ebec95846f4d400ad862a51f9564a7973f6622d3c99a34feb6a0aec",
            "name": "YieldFeeRecipientSet",
            "nameLocation": "9550:20:155",
            "parameters": {
              "id": 79542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79541,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "yieldFeeRecipient",
                  "nameLocation": "9587:17:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79543,
                  "src": "9571:33:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9571:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9570:35:155"
            }
          },
          {
            "id": 79548,
            "nodeType": "EventDefinition",
            "src": "9741:56:155",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 79544,
              "nodeType": "StructuredDocumentation",
              "src": "9612:124:155",
              "text": "@notice Emitted when a new yield fee percentage has been set.\n @param yieldFeePercentage New yield fee percentage"
            },
            "eventSelector": "efb99600b8c2baadc10ee4fe77c625b379acb4c29fbb0b90a5f17652d7de0341",
            "name": "YieldFeePercentageSet",
            "nameLocation": "9747:21:155",
            "parameters": {
              "id": 79547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79546,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "yieldFeePercentage",
                  "nameLocation": "9777:18:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79548,
                  "src": "9769:26:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9769:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9768:28:155"
            }
          },
          {
            "id": 79561,
            "nodeType": "EventDefinition",
            "src": "10236:192:155",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 79549,
              "nodeType": "StructuredDocumentation",
              "src": "9803:428:155",
              "text": "@notice Emitted when yield is transferred out by the liquidation pair address.\n @param liquidationPair The liquidation pair address that initiated the transfer\n @param tokenOut The token that was transferred out\n @param recipient The recipient of the tokens\n @param amountOut The amount of tokens sent to the recipient\n @param yieldFee The amount of shares accrued on the yield fee balance"
            },
            "eventSelector": "64d8a6bd56c2c610cd5d2ed87ba4bde3659df2650c7ad8aabde397decf94e07d",
            "name": "TransferYieldOut",
            "nameLocation": "10242:16:155",
            "parameters": {
              "id": 79560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79551,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "liquidationPair",
                  "nameLocation": "10284:15:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79561,
                  "src": "10268:31:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10268:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79553,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "10325:8:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79561,
                  "src": "10309:24:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10309:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79555,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "10359:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79561,
                  "src": "10343:25:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10343:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79557,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "10386:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79561,
                  "src": "10378:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10378:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79559,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "yieldFee",
                  "nameLocation": "10413:8:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79561,
                  "src": "10405:16:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10405:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10258:169:155"
            }
          },
          {
            "id": 79568,
            "nodeType": "EventDefinition",
            "src": "10625:69:155",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 79562,
              "nodeType": "StructuredDocumentation",
              "src": "10434:186:155",
              "text": "@notice Emitted when yield fee shares are claimed by the yield fee recipient.\n @param recipient Address receiving the fee shares\n @param shares Amount of shares claimed"
            },
            "eventSelector": "9b51aebdd88b3f321397bdf9848415ce15dedd1783c775b93b8036c6b0af0f56",
            "name": "ClaimYieldFeeShares",
            "nameLocation": "10631:19:155",
            "parameters": {
              "id": 79567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79564,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "10667:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79568,
                  "src": "10651:25:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10651:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79566,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "10686:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79568,
                  "src": "10678:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10678:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10650:43:155"
            }
          },
          {
            "id": 79571,
            "nodeType": "ErrorDefinition",
            "src": "10957:30:155",
            "nodes": [],
            "documentation": {
              "id": 79569,
              "nodeType": "StructuredDocumentation",
              "src": "10885:67:155",
              "text": "@notice Thrown when the Yield Vault is set to the zero address."
            },
            "errorSelector": "07877e85",
            "name": "YieldVaultZeroAddress",
            "nameLocation": "10963:21:155",
            "parameters": {
              "id": 79570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10984:2:155"
            }
          },
          {
            "id": 79574,
            "nodeType": "ErrorDefinition",
            "src": "11059:25:155",
            "nodes": [],
            "documentation": {
              "id": 79572,
              "nodeType": "StructuredDocumentation",
              "src": "10993:61:155",
              "text": "@notice Thrown when the Owner is set to the zero address."
            },
            "errorSelector": "12c44af2",
            "name": "OwnerZeroAddress",
            "nameLocation": "11065:16:155",
            "parameters": {
              "id": 79573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11081:2:155"
            }
          },
          {
            "id": 79577,
            "nodeType": "ErrorDefinition",
            "src": "11178:27:155",
            "nodes": [],
            "documentation": {
              "id": 79575,
              "nodeType": "StructuredDocumentation",
              "src": "11090:83:155",
              "text": "@notice Thrown when a withdrawal of zero assets on the yield vault is attempted"
            },
            "errorSelector": "f3c41a2b",
            "name": "WithdrawZeroAssets",
            "nameLocation": "11184:18:155",
            "parameters": {
              "id": 79576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11202:2:155"
            }
          },
          {
            "id": 79580,
            "nodeType": "ErrorDefinition",
            "src": "11295:23:155",
            "nodes": [],
            "documentation": {
              "id": 79578,
              "nodeType": "StructuredDocumentation",
              "src": "11211:79:155",
              "text": "@notice Thrown when no shares are being burnt during a withdrawal of assets"
            },
            "errorSelector": "5ee78d86",
            "name": "BurnZeroShares",
            "nameLocation": "11301:14:155",
            "parameters": {
              "id": 79579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11315:2:155"
            }
          },
          {
            "id": 79583,
            "nodeType": "ErrorDefinition",
            "src": "11384:26:155",
            "nodes": [],
            "documentation": {
              "id": 79581,
              "nodeType": "StructuredDocumentation",
              "src": "11324:55:155",
              "text": "@notice Thrown when zero assets are being deposited"
            },
            "errorSelector": "f0f4d07b",
            "name": "DepositZeroAssets",
            "nameLocation": "11390:17:155",
            "parameters": {
              "id": 79582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11407:2:155"
            }
          },
          {
            "id": 79586,
            "nodeType": "ErrorDefinition",
            "src": "11473:23:155",
            "nodes": [],
            "documentation": {
              "id": 79584,
              "nodeType": "StructuredDocumentation",
              "src": "11416:52:155",
              "text": "@notice Thrown when zero shares are being minted"
            },
            "errorSelector": "b31accb7",
            "name": "MintZeroShares",
            "nameLocation": "11479:14:155",
            "parameters": {
              "id": 79585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11493:2:155"
            }
          },
          {
            "id": 79589,
            "nodeType": "ErrorDefinition",
            "src": "11568:24:155",
            "nodes": [],
            "documentation": {
              "id": 79587,
              "nodeType": "StructuredDocumentation",
              "src": "11502:61:155",
              "text": "@notice Thrown if `totalAssets` is zero during a withdraw"
            },
            "errorSelector": "f0bd6f1b",
            "name": "ZeroTotalAssets",
            "nameLocation": "11574:15:155",
            "parameters": {
              "id": 79588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11589:2:155"
            }
          },
          {
            "id": 79592,
            "nodeType": "ErrorDefinition",
            "src": "11678:22:155",
            "nodes": [],
            "documentation": {
              "id": 79590,
              "nodeType": "StructuredDocumentation",
              "src": "11598:75:155",
              "text": "@notice Thrown when the Liquidation Pair being set is the zero address."
            },
            "errorSelector": "158b63ee",
            "name": "LPZeroAddress",
            "nameLocation": "11684:13:155",
            "parameters": {
              "id": 79591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11697:2:155"
            }
          },
          {
            "id": 79595,
            "nodeType": "ErrorDefinition",
            "src": "11801:33:155",
            "nodes": [],
            "documentation": {
              "id": 79593,
              "nodeType": "StructuredDocumentation",
              "src": "11706:90:155",
              "text": "@notice Thrown during the liquidation process when the liquidation amount out is zero."
            },
            "errorSelector": "8ea108ca",
            "name": "LiquidationAmountOutZero",
            "nameLocation": "11807:24:155",
            "parameters": {
              "id": 79594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11831:2:155"
            }
          },
          {
            "id": 79602,
            "nodeType": "ErrorDefinition",
            "src": "12035:59:155",
            "nodes": [],
            "documentation": {
              "id": 79596,
              "nodeType": "StructuredDocumentation",
              "src": "11840:190:155",
              "text": "@notice Thrown during the liquidation process when the caller is not the liquidation pair contract.\n @param caller The caller address\n @param liquidationPair The LP address"
            },
            "errorSelector": "2e281dfe",
            "name": "CallerNotLP",
            "nameLocation": "12041:11:155",
            "parameters": {
              "id": 79601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79598,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "12061:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79602,
                  "src": "12053:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12053:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79600,
                  "mutability": "mutable",
                  "name": "liquidationPair",
                  "nameLocation": "12077:15:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79602,
                  "src": "12069:23:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12069:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12052:41:155"
            }
          },
          {
            "id": 79609,
            "nodeType": "ErrorDefinition",
            "src": "12309:76:155",
            "nodes": [],
            "documentation": {
              "id": 79603,
              "nodeType": "StructuredDocumentation",
              "src": "12100:204:155",
              "text": "@notice Thrown if the caller is not the yield fee recipient when withdrawing yield fee shares.\n @param caller The caller address\n @param yieldFeeRecipient The yield fee recipient address"
            },
            "errorSelector": "1cd3a1b6",
            "name": "CallerNotYieldFeeRecipient",
            "nameLocation": "12315:26:155",
            "parameters": {
              "id": 79608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79605,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "12350:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79609,
                  "src": "12342:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12342:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79607,
                  "mutability": "mutable",
                  "name": "yieldFeeRecipient",
                  "nameLocation": "12366:17:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79609,
                  "src": "12358:25:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12358:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12341:43:155"
            }
          },
          {
            "id": 79616,
            "nodeType": "ErrorDefinition",
            "src": "12593:58:155",
            "nodes": [],
            "documentation": {
              "id": 79610,
              "nodeType": "StructuredDocumentation",
              "src": "12391:197:155",
              "text": "@notice Thrown when the caller of a permit function is not the owner of the assets being permitted.\n @param caller The address of the caller\n @param owner The address of the owner"
            },
            "errorSelector": "58fe8885",
            "name": "PermitCallerNotOwner",
            "nameLocation": "12599:20:155",
            "parameters": {
              "id": 79615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79612,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "12628:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79616,
                  "src": "12620:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12620:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79614,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "12644:5:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79616,
                  "src": "12636:13:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12636:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12619:31:155"
            }
          },
          {
            "id": 79623,
            "nodeType": "ErrorDefinition",
            "src": "12916:94:155",
            "nodes": [],
            "documentation": {
              "id": 79617,
              "nodeType": "StructuredDocumentation",
              "src": "12657:254:155",
              "text": "@notice Thrown when the yield fee percentage being set exceeds the max yield fee allowed.\n @param yieldFeePercentage The yield fee percentage in integer format\n @param maxYieldFeePercentage The max yield fee percentage in integer format"
            },
            "errorSelector": "7bcc613b",
            "name": "YieldFeePercentageExceedsMax",
            "nameLocation": "12922:28:155",
            "parameters": {
              "id": 79622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79619,
                  "mutability": "mutable",
                  "name": "yieldFeePercentage",
                  "nameLocation": "12959:18:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79623,
                  "src": "12951:26:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12951:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79621,
                  "mutability": "mutable",
                  "name": "maxYieldFeePercentage",
                  "nameLocation": "12987:21:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79623,
                  "src": "12979:29:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79620,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12979:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12950:59:155"
            }
          },
          {
            "id": 79630,
            "nodeType": "ErrorDefinition",
            "src": "13232:76:155",
            "nodes": [],
            "documentation": {
              "id": 79624,
              "nodeType": "StructuredDocumentation",
              "src": "13016:211:155",
              "text": "@notice Thrown when the yield fee shares being withdrawn exceeds the available yieldFee Balance.\n @param shares The shares being withdrawn\n @param yieldFeeBalance The available yield fee shares"
            },
            "errorSelector": "13b5e524",
            "name": "SharesExceedsYieldFeeBalance",
            "nameLocation": "13238:28:155",
            "parameters": {
              "id": 79629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79626,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "13275:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79630,
                  "src": "13267:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13267:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79628,
                  "mutability": "mutable",
                  "name": "yieldFeeBalance",
                  "nameLocation": "13291:15:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79630,
                  "src": "13283:23:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13283:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13266:41:155"
            }
          },
          {
            "id": 79637,
            "nodeType": "ErrorDefinition",
            "src": "13512:75:155",
            "nodes": [],
            "documentation": {
              "id": 79631,
              "nodeType": "StructuredDocumentation",
              "src": "13314:193:155",
              "text": "@notice Thrown during the liquidation process when the token in is not the prize token.\n @param tokenIn The provided tokenIn address\n @param prizeToken The prize token address"
            },
            "errorSelector": "301d8304",
            "name": "LiquidationTokenInNotPrizeToken",
            "nameLocation": "13518:31:155",
            "parameters": {
              "id": 79636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79633,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "13558:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79637,
                  "src": "13550:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13550:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79635,
                  "mutability": "mutable",
                  "name": "prizeToken",
                  "nameLocation": "13575:10:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79637,
                  "src": "13567:18:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13567:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13549:37:155"
            }
          },
          {
            "id": 79642,
            "nodeType": "ErrorDefinition",
            "src": "13738:56:155",
            "nodes": [],
            "documentation": {
              "id": 79638,
              "nodeType": "StructuredDocumentation",
              "src": "13593:140:155",
              "text": "@notice Thrown during the liquidation process when the token out is not supported.\n @param tokenOut The provided tokenOut address"
            },
            "errorSelector": "978521e0",
            "name": "LiquidationTokenOutNotSupported",
            "nameLocation": "13744:31:155",
            "parameters": {
              "id": 79641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79640,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "13784:8:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79642,
                  "src": "13776:16:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13776:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13775:18:155"
            }
          },
          {
            "id": 79649,
            "nodeType": "ErrorDefinition",
            "src": "14025:83:155",
            "nodes": [],
            "documentation": {
              "id": 79643,
              "nodeType": "StructuredDocumentation",
              "src": "13800:220:155",
              "text": "@notice Thrown during the liquidation process if the total to withdraw is greater than the available yield.\n @param totalToWithdraw The total yield to withdraw\n @param availableYield The available yield"
            },
            "errorSelector": "e8503776",
            "name": "LiquidationExceedsAvailable",
            "nameLocation": "14031:27:155",
            "parameters": {
              "id": 79648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79645,
                  "mutability": "mutable",
                  "name": "totalToWithdraw",
                  "nameLocation": "14067:15:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79649,
                  "src": "14059:23:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14059:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79647,
                  "mutability": "mutable",
                  "name": "availableYield",
                  "nameLocation": "14092:14:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79649,
                  "src": "14084:22:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14084:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14058:49:155"
            }
          },
          {
            "id": 79656,
            "nodeType": "ErrorDefinition",
            "src": "14393:61:155",
            "nodes": [],
            "documentation": {
              "id": 79650,
              "nodeType": "StructuredDocumentation",
              "src": "14114:274:155",
              "text": "@notice Thrown when a deposit results in a state where the total assets are less than the total share supply.\n @param totalAssets The total assets controlled by the vault\n @param totalSupply The total shares minted and internally accounted for by the vault"
            },
            "errorSelector": "2b8b305a",
            "name": "LossyDeposit",
            "nameLocation": "14399:12:155",
            "parameters": {
              "id": 79655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79652,
                  "mutability": "mutable",
                  "name": "totalAssets",
                  "nameLocation": "14420:11:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79656,
                  "src": "14412:19:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14412:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79654,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nameLocation": "14441:11:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79656,
                  "src": "14433:19:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14433:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14411:42:155"
            }
          },
          {
            "id": 79661,
            "nodeType": "ErrorDefinition",
            "src": "14629:40:155",
            "nodes": [],
            "documentation": {
              "id": 79657,
              "nodeType": "StructuredDocumentation",
              "src": "14460:164:155",
              "text": "@notice Thrown when the mint limit is exceeded after increasing an external or internal share balance.\n @param excess The amount in excess over the limit"
            },
            "errorSelector": "fc062386",
            "name": "MintLimitExceeded",
            "nameLocation": "14635:17:155",
            "parameters": {
              "id": 79660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79659,
                  "mutability": "mutable",
                  "name": "excess",
                  "nameLocation": "14661:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79661,
                  "src": "14653:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14653:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14652:16:155"
            }
          },
          {
            "id": 79668,
            "nodeType": "ErrorDefinition",
            "src": "14884:59:155",
            "nodes": [],
            "documentation": {
              "id": 79662,
              "nodeType": "StructuredDocumentation",
              "src": "14675:204:155",
              "text": "@notice Thrown when a withdraw call burns more shares than the max share limit provided.\n @param shares The shares burned by the withdrawal\n @param maxShares The max share limit provided"
            },
            "errorSelector": "654df34d",
            "name": "MaxSharesExceeded",
            "nameLocation": "14890:17:155",
            "parameters": {
              "id": 79667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79664,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "14916:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79668,
                  "src": "14908:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14908:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79666,
                  "mutability": "mutable",
                  "name": "maxShares",
                  "nameLocation": "14932:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79668,
                  "src": "14924:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79665,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14924:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14907:35:155"
            }
          },
          {
            "id": 79675,
            "nodeType": "ErrorDefinition",
            "src": "15163:61:155",
            "nodes": [],
            "documentation": {
              "id": 79669,
              "nodeType": "StructuredDocumentation",
              "src": "14949:209:155",
              "text": "@notice Thrown when a redeem call returns less assets than the min threshold provided.\n @param assets The assets provided by the redemption\n @param minAssets The min asset threshold requested"
            },
            "errorSelector": "09af2810",
            "name": "MinAssetsNotReached",
            "nameLocation": "15169:19:155",
            "parameters": {
              "id": 79674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79671,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "15197:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79675,
                  "src": "15189:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15189:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79673,
                  "mutability": "mutable",
                  "name": "minAssets",
                  "nameLocation": "15213:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79675,
                  "src": "15205:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15205:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15188:35:155"
            }
          },
          {
            "id": 79680,
            "nodeType": "ErrorDefinition",
            "src": "15380:46:155",
            "nodes": [],
            "documentation": {
              "id": 79676,
              "nodeType": "StructuredDocumentation",
              "src": "15230:145:155",
              "text": "@notice Thrown when the underlying asset does not specify it's number of decimals.\n @param asset The underlying asset that was checked"
            },
            "errorSelector": "f5008769",
            "name": "FailedToGetAssetDecimals",
            "nameLocation": "15386:24:155",
            "parameters": {
              "id": 79679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79678,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "15419:5:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79680,
                  "src": "15411:13:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15411:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15410:15:155"
            }
          },
          {
            "id": 79697,
            "nodeType": "ModifierDefinition",
            "src": "15684:165:155",
            "nodes": [],
            "body": {
              "id": 79696,
              "nodeType": "Block",
              "src": "15715:134:155",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 79686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 79683,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "15729:3:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 79684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15733:6:155",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "15729:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 79685,
                      "name": "liquidationPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79531,
                      "src": "15743:15:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15729:29:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79694,
                  "nodeType": "IfStatement",
                  "src": "15725:107:155",
                  "trueBody": {
                    "id": 79693,
                    "nodeType": "Block",
                    "src": "15760:72:155",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 79688,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "15793:3:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 79689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15797:6:155",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15793:10:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 79690,
                              "name": "liquidationPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79531,
                              "src": "15805:15:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 79687,
                            "name": "CallerNotLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79602,
                            "src": "15781:11:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) pure"
                            }
                          },
                          "id": 79691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15781:40:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 79692,
                        "nodeType": "RevertStatement",
                        "src": "15774:47:155"
                      }
                    ]
                  }
                },
                {
                  "id": 79695,
                  "nodeType": "PlaceholderStatement",
                  "src": "15841:1:155"
                }
              ]
            },
            "documentation": {
              "id": 79681,
              "nodeType": "StructuredDocumentation",
              "src": "15620:59:155",
              "text": "@notice Requires the caller to be the liquidation pair."
            },
            "name": "onlyLiquidationPair",
            "nameLocation": "15693:19:155",
            "parameters": {
              "id": 79682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15712:2:155"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 79714,
            "nodeType": "ModifierDefinition",
            "src": "15922:186:155",
            "nodes": [],
            "body": {
              "id": 79713,
              "nodeType": "Block",
              "src": "15955:153:155",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 79703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 79700,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "15969:3:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 79701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15973:6:155",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "15969:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 79702,
                      "name": "yieldFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79525,
                      "src": "15983:17:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15969:31:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79711,
                  "nodeType": "IfStatement",
                  "src": "15965:126:155",
                  "trueBody": {
                    "id": 79710,
                    "nodeType": "Block",
                    "src": "16002:89:155",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 79705,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "16050:3:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 79706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16054:6:155",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16050:10:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 79707,
                              "name": "yieldFeeRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79525,
                              "src": "16062:17:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 79704,
                            "name": "CallerNotYieldFeeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79609,
                            "src": "16023:26:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) pure"
                            }
                          },
                          "id": 79708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16023:57:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 79709,
                        "nodeType": "RevertStatement",
                        "src": "16016:64:155"
                      }
                    ]
                  }
                },
                {
                  "id": 79712,
                  "nodeType": "PlaceholderStatement",
                  "src": "16100:1:155"
                }
              ]
            },
            "documentation": {
              "id": 79698,
              "nodeType": "StructuredDocumentation",
              "src": "15855:62:155",
              "text": "@notice Requires the caller to be the yield fee recipient."
            },
            "name": "onlyYieldFeeRecipient",
            "nameLocation": "15931:21:155",
            "parameters": {
              "id": 79699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15952:2:155"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 79828,
            "nodeType": "FunctionDefinition",
            "src": "16967:1033:155",
            "nodes": [],
            "body": {
              "id": 79827,
              "nodeType": "Block",
              "src": "17360:640:155",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 79760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 79754,
                          "name": "yieldVault_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79722,
                          "src": "17382:11:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC4626_$48611",
                            "typeString": "contract IERC4626"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC4626_$48611",
                            "typeString": "contract IERC4626"
                          }
                        ],
                        "id": 79753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17374:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17374:7:155",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17374:20:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 79758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17406:1:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 79757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17398:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79756,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17398:7:155",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17398:10:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17374:34:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79764,
                  "nodeType": "IfStatement",
                  "src": "17370:70:155",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 79761,
                        "name": "YieldVaultZeroAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79571,
                        "src": "17417:21:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 79762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17417:23:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 79763,
                    "nodeType": "RevertStatement",
                    "src": "17410:30:155"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 79770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 79765,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79735,
                      "src": "17454:6:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 79768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17472:1:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 79767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17464:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 79766,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17464:7:155",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 79769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17464:10:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17454:20:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79774,
                  "nodeType": "IfStatement",
                  "src": "17450:51:155",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 79771,
                        "name": "OwnerZeroAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79574,
                        "src": "17483:16:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 79772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17483:18:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 79773,
                    "nodeType": "RevertStatement",
                    "src": "17476:25:155"
                  }
                },
                {
                  "assignments": [
                    79777
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79777,
                      "mutability": "mutable",
                      "name": "asset_",
                      "nameLocation": "17519:6:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 79827,
                      "src": "17512:13:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$49389",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 79776,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 79775,
                          "name": "IERC20",
                          "nameLocations": [
                            "17512:6:155"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49389,
                          "src": "17512:6:155"
                        },
                        "referencedDeclaration": 49389,
                        "src": "17512:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49389",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79783,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 79779,
                            "name": "yieldVault_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79722,
                            "src": "17535:11:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC4626_$48611",
                              "typeString": "contract IERC4626"
                            }
                          },
                          "id": 79780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17547:5:155",
                          "memberName": "asset",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48480,
                          "src": "17535:17:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 79781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17535:19:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 79778,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49389,
                      "src": "17528:6:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$49389_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 79782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17528:27:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$49389",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17512:43:155"
                },
                {
                  "assignments": [
                    79785,
                    79787
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79785,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "17571:7:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 79827,
                      "src": "17566:12:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 79784,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "17566:4:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 79787,
                      "mutability": "mutable",
                      "name": "assetDecimals",
                      "nameLocation": "17586:13:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 79827,
                      "src": "17580:19:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 79786,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "17580:5:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79791,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 79789,
                        "name": "asset_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79777,
                        "src": "17624:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49389",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49389",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 79788,
                      "name": "_tryGetAssetDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81100,
                      "src": "17603:20:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$49389_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (contract IERC20) view returns (bool,uint8)"
                      }
                    },
                    "id": 79790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17603:28:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17565:66:155"
                },
                {
                  "condition": {
                    "id": 79792,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79785,
                    "src": "17645:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 79805,
                    "nodeType": "Block",
                    "src": "17720:73:155",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 79801,
                                  "name": "asset_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79777,
                                  "src": "17774:6:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$49389",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$49389",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 79800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17766:7:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 79799,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17766:7:155",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 79802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17766:15:155",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 79798,
                            "name": "FailedToGetAssetDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79680,
                            "src": "17741:24:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 79803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17741:41:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 79804,
                        "nodeType": "RevertStatement",
                        "src": "17734:48:155"
                      }
                    ]
                  },
                  "id": 79806,
                  "nodeType": "IfStatement",
                  "src": "17641:152:155",
                  "trueBody": {
                    "id": 79797,
                    "nodeType": "Block",
                    "src": "17654:60:155",
                    "statements": [
                      {
                        "expression": {
                          "id": 79795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 79793,
                            "name": "_underlyingDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79538,
                            "src": "17668:19:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 79794,
                            "name": "assetDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79787,
                            "src": "17690:13:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "17668:35:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 79796,
                        "nodeType": "ExpressionStatement",
                        "src": "17668:35:155"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 79809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79807,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79535,
                      "src": "17802:6:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$49389",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 79808,
                      "name": "asset_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79777,
                      "src": "17811:6:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$49389",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "17802:15:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$49389",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 79810,
                  "nodeType": "ExpressionStatement",
                  "src": "17802:15:155"
                },
                {
                  "expression": {
                    "id": 79813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79811,
                      "name": "yieldVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79519,
                      "src": "17828:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC4626_$48611",
                        "typeString": "contract IERC4626"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 79812,
                      "name": "yieldVault_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79722,
                      "src": "17841:11:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC4626_$48611",
                        "typeString": "contract IERC4626"
                      }
                    },
                    "src": "17828:24:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC4626_$48611",
                      "typeString": "contract IERC4626"
                    }
                  },
                  "id": 79814,
                  "nodeType": "ExpressionStatement",
                  "src": "17828:24:155"
                },
                {
                  "expression": {
                    "id": 79817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79815,
                      "name": "yieldBuffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79515,
                      "src": "17862:11:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 79816,
                      "name": "yieldBuffer_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79733,
                      "src": "17876:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17862:26:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79818,
                  "nodeType": "ExpressionStatement",
                  "src": "17862:26:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79820,
                        "name": "yieldFeeRecipient_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79729,
                        "src": "17921:18:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 79819,
                      "name": "_setYieldFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81604,
                      "src": "17899:21:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 79821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17899:41:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79822,
                  "nodeType": "ExpressionStatement",
                  "src": "17899:41:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79824,
                        "name": "yieldFeePercentage_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79731,
                        "src": "17973:19:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 79823,
                      "name": "_setYieldFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81589,
                      "src": "17950:22:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32)"
                      }
                    },
                    "id": 79825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17950:43:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79826,
                  "nodeType": "ExpressionStatement",
                  "src": "17950:43:155"
                }
              ]
            },
            "documentation": {
              "id": 79715,
              "nodeType": "StructuredDocumentation",
              "src": "16304:658:155",
              "text": "@notice Vault constructor\n @param name_ Name of the ERC20 share minted by the vault\n @param symbol_ Symbol of the ERC20 share minted by the vault\n @param yieldVault_ Address of the underlying ERC4626 vault in which assets are deposited to generate yield\n @param prizePool_ Address of the PrizePool that computes prizes\n @param claimer_ Address of the claimer\n @param yieldFeeRecipient_ Address of the yield fee recipient\n @param yieldFeePercentage_ Yield fee percentage\n @param yieldBuffer_ Amount of yield to keep as a buffer\n @param owner_ Address that will gain ownership of this contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 79738,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79717,
                    "src": "17267:5:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 79739,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79719,
                    "src": "17274:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 79740,
                        "name": "prizePool_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79725,
                        "src": "17283:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PrizePool_$65462",
                          "typeString": "contract PrizePool"
                        }
                      },
                      "id": 79741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17294:14:155",
                      "memberName": "twabController",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63441,
                      "src": "17283:25:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_TwabController_$73104_$",
                        "typeString": "function () view external returns (contract TwabController)"
                      }
                    },
                    "id": 79742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17283:27:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TwabController_$73104",
                      "typeString": "contract TwabController"
                    }
                  }
                ],
                "id": 79743,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 79737,
                  "name": "TwabERC20",
                  "nameLocations": [
                    "17257:9:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 81949,
                  "src": "17257:9:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "17257:54:155"
              },
              {
                "arguments": [
                  {
                    "id": 79745,
                    "name": "prizePool_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79725,
                    "src": "17322:10:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PrizePool_$65462",
                      "typeString": "contract PrizePool"
                    }
                  },
                  {
                    "id": 79746,
                    "name": "claimer_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79727,
                    "src": "17334:8:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 79747,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 79744,
                  "name": "Claimable",
                  "nameLocations": [
                    "17312:9:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 82261,
                  "src": "17312:9:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "17312:31:155"
              },
              {
                "arguments": [
                  {
                    "id": 79749,
                    "name": "owner_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79735,
                    "src": "17352:6:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 79750,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 79748,
                  "name": "Ownable",
                  "nameLocations": [
                    "17344:7:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55978,
                  "src": "17344:7:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "17344:15:155"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 79736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79717,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "17002:5:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79828,
                  "src": "16988:19:155",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79716,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16988:6:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79719,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "17031:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79828,
                  "src": "17017:21:155",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79718,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "17017:6:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79722,
                  "mutability": "mutable",
                  "name": "yieldVault_",
                  "nameLocation": "17057:11:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79828,
                  "src": "17048:20:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC4626_$48611",
                    "typeString": "contract IERC4626"
                  },
                  "typeName": {
                    "id": 79721,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 79720,
                      "name": "IERC4626",
                      "nameLocations": [
                        "17048:8:155"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48611,
                      "src": "17048:8:155"
                    },
                    "referencedDeclaration": 48611,
                    "src": "17048:8:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC4626_$48611",
                      "typeString": "contract IERC4626"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79725,
                  "mutability": "mutable",
                  "name": "prizePool_",
                  "nameLocation": "17088:10:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79828,
                  "src": "17078:20:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PrizePool_$65462",
                    "typeString": "contract PrizePool"
                  },
                  "typeName": {
                    "id": 79724,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 79723,
                      "name": "PrizePool",
                      "nameLocations": [
                        "17078:9:155"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65462,
                      "src": "17078:9:155"
                    },
                    "referencedDeclaration": 65462,
                    "src": "17078:9:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PrizePool_$65462",
                      "typeString": "contract PrizePool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79727,
                  "mutability": "mutable",
                  "name": "claimer_",
                  "nameLocation": "17116:8:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79828,
                  "src": "17108:16:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17108:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79729,
                  "mutability": "mutable",
                  "name": "yieldFeeRecipient_",
                  "nameLocation": "17142:18:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79828,
                  "src": "17134:26:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17134:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79731,
                  "mutability": "mutable",
                  "name": "yieldFeePercentage_",
                  "nameLocation": "17177:19:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79828,
                  "src": "17170:26:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 79730,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17170:6:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79733,
                  "mutability": "mutable",
                  "name": "yieldBuffer_",
                  "nameLocation": "17214:12:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79828,
                  "src": "17206:20:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17206:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79735,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "17244:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79828,
                  "src": "17236:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17236:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16978:278:155"
            },
            "returnParameters": {
              "id": 79751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17360:0:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79840,
            "nodeType": "FunctionDefinition",
            "src": "18235:123:155",
            "nodes": [],
            "body": {
              "id": 79839,
              "nodeType": "Block",
              "src": "18315:43:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 79837,
                    "name": "_underlyingDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79538,
                    "src": "18332:19:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 79836,
                  "id": 79838,
                  "nodeType": "Return",
                  "src": "18325:26:155"
                }
              ]
            },
            "baseFunctions": [
              48799,
              50212
            ],
            "documentation": {
              "id": 79829,
              "nodeType": "StructuredDocumentation",
              "src": "18200:30:155",
              "text": "@inheritdoc IERC20Metadata"
            },
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "18244:8:155",
            "overrides": {
              "id": 79833,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 79831,
                  "name": "ERC20",
                  "nameLocations": [
                    "18276:5:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49311,
                  "src": "18276:5:155"
                },
                {
                  "id": 79832,
                  "name": "IERC20Metadata",
                  "nameLocations": [
                    "18283:14:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50213,
                  "src": "18283:14:155"
                }
              ],
              "src": "18267:31:155"
            },
            "parameters": {
              "id": 79830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18252:2:155"
            },
            "returnParameters": {
              "id": 79836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79835,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79840,
                  "src": "18308:5:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 79834,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18308:5:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18307:7:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79852,
            "nodeType": "FunctionDefinition",
            "src": "18594:88:155",
            "nodes": [],
            "body": {
              "id": 79851,
              "nodeType": "Block",
              "src": "18643:39:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79848,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79535,
                        "src": "18668:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49389",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49389",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 79847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "18660:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 79846,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18660:7:155",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 79849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18660:15:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 79845,
                  "id": 79850,
                  "nodeType": "Return",
                  "src": "18653:22:155"
                }
              ]
            },
            "baseFunctions": [
              48480
            ],
            "documentation": {
              "id": 79841,
              "nodeType": "StructuredDocumentation",
              "src": "18565:24:155",
              "text": "@inheritdoc IERC4626"
            },
            "functionSelector": "38d52e0f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "asset",
            "nameLocation": "18603:5:155",
            "parameters": {
              "id": 79842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18608:2:155"
            },
            "returnParameters": {
              "id": 79845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79844,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79852,
                  "src": "18634:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18634:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18633:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 79878,
            "nodeType": "FunctionDefinition",
            "src": "19017:174:155",
            "nodes": [],
            "body": {
              "id": 79877,
              "nodeType": "Block",
              "src": "19070:121:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 79875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 79864,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "19143:4:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                    "typeString": "contract PrizeVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                    "typeString": "contract PrizeVault"
                                  }
                                ],
                                "id": 79863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "19135:7:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 79862,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "19135:7:155",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 79865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19135:13:155",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 79860,
                              "name": "yieldVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79519,
                              "src": "19114:10:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC4626_$48611",
                                "typeString": "contract IERC4626"
                              }
                            },
                            "id": 79861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19125:9:155",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49346,
                            "src": "19114:20:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 79866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19114:35:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 79858,
                          "name": "yieldVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79519,
                          "src": "19087:10:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC4626_$48611",
                            "typeString": "contract IERC4626"
                          }
                        },
                        "id": 79859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19098:15:155",
                        "memberName": "convertToAssets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48502,
                        "src": "19087:26:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256)"
                        }
                      },
                      "id": 79867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19087:63:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 79872,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "19178:4:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                "typeString": "contract PrizeVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                "typeString": "contract PrizeVault"
                              }
                            ],
                            "id": 79871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19170:7:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 79870,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19170:7:155",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 79873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19170:13:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 79868,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79535,
                          "src": "19153:6:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$49389",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 79869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19160:9:155",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49346,
                        "src": "19153:16:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 79874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19153:31:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19087:97:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 79857,
                  "id": 79876,
                  "nodeType": "Return",
                  "src": "19080:104:155"
                }
              ]
            },
            "baseFunctions": [
              48486
            ],
            "documentation": {
              "id": 79853,
              "nodeType": "StructuredDocumentation",
              "src": "18688:324:155",
              "text": "@inheritdoc IERC4626\n @dev The latent asset balance is included in the total asset count to account for the \"dust collection\n strategy\".\n @dev This function uses `convertToAssets` to ensure it does not revert, but may result in some\n approximation depending on the yield vault implementation."
            },
            "functionSelector": "01e1d114",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalAssets",
            "nameLocation": "19026:11:155",
            "parameters": {
              "id": 79854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19037:2:155"
            },
            "returnParameters": {
              "id": 79857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79856,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79878,
                  "src": "19061:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19061:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19060:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79898,
            "nodeType": "FunctionDefinition",
            "src": "19331:171:155",
            "nodes": [],
            "body": {
              "id": 79897,
              "nodeType": "Block",
              "src": "19405:97:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79887,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79881,
                        "src": "19439:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 79888,
                          "name": "totalAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79878,
                          "src": "19448:11:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 79889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19448:13:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 79890,
                          "name": "totalDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80496,
                          "src": "19463:9:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 79891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19463:11:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 79892,
                            "name": "Math",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "19476:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Math_$54177_$",
                              "typeString": "type(library Math)"
                            }
                          },
                          "id": 79893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19481:8:155",
                          "memberName": "Rounding",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53318,
                          "src": "19476:13:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Rounding_$53318_$",
                            "typeString": "type(enum Math.Rounding)"
                          }
                        },
                        "id": 79894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "19490:4:155",
                        "memberName": "Down",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53315,
                        "src": "19476:18:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Rounding_$53318",
                          "typeString": "enum Math.Rounding"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_Rounding_$53318",
                          "typeString": "enum Math.Rounding"
                        }
                      ],
                      "id": 79886,
                      "name": "_convertToShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81172,
                      "src": "19422:16:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$53318_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"
                      }
                    },
                    "id": 79895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19422:73:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 79885,
                  "id": 79896,
                  "nodeType": "Return",
                  "src": "19415:80:155"
                }
              ]
            },
            "baseFunctions": [
              48494
            ],
            "documentation": {
              "id": 79879,
              "nodeType": "StructuredDocumentation",
              "src": "19197:129:155",
              "text": "@inheritdoc IERC4626\n @dev This function uses approximate total assets and should not be used for onchain conversions."
            },
            "functionSelector": "c6e6f592",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertToShares",
            "nameLocation": "19340:15:155",
            "parameters": {
              "id": 79882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79881,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "19364:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79898,
                  "src": "19356:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19356:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19355:17:155"
            },
            "returnParameters": {
              "id": 79885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79884,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79898,
                  "src": "19396:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19396:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19395:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 79918,
            "nodeType": "FunctionDefinition",
            "src": "19642:171:155",
            "nodes": [],
            "body": {
              "id": 79917,
              "nodeType": "Block",
              "src": "19716:97:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79907,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79901,
                        "src": "19750:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 79908,
                          "name": "totalAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79878,
                          "src": "19759:11:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 79909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19759:13:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 79910,
                          "name": "totalDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80496,
                          "src": "19774:9:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 79911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19774:11:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 79912,
                            "name": "Math",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "19787:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Math_$54177_$",
                              "typeString": "type(library Math)"
                            }
                          },
                          "id": 79913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19792:8:155",
                          "memberName": "Rounding",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53318,
                          "src": "19787:13:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Rounding_$53318_$",
                            "typeString": "type(enum Math.Rounding)"
                          }
                        },
                        "id": 79914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "19801:4:155",
                        "memberName": "Down",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53315,
                        "src": "19787:18:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Rounding_$53318",
                          "typeString": "enum Math.Rounding"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_Rounding_$53318",
                          "typeString": "enum Math.Rounding"
                        }
                      ],
                      "id": 79906,
                      "name": "_convertToAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81203,
                      "src": "19733:16:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$53318_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"
                      }
                    },
                    "id": 79915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19733:73:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 79905,
                  "id": 79916,
                  "nodeType": "Return",
                  "src": "19726:80:155"
                }
              ]
            },
            "baseFunctions": [
              48502
            ],
            "documentation": {
              "id": 79899,
              "nodeType": "StructuredDocumentation",
              "src": "19508:129:155",
              "text": "@inheritdoc IERC4626\n @dev This function uses approximate total assets and should not be used for onchain conversions."
            },
            "functionSelector": "07a2d13a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertToAssets",
            "nameLocation": "19651:15:155",
            "parameters": {
              "id": 79902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79901,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "19675:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 79918,
                  "src": "19667:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19667:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19666:17:155"
            },
            "returnParameters": {
              "id": 79905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79904,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79918,
                  "src": "19707:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19707:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19706:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80003,
            "nodeType": "FunctionDefinition",
            "src": "20629:921:155",
            "nodes": [],
            "body": {
              "id": 80002,
              "nodeType": "Block",
              "src": "20703:847:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    79927
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79927,
                      "mutability": "mutable",
                      "name": "_totalDebt",
                      "nameLocation": "20721:10:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80002,
                      "src": "20713:18:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79926,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20713:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79930,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 79928,
                      "name": "totalDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80496,
                      "src": "20734:9:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 79929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20734:11:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20713:32:155"
                },
                {
                  "assignments": [
                    79932,
                    79934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79932,
                      "mutability": "mutable",
                      "name": "_success",
                      "nameLocation": "20761:8:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80002,
                      "src": "20756:13:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 79931,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "20756:4:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 79934,
                      "mutability": "mutable",
                      "name": "_totalAssets",
                      "nameLocation": "20779:12:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80002,
                      "src": "20771:20:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79933,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20771:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79937,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 79935,
                      "name": "_tryGetTotalPreciseAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81136,
                      "src": "20795:25:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function () view returns (bool,uint256)"
                      }
                    },
                    "id": 79936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20795:27:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20755:67:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 79947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 79939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "20836:9:155",
                      "subExpression": {
                        "id": 79938,
                        "name": "_success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79932,
                        "src": "20837:8:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 79946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 79940,
                        "name": "_totalAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79934,
                        "src": "20849:12:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 79945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79941,
                          "name": "_totalDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79927,
                          "src": "20864:10:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 79944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 79942,
                            "name": "yieldBuffer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79515,
                            "src": "20877:11:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 79943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20891:1:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "20877:15:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20864:28:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "20849:43:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "20836:56:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79950,
                  "nodeType": "IfStatement",
                  "src": "20832:70:155",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 79948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20901:1:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 79925,
                    "id": 79949,
                    "nodeType": "Return",
                    "src": "20894:8:155"
                  }
                },
                {
                  "assignments": [
                    79952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79952,
                      "mutability": "mutable",
                      "name": "_latentBalance",
                      "nameLocation": "20921:14:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80002,
                      "src": "20913:22:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79951,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20913:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79960,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79957,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "20963:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          ],
                          "id": 79956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20955:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79955,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20955:7:155",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20955:13:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79953,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79535,
                        "src": "20938:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49389",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 79954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20945:9:155",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49346,
                      "src": "20938:16:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 79959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20938:31:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20913:56:155"
                },
                {
                  "assignments": [
                    79962
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79962,
                      "mutability": "mutable",
                      "name": "_maxYieldVaultDeposit",
                      "nameLocation": "20987:21:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80002,
                      "src": "20979:29:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79961,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20979:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79970,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79967,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "21041:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          ],
                          "id": 79966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21033:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79965,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21033:7:155",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21033:13:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79963,
                        "name": "yieldVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79519,
                        "src": "21011:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC4626_$48611",
                          "typeString": "contract IERC4626"
                        }
                      },
                      "id": 79964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21022:10:155",
                      "memberName": "maxDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48510,
                      "src": "21011:21:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 79969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21011:36:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20979:68:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 79973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 79971,
                      "name": "_latentBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79952,
                      "src": "21061:14:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 79972,
                      "name": "_maxYieldVaultDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79962,
                      "src": "21079:21:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21061:39:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 80000,
                    "nodeType": "Block",
                    "src": "21141:403:155",
                    "statements": [
                      {
                        "assignments": [
                          79978
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 79978,
                            "mutability": "mutable",
                            "name": "_depositLimit",
                            "nameLocation": "21276:13:155",
                            "nodeType": "VariableDeclaration",
                            "scope": 80000,
                            "src": "21268:21:155",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 79977,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "21268:7:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 79982,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 79980,
                              "name": "_totalDebt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79927,
                              "src": "21303:10:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 79979,
                            "name": "_mintLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81216,
                            "src": "21292:10:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint256)"
                            }
                          },
                          "id": 79981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21292:22:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21268:46:155"
                      },
                      {
                        "assignments": [
                          79984
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 79984,
                            "mutability": "mutable",
                            "name": "_maxDeposit",
                            "nameLocation": "21336:11:155",
                            "nodeType": "VariableDeclaration",
                            "scope": 80000,
                            "src": "21328:19:155",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 79983,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "21328:7:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 79985,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21328:19:155"
                      },
                      {
                        "id": 79992,
                        "nodeType": "UncheckedBlock",
                        "src": "21361:95:155",
                        "statements": [
                          {
                            "expression": {
                              "id": 79990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 79986,
                                "name": "_maxDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79984,
                                "src": "21389:11:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 79989,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 79987,
                                  "name": "_maxYieldVaultDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79962,
                                  "src": "21403:21:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 79988,
                                  "name": "_latentBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79952,
                                  "src": "21427:14:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21403:38:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21389:52:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 79991,
                            "nodeType": "ExpressionStatement",
                            "src": "21389:52:155"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 79995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 79993,
                              "name": "_depositLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79978,
                              "src": "21476:13:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 79994,
                              "name": "_maxDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79984,
                              "src": "21492:11:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21476:27:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 79997,
                            "name": "_maxDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79984,
                            "src": "21522:11:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 79998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "21476:57:155",
                          "trueExpression": {
                            "id": 79996,
                            "name": "_depositLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79978,
                            "src": "21506:13:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 79925,
                        "id": 79999,
                        "nodeType": "Return",
                        "src": "21469:64:155"
                      }
                    ]
                  },
                  "id": 80001,
                  "nodeType": "IfStatement",
                  "src": "21057:487:155",
                  "trueBody": {
                    "id": 79976,
                    "nodeType": "Block",
                    "src": "21102:33:155",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 79974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21123:1:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 79925,
                        "id": 79975,
                        "nodeType": "Return",
                        "src": "21116:8:155"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              48510
            ],
            "documentation": {
              "id": 79919,
              "nodeType": "StructuredDocumentation",
              "src": "19819:805:155",
              "text": "@inheritdoc IERC4626\n @dev Considers the TWAB mint limit\n @dev Returns zero if any deposit would result in a loss of assets\n @dev Returns zero if total assets cannot be determined\n @dev Returns zero if the yield buffer is less than half full. This is a safety precaution to ensure\n a deposit of the asset amount returned by this function cannot reasonably trigger a `LossyDeposit`\n revert in the `deposit` or `mint` functions if the yield buffer has been configured properly.\n @dev Any latent balance of assets in the prize vault will be swept in with the deposit as a part of\n the \"dust collection strategy\". This means that the max deposit must account for the latent balance\n by subtracting it from the max deposit available otherwise."
            },
            "functionSelector": "402d267d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxDeposit",
            "nameLocation": "20638:10:155",
            "parameters": {
              "id": 79922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79921,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80003,
                  "src": "20649:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20649:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20648:24:155"
            },
            "returnParameters": {
              "id": 79925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79924,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80003,
                  "src": "20694:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20694:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20693:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80016,
            "nodeType": "FunctionDefinition",
            "src": "21751:107:155",
            "nodes": [],
            "body": {
              "id": 80015,
              "nodeType": "Block",
              "src": "21816:42:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80012,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80006,
                        "src": "21844:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 80011,
                      "name": "maxDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80003,
                      "src": "21833:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 80013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21833:18:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80010,
                  "id": 80014,
                  "nodeType": "Return",
                  "src": "21826:25:155"
                }
              ]
            },
            "baseFunctions": [
              48536
            ],
            "documentation": {
              "id": 80004,
              "nodeType": "StructuredDocumentation",
              "src": "21556:190:155",
              "text": "@inheritdoc IERC4626\n @dev Returns the same value as `maxDeposit` since shares and assets are 1:1 on mint\n @dev Returns zero if any deposit would result in a loss of assets"
            },
            "functionSelector": "c63d75b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxMint",
            "nameLocation": "21760:7:155",
            "parameters": {
              "id": 80007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80006,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "21776:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80016,
                  "src": "21768:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21768:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21767:16:155"
            },
            "returnParameters": {
              "id": 80010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80009,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80016,
                  "src": "21807:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21807:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21806:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80071,
            "nodeType": "FunctionDefinition",
            "src": "22139:576:155",
            "nodes": [],
            "body": {
              "id": 80070,
              "nodeType": "Block",
              "src": "22208:507:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80025,
                    80027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80025,
                      "mutability": "mutable",
                      "name": "_success",
                      "nameLocation": "22224:8:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80070,
                      "src": "22219:13:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 80024,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "22219:4:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 80027,
                      "mutability": "mutable",
                      "name": "_totalAssets",
                      "nameLocation": "22242:12:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80070,
                      "src": "22234:20:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80026,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22234:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80030,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80028,
                      "name": "_tryGetTotalPreciseAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81136,
                      "src": "22258:25:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function () view returns (bool,uint256)"
                      }
                    },
                    "id": 80029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22258:27:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22218:67:155"
                },
                {
                  "condition": {
                    "id": 80032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "22299:9:155",
                    "subExpression": {
                      "id": 80031,
                      "name": "_success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80025,
                      "src": "22300:8:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80035,
                  "nodeType": "IfStatement",
                  "src": "22295:23:155",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 80033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22317:1:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 80023,
                    "id": 80034,
                    "nodeType": "Return",
                    "src": "22310:8:155"
                  }
                },
                {
                  "assignments": [
                    80037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80037,
                      "mutability": "mutable",
                      "name": "_maxWithdraw",
                      "nameLocation": "22345:12:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80070,
                      "src": "22337:20:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80036,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22337:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80048,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 80038,
                        "name": "_maxYieldVaultWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81502,
                        "src": "22360:22:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 80039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22360:24:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 80044,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "22412:4:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                "typeString": "contract PrizeVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                "typeString": "contract PrizeVault"
                              }
                            ],
                            "id": 80043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "22404:7:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 80042,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "22404:7:155",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 80045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22404:13:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 80040,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79535,
                          "src": "22387:6:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$49389",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 80041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "22394:9:155",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49346,
                        "src": "22387:16:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 80046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22387:31:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22360:58:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22337:81:155"
                },
                {
                  "assignments": [
                    80050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80050,
                      "mutability": "mutable",
                      "name": "_ownerAssets",
                      "nameLocation": "22537:12:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80070,
                      "src": "22529:20:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80049,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22529:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80062,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80053,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80019,
                            "src": "22579:6:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 80052,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            81844
                          ],
                          "referencedDeclaration": 81844,
                          "src": "22569:9:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 80054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22569:17:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80055,
                        "name": "_totalAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80027,
                        "src": "22588:12:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 80056,
                          "name": "totalDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80496,
                          "src": "22602:9:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 80057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22602:11:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 80058,
                            "name": "Math",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "22615:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Math_$54177_$",
                              "typeString": "type(library Math)"
                            }
                          },
                          "id": 80059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "22620:8:155",
                          "memberName": "Rounding",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53318,
                          "src": "22615:13:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Rounding_$53318_$",
                            "typeString": "type(enum Math.Rounding)"
                          }
                        },
                        "id": 80060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "22629:4:155",
                        "memberName": "Down",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53315,
                        "src": "22615:18:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Rounding_$53318",
                          "typeString": "enum Math.Rounding"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_Rounding_$53318",
                          "typeString": "enum Math.Rounding"
                        }
                      ],
                      "id": 80051,
                      "name": "_convertToAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81203,
                      "src": "22552:16:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$53318_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"
                      }
                    },
                    "id": 80061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22552:82:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22529:105:155"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 80065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 80063,
                        "name": "_ownerAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80050,
                        "src": "22651:12:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 80064,
                        "name": "_maxWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80037,
                        "src": "22666:12:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "22651:27:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 80067,
                      "name": "_maxWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80037,
                      "src": "22696:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 80068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "22651:57:155",
                    "trueExpression": {
                      "id": 80066,
                      "name": "_ownerAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80050,
                      "src": "22681:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80023,
                  "id": 80069,
                  "nodeType": "Return",
                  "src": "22644:64:155"
                }
              ]
            },
            "baseFunctions": [
              48562
            ],
            "documentation": {
              "id": 80017,
              "nodeType": "StructuredDocumentation",
              "src": "21864:270:155",
              "text": "@inheritdoc IERC4626\n @dev The prize vault maintains a latent balance of assets as part of the \"dust collection strategy\".\n This latent balance are accounted for in the max withdraw limits.\n @dev Returns zero if total assets cannot be determined"
            },
            "functionSelector": "ce96cb77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxWithdraw",
            "nameLocation": "22148:11:155",
            "parameters": {
              "id": 80020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80019,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "22168:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80071,
                  "src": "22160:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22160:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22159:16:155"
            },
            "returnParameters": {
              "id": 80023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80022,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80071,
                  "src": "22199:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22199:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22198:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80138,
            "nodeType": "FunctionDefinition",
            "src": "22994:1245:155",
            "nodes": [],
            "body": {
              "id": 80137,
              "nodeType": "Block",
              "src": "23061:1178:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80080,
                    80082
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80080,
                      "mutability": "mutable",
                      "name": "_success",
                      "nameLocation": "23077:8:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80137,
                      "src": "23072:13:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 80079,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "23072:4:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 80082,
                      "mutability": "mutable",
                      "name": "_totalAssets",
                      "nameLocation": "23095:12:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80137,
                      "src": "23087:20:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80081,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23087:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80085,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80083,
                      "name": "_tryGetTotalPreciseAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81136,
                      "src": "23111:25:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$_t_uint256_$",
                        "typeString": "function () view returns (bool,uint256)"
                      }
                    },
                    "id": 80084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23111:27:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23071:67:155"
                },
                {
                  "condition": {
                    "id": 80087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "23152:9:155",
                    "subExpression": {
                      "id": 80086,
                      "name": "_success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80080,
                      "src": "23153:8:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80090,
                  "nodeType": "IfStatement",
                  "src": "23148:23:155",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 80088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23170:1:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 80078,
                    "id": 80089,
                    "nodeType": "Return",
                    "src": "23163:8:155"
                  }
                },
                {
                  "assignments": [
                    80092
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80092,
                      "mutability": "mutable",
                      "name": "_maxWithdraw",
                      "nameLocation": "23190:12:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80137,
                      "src": "23182:20:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80091,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23182:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80103,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 80093,
                        "name": "_maxYieldVaultWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81502,
                        "src": "23205:22:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 80094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23205:24:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 80099,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "23257:4:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                "typeString": "contract PrizeVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                "typeString": "contract PrizeVault"
                              }
                            ],
                            "id": 80098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "23249:7:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 80097,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "23249:7:155",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 80100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23249:13:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 80095,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79535,
                          "src": "23232:6:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$49389",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 80096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23239:9:155",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49346,
                        "src": "23232:16:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 80101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23232:31:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23205:58:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23182:81:155"
                },
                {
                  "assignments": [
                    80105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80105,
                      "mutability": "mutable",
                      "name": "_ownerShares",
                      "nameLocation": "23281:12:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80137,
                      "src": "23273:20:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80104,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23273:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80109,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80107,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80074,
                        "src": "23306:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 80106,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        81844
                      ],
                      "referencedDeclaration": 81844,
                      "src": "23296:9:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 80108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23296:17:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23273:40:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80110,
                      "name": "_ownerShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80105,
                      "src": "23598:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 80111,
                      "name": "_maxWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80092,
                      "src": "23613:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23598:27:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 80135,
                    "nodeType": "Block",
                    "src": "24189:44:155",
                    "statements": [
                      {
                        "expression": {
                          "id": 80133,
                          "name": "_ownerShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80105,
                          "src": "24210:12:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 80078,
                        "id": 80134,
                        "nodeType": "Return",
                        "src": "24203:19:155"
                      }
                    ]
                  },
                  "id": 80136,
                  "nodeType": "IfStatement",
                  "src": "23594:639:155",
                  "trueBody": {
                    "id": 80132,
                    "nodeType": "Block",
                    "src": "23627:556:155",
                    "statements": [
                      {
                        "assignments": [
                          80114
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 80114,
                            "mutability": "mutable",
                            "name": "_maxScaledRedeem",
                            "nameLocation": "23991:16:155",
                            "nodeType": "VariableDeclaration",
                            "scope": 80132,
                            "src": "23983:24:155",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 80113,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23983:7:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 80124,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 80116,
                              "name": "_maxWithdraw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80092,
                              "src": "24027:12:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 80117,
                              "name": "_totalAssets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80082,
                              "src": "24041:12:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 80118,
                                "name": "totalDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80496,
                                "src": "24055:9:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 80119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24055:11:155",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 80120,
                                  "name": "Math",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54177,
                                  "src": "24068:4:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Math_$54177_$",
                                    "typeString": "type(library Math)"
                                  }
                                },
                                "id": 80121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "24073:8:155",
                                "memberName": "Rounding",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 53318,
                                "src": "24068:13:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Rounding_$53318_$",
                                  "typeString": "type(enum Math.Rounding)"
                                }
                              },
                              "id": 80122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "24082:2:155",
                              "memberName": "Up",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53316,
                              "src": "24068:16:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Rounding_$53318",
                                "typeString": "enum Math.Rounding"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Rounding_$53318",
                                "typeString": "enum Math.Rounding"
                              }
                            ],
                            "id": 80115,
                            "name": "_convertToShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81172,
                            "src": "24010:16:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$53318_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"
                            }
                          },
                          "id": 80123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24010:75:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23983:102:155"
                      },
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 80127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 80125,
                              "name": "_maxScaledRedeem",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80114,
                              "src": "24106:16:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 80126,
                              "name": "_ownerShares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80105,
                              "src": "24126:12:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "24106:32:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 80129,
                            "name": "_maxScaledRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80114,
                            "src": "24156:16:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 80130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "24106:66:155",
                          "trueExpression": {
                            "id": 80128,
                            "name": "_ownerShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80105,
                            "src": "24141:12:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 80078,
                        "id": 80131,
                        "nodeType": "Return",
                        "src": "24099:73:155"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              48590
            ],
            "documentation": {
              "id": 80072,
              "nodeType": "StructuredDocumentation",
              "src": "22721:268:155",
              "text": "@inheritdoc IERC4626\n @dev The prize vault maintains a latent balance of assets as part of the \"dust collection strategy\".\n This latent balance are accounted for in the max redeem limits.\n @dev Returns zero if total assets cannot be determined"
            },
            "functionSelector": "d905777e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxRedeem",
            "nameLocation": "23003:9:155",
            "parameters": {
              "id": 80075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80074,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "23021:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80138,
                  "src": "23013:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23013:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23012:16:155"
            },
            "returnParameters": {
              "id": 80078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80077,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80138,
                  "src": "23052:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23052:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23051:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80149,
            "nodeType": "FunctionDefinition",
            "src": "24274:199:155",
            "nodes": [],
            "body": {
              "id": 80148,
              "nodeType": "Block",
              "src": "24345:128:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 80146,
                    "name": "_assets",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80141,
                    "src": "24459:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80145,
                  "id": 80147,
                  "nodeType": "Return",
                  "src": "24452:14:155"
                }
              ]
            },
            "baseFunctions": [
              48518
            ],
            "documentation": {
              "id": 80139,
              "nodeType": "StructuredDocumentation",
              "src": "24245:24:155",
              "text": "@inheritdoc IERC4626"
            },
            "functionSelector": "ef8b30f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "previewDeposit",
            "nameLocation": "24283:14:155",
            "parameters": {
              "id": 80142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80141,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "24306:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80149,
                  "src": "24298:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24298:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24297:17:155"
            },
            "returnParameters": {
              "id": 80145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80144,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80149,
                  "src": "24336:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24336:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24335:9:155"
            },
            "scope": 81605,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80160,
            "nodeType": "FunctionDefinition",
            "src": "24508:193:155",
            "nodes": [],
            "body": {
              "id": 80159,
              "nodeType": "Block",
              "src": "24576:125:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 80157,
                    "name": "_shares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80152,
                    "src": "24687:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80156,
                  "id": 80158,
                  "nodeType": "Return",
                  "src": "24680:14:155"
                }
              ]
            },
            "baseFunctions": [
              48544
            ],
            "documentation": {
              "id": 80150,
              "nodeType": "StructuredDocumentation",
              "src": "24479:24:155",
              "text": "@inheritdoc IERC4626"
            },
            "functionSelector": "b3d7f6b9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "previewMint",
            "nameLocation": "24517:11:155",
            "parameters": {
              "id": 80153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80152,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "24537:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80160,
                  "src": "24529:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24529:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24528:17:155"
            },
            "returnParameters": {
              "id": 80156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80155,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80160,
                  "src": "24567:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24567:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24566:9:155"
            },
            "scope": 81605,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80191,
            "nodeType": "FunctionDefinition",
            "src": "24795:347:155",
            "nodes": [],
            "body": {
              "id": 80190,
              "nodeType": "Block",
              "src": "24867:275:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80169,
                      "mutability": "mutable",
                      "name": "_totalAssets",
                      "nameLocation": "24885:12:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80190,
                      "src": "24877:20:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80168,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24877:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80172,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80170,
                      "name": "totalPreciseAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80522,
                      "src": "24900:18:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 80171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24900:20:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24877:43:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80173,
                      "name": "_totalAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80169,
                      "src": "25004:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 80174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25020:1:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "25004:17:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80179,
                  "nodeType": "IfStatement",
                  "src": "25000:47:155",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 80176,
                        "name": "ZeroTotalAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79589,
                        "src": "25030:15:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 80177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25030:17:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 80178,
                    "nodeType": "RevertStatement",
                    "src": "25023:24:155"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80181,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80163,
                        "src": "25082:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80182,
                        "name": "_totalAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80169,
                        "src": "25091:12:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 80183,
                          "name": "totalDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80496,
                          "src": "25105:9:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 80184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25105:11:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 80185,
                            "name": "Math",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "25118:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Math_$54177_$",
                              "typeString": "type(library Math)"
                            }
                          },
                          "id": 80186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "25123:8:155",
                          "memberName": "Rounding",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53318,
                          "src": "25118:13:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Rounding_$53318_$",
                            "typeString": "type(enum Math.Rounding)"
                          }
                        },
                        "id": 80187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "25132:2:155",
                        "memberName": "Up",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53316,
                        "src": "25118:16:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Rounding_$53318",
                          "typeString": "enum Math.Rounding"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_Rounding_$53318",
                          "typeString": "enum Math.Rounding"
                        }
                      ],
                      "id": 80180,
                      "name": "_convertToShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81172,
                      "src": "25065:16:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$53318_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"
                      }
                    },
                    "id": 80188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25065:70:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80167,
                  "id": 80189,
                  "nodeType": "Return",
                  "src": "25058:77:155"
                }
              ]
            },
            "baseFunctions": [
              48570
            ],
            "documentation": {
              "id": 80161,
              "nodeType": "StructuredDocumentation",
              "src": "24707:83:155",
              "text": "@inheritdoc IERC4626\n @dev Reverts if `totalAssets` in the vault is zero"
            },
            "functionSelector": "0a28a477",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "previewWithdraw",
            "nameLocation": "24804:15:155",
            "parameters": {
              "id": 80164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80163,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "24828:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80191,
                  "src": "24820:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24820:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24819:17:155"
            },
            "returnParameters": {
              "id": 80167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80166,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80191,
                  "src": "24858:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24858:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24857:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80211,
            "nodeType": "FunctionDefinition",
            "src": "25177:174:155",
            "nodes": [],
            "body": {
              "id": 80210,
              "nodeType": "Block",
              "src": "25247:104:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80200,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80194,
                        "src": "25281:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 80201,
                          "name": "totalPreciseAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80522,
                          "src": "25290:18:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 80202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25290:20:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 80203,
                          "name": "totalDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80496,
                          "src": "25312:9:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 80204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25312:11:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 80205,
                            "name": "Math",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54177,
                            "src": "25325:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Math_$54177_$",
                              "typeString": "type(library Math)"
                            }
                          },
                          "id": 80206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "25330:8:155",
                          "memberName": "Rounding",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53318,
                          "src": "25325:13:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Rounding_$53318_$",
                            "typeString": "type(enum Math.Rounding)"
                          }
                        },
                        "id": 80207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "25339:4:155",
                        "memberName": "Down",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53315,
                        "src": "25325:18:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Rounding_$53318",
                          "typeString": "enum Math.Rounding"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_Rounding_$53318",
                          "typeString": "enum Math.Rounding"
                        }
                      ],
                      "id": 80199,
                      "name": "_convertToAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81203,
                      "src": "25264:16:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$53318_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"
                      }
                    },
                    "id": 80208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25264:80:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80198,
                  "id": 80209,
                  "nodeType": "Return",
                  "src": "25257:87:155"
                }
              ]
            },
            "baseFunctions": [
              48598
            ],
            "documentation": {
              "id": 80192,
              "nodeType": "StructuredDocumentation",
              "src": "25148:24:155",
              "text": "@inheritdoc IERC4626"
            },
            "functionSelector": "4cdad506",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "previewRedeem",
            "nameLocation": "25186:13:155",
            "parameters": {
              "id": 80195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80194,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "25208:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80211,
                  "src": "25200:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25200:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25199:17:155"
            },
            "returnParameters": {
              "id": 80198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80197,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80211,
                  "src": "25238:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25238:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25237:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80238,
            "nodeType": "FunctionDefinition",
            "src": "25386:228:155",
            "nodes": [],
            "body": {
              "id": 80237,
              "nodeType": "Block",
              "src": "25466:148:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80222,
                      "mutability": "mutable",
                      "name": "_shares",
                      "nameLocation": "25484:7:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80237,
                      "src": "25476:15:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80221,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25476:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80226,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80224,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80214,
                        "src": "25509:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80223,
                      "name": "previewDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80149,
                      "src": "25494:14:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 80225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25494:23:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25476:41:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 80228,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "25543:3:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "25547:6:155",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "25543:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80230,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80216,
                        "src": "25555:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80231,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80214,
                        "src": "25566:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80232,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80222,
                        "src": "25575:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80227,
                      "name": "_depositAndMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81415,
                      "src": "25527:15:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 80233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25527:56:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80234,
                  "nodeType": "ExpressionStatement",
                  "src": "25527:56:155"
                },
                {
                  "expression": {
                    "id": 80235,
                    "name": "_shares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80222,
                    "src": "25600:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80220,
                  "id": 80236,
                  "nodeType": "Return",
                  "src": "25593:14:155"
                }
              ]
            },
            "baseFunctions": [
              48528
            ],
            "documentation": {
              "id": 80212,
              "nodeType": "StructuredDocumentation",
              "src": "25357:24:155",
              "text": "@inheritdoc IERC4626"
            },
            "functionSelector": "6e553f65",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "25395:7:155",
            "parameters": {
              "id": 80217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80214,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "25411:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80238,
                  "src": "25403:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25403:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80216,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "25428:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80238,
                  "src": "25420:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25420:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25402:36:155"
            },
            "returnParameters": {
              "id": 80220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80219,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80238,
                  "src": "25457:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25457:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25456:9:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80265,
            "nodeType": "FunctionDefinition",
            "src": "25649:222:155",
            "nodes": [],
            "body": {
              "id": 80264,
              "nodeType": "Block",
              "src": "25726:145:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80249,
                      "mutability": "mutable",
                      "name": "_assets",
                      "nameLocation": "25744:7:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80264,
                      "src": "25736:15:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80248,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25736:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80253,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80251,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80241,
                        "src": "25766:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80250,
                      "name": "previewMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80160,
                      "src": "25754:11:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 80252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25754:20:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25736:38:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 80255,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "25800:3:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "25804:6:155",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "25800:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80257,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80243,
                        "src": "25812:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80258,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80249,
                        "src": "25823:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80259,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80241,
                        "src": "25832:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80254,
                      "name": "_depositAndMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81415,
                      "src": "25784:15:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 80260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25784:56:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80261,
                  "nodeType": "ExpressionStatement",
                  "src": "25784:56:155"
                },
                {
                  "expression": {
                    "id": 80262,
                    "name": "_assets",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80249,
                    "src": "25857:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80247,
                  "id": 80263,
                  "nodeType": "Return",
                  "src": "25850:14:155"
                }
              ]
            },
            "baseFunctions": [
              48554
            ],
            "documentation": {
              "id": 80239,
              "nodeType": "StructuredDocumentation",
              "src": "25620:24:155",
              "text": "@inheritdoc IERC4626"
            },
            "functionSelector": "94bf804d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "25658:4:155",
            "parameters": {
              "id": 80244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80241,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "25671:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80265,
                  "src": "25663:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25663:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80243,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "25688:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80265,
                  "src": "25680:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25680:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25662:36:155"
            },
            "returnParameters": {
              "id": 80247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80246,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80265,
                  "src": "25717:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25717:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25716:9:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80295,
            "nodeType": "FunctionDefinition",
            "src": "25906:285:155",
            "nodes": [],
            "body": {
              "id": 80294,
              "nodeType": "Block",
              "src": "26033:158:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80278,
                      "mutability": "mutable",
                      "name": "_shares",
                      "nameLocation": "26051:7:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80294,
                      "src": "26043:15:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80277,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26043:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80282,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80280,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80268,
                        "src": "26077:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80279,
                      "name": "previewWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80191,
                      "src": "26061:15:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 80281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26061:24:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26043:42:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 80284,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "26112:3:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26116:6:155",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26112:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80286,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80270,
                        "src": "26124:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80287,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80272,
                        "src": "26135:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80288,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80278,
                        "src": "26143:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80289,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80268,
                        "src": "26152:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80283,
                      "name": "_burnAndWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81473,
                      "src": "26095:16:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 80290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26095:65:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80291,
                  "nodeType": "ExpressionStatement",
                  "src": "26095:65:155"
                },
                {
                  "expression": {
                    "id": 80292,
                    "name": "_shares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80278,
                    "src": "26177:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80276,
                  "id": 80293,
                  "nodeType": "Return",
                  "src": "26170:14:155"
                }
              ]
            },
            "baseFunctions": [
              48582
            ],
            "documentation": {
              "id": 80266,
              "nodeType": "StructuredDocumentation",
              "src": "25877:24:155",
              "text": "@inheritdoc IERC4626"
            },
            "functionSelector": "b460af94",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "25915:8:155",
            "parameters": {
              "id": 80273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80268,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "25941:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80295,
                  "src": "25933:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25933:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80270,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "25966:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80295,
                  "src": "25958:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25958:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80272,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "25993:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80295,
                  "src": "25985:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25985:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25923:82:155"
            },
            "returnParameters": {
              "id": 80276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80275,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80295,
                  "src": "26024:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26024:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26023:9:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80325,
            "nodeType": "FunctionDefinition",
            "src": "26226:281:155",
            "nodes": [],
            "body": {
              "id": 80324,
              "nodeType": "Block",
              "src": "26351:156:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80308,
                      "mutability": "mutable",
                      "name": "_assets",
                      "nameLocation": "26369:7:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80324,
                      "src": "26361:15:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80307,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26361:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80312,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80310,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80298,
                        "src": "26393:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80309,
                      "name": "previewRedeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80211,
                      "src": "26379:13:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 80311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26379:22:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26361:40:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 80314,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "26428:3:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26432:6:155",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26428:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80316,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80300,
                        "src": "26440:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80317,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80302,
                        "src": "26451:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80318,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80298,
                        "src": "26459:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80319,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80308,
                        "src": "26468:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80313,
                      "name": "_burnAndWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81473,
                      "src": "26411:16:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 80320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26411:65:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80321,
                  "nodeType": "ExpressionStatement",
                  "src": "26411:65:155"
                },
                {
                  "expression": {
                    "id": 80322,
                    "name": "_assets",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80308,
                    "src": "26493:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80306,
                  "id": 80323,
                  "nodeType": "Return",
                  "src": "26486:14:155"
                }
              ]
            },
            "baseFunctions": [
              48610
            ],
            "documentation": {
              "id": 80296,
              "nodeType": "StructuredDocumentation",
              "src": "26197:24:155",
              "text": "@inheritdoc IERC4626"
            },
            "functionSelector": "ba087652",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "26235:6:155",
            "parameters": {
              "id": 80303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80298,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "26259:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80325,
                  "src": "26251:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26251:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80300,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "26284:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80325,
                  "src": "26276:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26276:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80302,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "26311:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80325,
                  "src": "26303:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26303:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26241:82:155"
            },
            "returnParameters": {
              "id": 80306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80305,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80325,
                  "src": "26342:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26342:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26341:9:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80402,
            "nodeType": "FunctionDefinition",
            "src": "27492:877:155",
            "nodes": [],
            "body": {
              "id": 80401,
              "nodeType": "Block",
              "src": "27686:683:155",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 80346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80343,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80330,
                      "src": "27700:6:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 80344,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "27710:3:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 80345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "27714:6:155",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "27710:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "27700:20:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80354,
                  "nodeType": "IfStatement",
                  "src": "27696:98:155",
                  "trueBody": {
                    "id": 80353,
                    "nodeType": "Block",
                    "src": "27722:72:155",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 80348,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "27764:3:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 80349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "27768:6:155",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "27764:10:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 80350,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80330,
                              "src": "27776:6:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 80347,
                            "name": "PermitCallerNotOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79616,
                            "src": "27743:20:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) pure"
                            }
                          },
                          "id": 80351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27743:40:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80352,
                        "nodeType": "RevertStatement",
                        "src": "27736:47:155"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 80357,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80330,
                          "src": "28077:6:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 80360,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "28093:4:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                "typeString": "contract PrizeVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                "typeString": "contract PrizeVault"
                              }
                            ],
                            "id": 80359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "28085:7:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 80358,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "28085:7:155",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 80361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28085:13:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 80355,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79535,
                          "src": "28060:6:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$49389",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 80356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "28067:9:155",
                        "memberName": "allowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49366,
                        "src": "28060:16:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 80362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28060:39:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 80363,
                      "name": "_assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80328,
                      "src": "28103:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28060:50:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80385,
                  "nodeType": "IfStatement",
                  "src": "28056:172:155",
                  "trueBody": {
                    "id": 80384,
                    "nodeType": "Block",
                    "src": "28112:116:155",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 80372,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80330,
                              "src": "28163:6:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 80375,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "28179:4:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                    "typeString": "contract PrizeVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                    "typeString": "contract PrizeVault"
                                  }
                                ],
                                "id": 80374,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "28171:7:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 80373,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "28171:7:155",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 80376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "28171:13:155",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 80377,
                              "name": "_assets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80328,
                              "src": "28186:7:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 80378,
                              "name": "_deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80332,
                              "src": "28195:9:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 80379,
                              "name": "_v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80334,
                              "src": "28206:2:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 80380,
                              "name": "_r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80336,
                              "src": "28210:2:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 80381,
                              "name": "_s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80338,
                              "src": "28214:2:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 80368,
                                      "name": "_asset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79535,
                                      "src": "28147:6:155",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$49389",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$49389",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 80367,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "28139:7:155",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 80366,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "28139:7:155",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 80369,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "28139:15:155",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 80365,
                                "name": "IERC20Permit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50249,
                                "src": "28126:12:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$50249_$",
                                  "typeString": "type(contract IERC20Permit)"
                                }
                              },
                              "id": 80370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "28126:29:155",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Permit_$50249",
                                "typeString": "contract IERC20Permit"
                              }
                            },
                            "id": 80371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "28156:6:155",
                            "memberName": "permit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50234,
                            "src": "28126:36:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                            }
                          },
                          "id": 80382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28126:91:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80383,
                        "nodeType": "ExpressionStatement",
                        "src": "28126:91:155"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    80387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80387,
                      "mutability": "mutable",
                      "name": "_shares",
                      "nameLocation": "28246:7:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80401,
                      "src": "28238:15:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80386,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28238:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80391,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80389,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80328,
                        "src": "28271:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80388,
                      "name": "previewDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80149,
                      "src": "28256:14:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 80390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28256:23:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28238:41:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80393,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80330,
                        "src": "28305:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80394,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80330,
                        "src": "28313:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80395,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80328,
                        "src": "28321:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80396,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80387,
                        "src": "28330:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80392,
                      "name": "_depositAndMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81415,
                      "src": "28289:15:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 80397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28289:49:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80398,
                  "nodeType": "ExpressionStatement",
                  "src": "28289:49:155"
                },
                {
                  "expression": {
                    "id": 80399,
                    "name": "_shares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80387,
                    "src": "28355:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80342,
                  "id": 80400,
                  "nodeType": "Return",
                  "src": "28348:14:155"
                }
              ]
            },
            "documentation": {
              "id": 80326,
              "nodeType": "StructuredDocumentation",
              "src": "26716:771:155",
              "text": "@notice Approve underlying asset with permit, deposit into the Vault and mint Vault shares to `_owner`.\n @dev Can't be used to deposit on behalf of another user since `permit` does not accept a receiver parameter,\n meaning that anyone could reuse the signature and pass an arbitrary receiver to this function.\n @param _assets Amount of assets to approve and deposit\n @param _owner Address of the owner depositing `_assets` and signing the permit\n @param _deadline Timestamp after which the approval is no longer valid\n @param _v V part of the secp256k1 signature\n @param _r R part of the secp256k1 signature\n @param _s S part of the secp256k1 signature\n @return Amount of Vault shares minted to `_owner`."
            },
            "functionSelector": "50921b23",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositWithPermit",
            "nameLocation": "27501:17:155",
            "parameters": {
              "id": 80339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80328,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "27536:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80402,
                  "src": "27528:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27528:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80330,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "27561:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80402,
                  "src": "27553:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27553:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80332,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "27585:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80402,
                  "src": "27577:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27577:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80334,
                  "mutability": "mutable",
                  "name": "_v",
                  "nameLocation": "27610:2:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80402,
                  "src": "27604:8:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 80333,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "27604:5:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80336,
                  "mutability": "mutable",
                  "name": "_r",
                  "nameLocation": "27630:2:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80402,
                  "src": "27622:10:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 80335,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "27622:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80338,
                  "mutability": "mutable",
                  "name": "_s",
                  "nameLocation": "27650:2:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80402,
                  "src": "27642:10:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 80337,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "27642:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27518:140:155"
            },
            "returnParameters": {
              "id": 80342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80341,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80402,
                  "src": "27677:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27677:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27676:9:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80443,
            "nodeType": "FunctionDefinition",
            "src": "28981:394:155",
            "nodes": [],
            "body": {
              "id": 80442,
              "nodeType": "Block",
              "src": "29136:239:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80417,
                      "mutability": "mutable",
                      "name": "_shares",
                      "nameLocation": "29154:7:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80442,
                      "src": "29146:15:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80416,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "29146:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80421,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80419,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80405,
                        "src": "29180:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80418,
                      "name": "previewWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80191,
                      "src": "29164:15:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 80420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29164:24:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29146:42:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80422,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80417,
                      "src": "29202:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 80423,
                      "name": "_maxShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80411,
                      "src": "29212:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "29202:20:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80430,
                  "nodeType": "IfStatement",
                  "src": "29198:71:155",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 80426,
                          "name": "_shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80417,
                          "src": "29249:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 80427,
                          "name": "_maxShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80411,
                          "src": "29258:10:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 80425,
                        "name": "MaxSharesExceeded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79668,
                        "src": "29231:17:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) pure"
                        }
                      },
                      "id": 80428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "29231:38:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 80429,
                    "nodeType": "RevertStatement",
                    "src": "29224:45:155"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 80432,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "29296:3:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "29300:6:155",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "29296:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80434,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80407,
                        "src": "29308:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80435,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80409,
                        "src": "29319:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80436,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80417,
                        "src": "29327:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80437,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80405,
                        "src": "29336:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80431,
                      "name": "_burnAndWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81473,
                      "src": "29279:16:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 80438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29279:65:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80439,
                  "nodeType": "ExpressionStatement",
                  "src": "29279:65:155"
                },
                {
                  "expression": {
                    "id": 80440,
                    "name": "_shares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80417,
                    "src": "29361:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80415,
                  "id": 80441,
                  "nodeType": "Return",
                  "src": "29354:14:155"
                }
              ]
            },
            "documentation": {
              "id": 80403,
              "nodeType": "StructuredDocumentation",
              "src": "28581:395:155",
              "text": "@notice Alternate flow for `IERC4626.withdraw` that reverts if the max share limit is exceeded.\n @param _assets See `IERC4626.withdraw`\n @param _receiver See `IERC4626.withdraw`\n @param _owner See `IERC4626.withdraw`\n @param _maxShares The max shares that can be burned for the withdrawal to succeed.\n @return The amount of shares burned for the withdrawal"
            },
            "functionSelector": "a318c1a4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "28990:8:155",
            "parameters": {
              "id": 80412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80405,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "29016:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80443,
                  "src": "29008:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29008:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80407,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "29041:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80443,
                  "src": "29033:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29033:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80409,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "29068:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80443,
                  "src": "29060:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29060:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80411,
                  "mutability": "mutable",
                  "name": "_maxShares",
                  "nameLocation": "29092:10:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80443,
                  "src": "29084:18:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29084:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28998:110:155"
            },
            "returnParameters": {
              "id": 80415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80414,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80443,
                  "src": "29127:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29127:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29126:9:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80484,
            "nodeType": "FunctionDefinition",
            "src": "29819:392:155",
            "nodes": [],
            "body": {
              "id": 80483,
              "nodeType": "Block",
              "src": "29972:239:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80458,
                      "mutability": "mutable",
                      "name": "_assets",
                      "nameLocation": "29990:7:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80483,
                      "src": "29982:15:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80457,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "29982:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80462,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80460,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80446,
                        "src": "30014:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80459,
                      "name": "previewRedeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80211,
                      "src": "30000:13:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 80461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30000:22:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29982:40:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80463,
                      "name": "_assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80458,
                      "src": "30036:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 80464,
                      "name": "_minAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80452,
                      "src": "30046:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30036:20:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80471,
                  "nodeType": "IfStatement",
                  "src": "30032:73:155",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 80467,
                          "name": "_assets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80458,
                          "src": "30085:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 80468,
                          "name": "_minAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80452,
                          "src": "30094:10:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 80466,
                        "name": "MinAssetsNotReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79675,
                        "src": "30065:19:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) pure"
                        }
                      },
                      "id": 80469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "30065:40:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 80470,
                    "nodeType": "RevertStatement",
                    "src": "30058:47:155"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 80473,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "30132:3:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "30136:6:155",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "30132:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80475,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80448,
                        "src": "30144:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80476,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80450,
                        "src": "30155:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80477,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80446,
                        "src": "30163:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80478,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80458,
                        "src": "30172:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80472,
                      "name": "_burnAndWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81473,
                      "src": "30115:16:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 80479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30115:65:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80480,
                  "nodeType": "ExpressionStatement",
                  "src": "30115:65:155"
                },
                {
                  "expression": {
                    "id": 80481,
                    "name": "_assets",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80458,
                    "src": "30197:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80456,
                  "id": 80482,
                  "nodeType": "Return",
                  "src": "30190:14:155"
                }
              ]
            },
            "documentation": {
              "id": 80444,
              "nodeType": "StructuredDocumentation",
              "src": "29381:433:155",
              "text": "@notice Alternate flow for `IERC4626.redeem` that reverts if the assets returned does not reach the\n minimum asset threshold.\n @param _shares See `IERC4626.redeem`\n @param _receiver See `IERC4626.redeem`\n @param _owner See `IERC4626.redeem`\n @param _minAssets The minimum assets that can be returned for the redemption to succeed\n @return The amount of assets returned for the redemption"
            },
            "functionSelector": "9f40a7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "29828:6:155",
            "parameters": {
              "id": 80453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80446,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "29852:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80484,
                  "src": "29844:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29844:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80448,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "29877:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80484,
                  "src": "29869:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29869:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80450,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "29904:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80484,
                  "src": "29896:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29896:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80452,
                  "mutability": "mutable",
                  "name": "_minAssets",
                  "nameLocation": "29928:10:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80484,
                  "src": "29920:18:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29920:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29834:110:155"
            },
            "returnParameters": {
              "id": 80456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80455,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80484,
                  "src": "29963:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29963:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29962:9:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80496,
            "nodeType": "FunctionDefinition",
            "src": "30572:106:155",
            "nodes": [],
            "body": {
              "id": 80495,
              "nodeType": "Block",
              "src": "30623:55:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 80490,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          81861
                        ],
                        "referencedDeclaration": 81861,
                        "src": "30640:11:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 80491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "30640:13:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 80492,
                      "name": "yieldFeeBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79528,
                      "src": "30656:15:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30640:31:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80489,
                  "id": 80494,
                  "nodeType": "Return",
                  "src": "30633:38:155"
                }
              ]
            },
            "documentation": {
              "id": 80485,
              "nodeType": "StructuredDocumentation",
              "src": "30417:150:155",
              "text": "@notice Returns the total assets that are owed to share holders and any other internal balances.\n @return The total asset debt of the vault"
            },
            "functionSelector": "fc7b9c18",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDebt",
            "nameLocation": "30581:9:155",
            "parameters": {
              "id": 80486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30590:2:155"
            },
            "returnParameters": {
              "id": 80489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80488,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80496,
                  "src": "30614:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30614:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30613:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80522,
            "nodeType": "FunctionDefinition",
            "src": "31257:179:155",
            "nodes": [],
            "body": {
              "id": 80521,
              "nodeType": "Block",
              "src": "31317:119:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 80508,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "31388:4:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                    "typeString": "contract PrizeVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                    "typeString": "contract PrizeVault"
                                  }
                                ],
                                "id": 80507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "31380:7:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 80506,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "31380:7:155",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 80509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "31380:13:155",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 80504,
                              "name": "yieldVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79519,
                              "src": "31359:10:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC4626_$48611",
                                "typeString": "contract IERC4626"
                              }
                            },
                            "id": 80505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "31370:9:155",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49346,
                            "src": "31359:20:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 80510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31359:35:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 80502,
                          "name": "yieldVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79519,
                          "src": "31334:10:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC4626_$48611",
                            "typeString": "contract IERC4626"
                          }
                        },
                        "id": 80503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "31345:13:155",
                        "memberName": "previewRedeem",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48598,
                        "src": "31334:24:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256)"
                        }
                      },
                      "id": 80511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "31334:61:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 80516,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "31423:4:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                "typeString": "contract PrizeVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                "typeString": "contract PrizeVault"
                              }
                            ],
                            "id": 80515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "31415:7:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 80514,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "31415:7:155",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 80517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31415:13:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 80512,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79535,
                          "src": "31398:6:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$49389",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 80513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "31405:9:155",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49346,
                        "src": "31398:16:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 80518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "31398:31:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "31334:95:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80501,
                  "id": 80520,
                  "nodeType": "Return",
                  "src": "31327:102:155"
                }
              ]
            },
            "documentation": {
              "id": 80497,
              "nodeType": "StructuredDocumentation",
              "src": "30684:568:155",
              "text": "@notice Calculates the amount of assets the vault controls based on current onchain conditions.\n @dev The latent asset balance is included in the total asset count to account for the \"dust collection\n strategy\".\n @dev This function should be favored over `totalAssets` for state-changing functions since it uses\n `previewRedeem` over `convertToAssets`.\n @dev May revert for reasons that would cause `yieldVault.previewRedeem` to revert.\n @return The total assets controlled by the vault based on current onchain conditions"
            },
            "functionSelector": "4244aa9b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalPreciseAssets",
            "nameLocation": "31266:18:155",
            "parameters": {
              "id": 80498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31284:2:155"
            },
            "returnParameters": {
              "id": 80501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80500,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80522,
                  "src": "31308:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31308:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31307:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80536,
            "nodeType": "FunctionDefinition",
            "src": "31777:138:155",
            "nodes": [],
            "body": {
              "id": 80535,
              "nodeType": "Block",
              "src": "31838:77:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 80529,
                          "name": "totalPreciseAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80522,
                          "src": "31874:18:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 80530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31874:20:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 80531,
                          "name": "totalDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80496,
                          "src": "31896:9:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 80532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31896:11:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80528,
                      "name": "_totalYieldBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81267,
                      "src": "31855:18:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 80533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31855:53:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80527,
                  "id": 80534,
                  "nodeType": "Return",
                  "src": "31848:60:155"
                }
              ]
            },
            "documentation": {
              "id": 80523,
              "nodeType": "StructuredDocumentation",
              "src": "31636:136:155",
              "text": "@notice Total yield balance of the vault\n @dev Equal to total assets minus total debt\n @return The total yield balance"
            },
            "functionSelector": "d4122abf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalYieldBalance",
            "nameLocation": "31786:17:155",
            "parameters": {
              "id": 80524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31803:2:155"
            },
            "returnParameters": {
              "id": 80527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80536,
                  "src": "31829:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31829:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31828:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80550,
            "nodeType": "FunctionDefinition",
            "src": "32102:146:155",
            "nodes": [],
            "body": {
              "id": 80549,
              "nodeType": "Block",
              "src": "32167:81:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 80543,
                          "name": "totalPreciseAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80522,
                          "src": "32207:18:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 80544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32207:20:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 80545,
                          "name": "totalDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80496,
                          "src": "32229:9:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 80546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32229:11:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80542,
                      "name": "_availableYieldBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81302,
                      "src": "32184:22:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 80547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32184:57:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80541,
                  "id": 80548,
                  "nodeType": "Return",
                  "src": "32177:64:155"
                }
              ]
            },
            "documentation": {
              "id": 80537,
              "nodeType": "StructuredDocumentation",
              "src": "31921:176:155",
              "text": "@notice Total available yield on the vault\n @dev Equal to total assets minus total allocation (total debt + yield buffer)\n @return The available yield balance"
            },
            "functionSelector": "0d1e5255",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "availableYieldBalance",
            "nameLocation": "32111:21:155",
            "parameters": {
              "id": 80538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32132:2:155"
            },
            "returnParameters": {
              "id": 80541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80540,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80550,
                  "src": "32158:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32158:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32157:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80580,
            "nodeType": "FunctionDefinition",
            "src": "32382:354:155",
            "nodes": [],
            "body": {
              "id": 80579,
              "nodeType": "Block",
              "src": "32444:292:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80557,
                      "mutability": "mutable",
                      "name": "totalYieldBalance_",
                      "nameLocation": "32462:18:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80579,
                      "src": "32454:26:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80556,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "32454:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80564,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 80559,
                          "name": "totalPreciseAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80522,
                          "src": "32502:18:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 80560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32502:20:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 80561,
                          "name": "totalDebt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80496,
                          "src": "32524:9:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 80562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32524:11:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80558,
                      "name": "_totalYieldBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81267,
                      "src": "32483:18:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 80563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32483:53:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32454:82:155"
                },
                {
                  "assignments": [
                    80566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80566,
                      "mutability": "mutable",
                      "name": "_yieldBuffer",
                      "nameLocation": "32554:12:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80579,
                      "src": "32546:20:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80565,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "32546:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80568,
                  "initialValue": {
                    "id": 80567,
                    "name": "yieldBuffer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79515,
                    "src": "32569:11:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32546:34:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80569,
                      "name": "totalYieldBalance_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80557,
                      "src": "32594:18:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 80570,
                      "name": "_yieldBuffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80566,
                      "src": "32616:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "32594:34:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 80577,
                    "nodeType": "Block",
                    "src": "32680:50:155",
                    "statements": [
                      {
                        "expression": {
                          "id": 80575,
                          "name": "totalYieldBalance_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80557,
                          "src": "32701:18:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 80555,
                        "id": 80576,
                        "nodeType": "Return",
                        "src": "32694:25:155"
                      }
                    ]
                  },
                  "id": 80578,
                  "nodeType": "IfStatement",
                  "src": "32590:140:155",
                  "trueBody": {
                    "id": 80574,
                    "nodeType": "Block",
                    "src": "32630:44:155",
                    "statements": [
                      {
                        "expression": {
                          "id": 80572,
                          "name": "_yieldBuffer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80566,
                          "src": "32651:12:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 80555,
                        "id": 80573,
                        "nodeType": "Return",
                        "src": "32644:19:155"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 80551,
              "nodeType": "StructuredDocumentation",
              "src": "32254:123:155",
              "text": "@notice Current amount of assets available in the yield buffer\n @return The available assets in the yield buffer"
            },
            "functionSelector": "237fd108",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentYieldBuffer",
            "nameLocation": "32391:18:155",
            "parameters": {
              "id": 80552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32409:2:155"
            },
            "returnParameters": {
              "id": 80555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80554,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80580,
                  "src": "32435:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32435:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32434:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80621,
            "nodeType": "FunctionDefinition",
            "src": "33032:367:155",
            "nodes": [],
            "body": {
              "id": 80620,
              "nodeType": "Block",
              "src": "33109:290:155",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80588,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80583,
                      "src": "33123:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 80589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "33134:1:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "33123:12:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80594,
                  "nodeType": "IfStatement",
                  "src": "33119:41:155",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 80591,
                        "name": "MintZeroShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79586,
                        "src": "33144:14:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 80592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "33144:16:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 80593,
                    "nodeType": "RevertStatement",
                    "src": "33137:23:155"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80595,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80583,
                      "src": "33174:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 80596,
                      "name": "yieldFeeBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79528,
                      "src": "33184:15:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "33174:25:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80603,
                  "nodeType": "IfStatement",
                  "src": "33170:92:155",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 80599,
                          "name": "_shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80583,
                          "src": "33237:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 80600,
                          "name": "yieldFeeBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79528,
                          "src": "33246:15:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 80598,
                        "name": "SharesExceedsYieldFeeBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79630,
                        "src": "33208:28:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) pure"
                        }
                      },
                      "id": 80601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "33208:54:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 80602,
                    "nodeType": "RevertStatement",
                    "src": "33201:61:155"
                  }
                },
                {
                  "expression": {
                    "id": 80606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80604,
                      "name": "yieldFeeBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79528,
                      "src": "33273:15:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 80605,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80583,
                      "src": "33292:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "33273:26:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 80607,
                  "nodeType": "ExpressionStatement",
                  "src": "33273:26:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 80609,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "33316:3:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "33320:6:155",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "33316:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80611,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80583,
                        "src": "33328:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80608,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        81890
                      ],
                      "referencedDeclaration": 81890,
                      "src": "33310:5:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 80612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33310:26:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80613,
                  "nodeType": "ExpressionStatement",
                  "src": "33310:26:155"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 80615,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "33372:3:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "33376:6:155",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "33372:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80617,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80583,
                        "src": "33384:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80614,
                      "name": "ClaimYieldFeeShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79568,
                      "src": "33352:19:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 80618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33352:40:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80619,
                  "nodeType": "EmitStatement",
                  "src": "33347:45:155"
                }
              ]
            },
            "documentation": {
              "id": 80581,
              "nodeType": "StructuredDocumentation",
              "src": "32742:285:155",
              "text": "@notice Transfers yield fee shares to the yield fee recipient\n @param _shares The shares to mint to the yield fee recipient\n @dev Emits a `ClaimYieldFeeShares` event\n @dev Will revert if the caller is not the yield fee recipient or if zero shares are withdrawn"
            },
            "functionSelector": "353d5a18",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 80586,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80585,
                  "name": "onlyYieldFeeRecipient",
                  "nameLocations": [
                    "33087:21:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79714,
                  "src": "33087:21:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "33087:21:155"
              }
            ],
            "name": "claimYieldFeeShares",
            "nameLocation": "33041:19:155",
            "parameters": {
              "id": 80584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80583,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "33069:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80621,
                  "src": "33061:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33061:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33060:17:155"
            },
            "returnParameters": {
              "id": 80587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "33109:0:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80729,
            "nodeType": "FunctionDefinition",
            "src": "33804:1751:155",
            "nodes": [],
            "body": {
              "id": 80728,
              "nodeType": "Block",
              "src": "33886:1669:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80630
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80630,
                      "mutability": "mutable",
                      "name": "_totalDebt",
                      "nameLocation": "33904:10:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80728,
                      "src": "33896:18:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80629,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "33896:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80633,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80631,
                      "name": "totalDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80496,
                      "src": "33917:9:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 80632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33917:11:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33896:32:155"
                },
                {
                  "assignments": [
                    80635
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80635,
                      "mutability": "mutable",
                      "name": "_yieldFeePercentage",
                      "nameLocation": "33946:19:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80728,
                      "src": "33938:27:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80634,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "33938:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80637,
                  "initialValue": {
                    "id": 80636,
                    "name": "yieldFeePercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79522,
                    "src": "33968:18:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33938:48:155"
                },
                {
                  "assignments": [
                    80639
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80639,
                      "mutability": "mutable",
                      "name": "_maxAmountOut",
                      "nameLocation": "34004:13:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80728,
                      "src": "33996:21:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80638,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "33996:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80640,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33996:21:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 80646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80641,
                      "name": "_tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80624,
                      "src": "34031:9:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 80644,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "34052:4:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PrizeVault_$81605",
                            "typeString": "contract PrizeVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PrizeVault_$81605",
                            "typeString": "contract PrizeVault"
                          }
                        ],
                        "id": 80643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "34044:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 80642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "34044:7:155",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 80645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "34044:13:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "34031:26:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 80659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 80654,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80624,
                        "src": "34204:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 80657,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79535,
                            "src": "34225:6:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$49389",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$49389",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 80656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "34217:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80655,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "34217:7:155",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "34217:15:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "34204:28:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 80700,
                      "nodeType": "Block",
                      "src": "34907:33:155",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "30",
                            "id": 80698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "34928:1:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 80628,
                          "id": 80699,
                          "nodeType": "Return",
                          "src": "34921:8:155"
                        }
                      ]
                    },
                    "id": 80701,
                    "nodeType": "IfStatement",
                    "src": "34200:740:155",
                    "trueBody": {
                      "id": 80697,
                      "nodeType": "Block",
                      "src": "34234:667:155",
                      "statements": [
                        {
                          "expression": {
                            "id": 80671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 80660,
                              "name": "_maxAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80639,
                              "src": "34358:13:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 80670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 80661,
                                  "name": "_maxYieldVaultWithdraw",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 81502,
                                  "src": "34374:22:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 80662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "34374:24:155",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 80667,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "34426:4:155",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                          "typeString": "contract PrizeVault"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                          "typeString": "contract PrizeVault"
                                        }
                                      ],
                                      "id": 80666,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "34418:7:155",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 80665,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "34418:7:155",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 80668,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "34418:13:155",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 80663,
                                    "name": "_asset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79535,
                                    "src": "34401:6:155",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$49389",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 80664,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "34408:9:155",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 49346,
                                  "src": "34401:16:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 80669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "34401:31:155",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "34374:58:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "34358:74:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 80672,
                          "nodeType": "ExpressionStatement",
                          "src": "34358:74:155"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 80675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 80673,
                              "name": "_yieldFeePercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80635,
                              "src": "34573:19:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 80674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "34596:1:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "34573:24:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 80696,
                          "nodeType": "IfStatement",
                          "src": "34569:322:155",
                          "trueBody": {
                            "id": 80695,
                            "nodeType": "Block",
                            "src": "34599:292:155",
                            "statements": [
                              {
                                "assignments": [
                                  80677
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 80677,
                                    "mutability": "mutable",
                                    "name": "_maxAmountBasedOnFeeMintLimit",
                                    "nameLocation": "34625:29:155",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 80695,
                                    "src": "34617:37:155",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 80676,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "34617:7:155",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 80685,
                                "initialValue": {
                                  "arguments": [
                                    {
                                      "id": 80682,
                                      "name": "FEE_PRECISION",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79508,
                                      "src": "34687:13:155",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    {
                                      "id": 80683,
                                      "name": "_yieldFeePercentage",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 80635,
                                      "src": "34702:19:155",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 80679,
                                          "name": "_totalDebt",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 80630,
                                          "src": "34668:10:155",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 80678,
                                        "name": "_mintLimit",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 81216,
                                        "src": "34657:10:155",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 80680,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "34657:22:155",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 80681,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "34680:6:155",
                                    "memberName": "mulDiv",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 53525,
                                    "src": "34657:29:155",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 80684,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "34657:65:155",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "34617:105:155"
                              },
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 80688,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 80686,
                                    "name": "_maxAmountBasedOnFeeMintLimit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80677,
                                    "src": "34744:29:155",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "id": 80687,
                                    "name": "_maxAmountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80639,
                                    "src": "34776:13:155",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "34744:45:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 80694,
                                "nodeType": "IfStatement",
                                "src": "34740:137:155",
                                "trueBody": {
                                  "id": 80693,
                                  "nodeType": "Block",
                                  "src": "34791:86:155",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 80691,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 80689,
                                          "name": "_maxAmountOut",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 80639,
                                          "src": "34813:13:155",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "id": 80690,
                                          "name": "_maxAmountBasedOnFeeMintLimit",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 80677,
                                          "src": "34829:29:155",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "34813:45:155",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 80692,
                                      "nodeType": "ExpressionStatement",
                                      "src": "34813:45:155"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "id": 80702,
                  "nodeType": "IfStatement",
                  "src": "34027:913:155",
                  "trueBody": {
                    "id": 80653,
                    "nodeType": "Block",
                    "src": "34059:135:155",
                    "statements": [
                      {
                        "expression": {
                          "id": 80651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 80647,
                            "name": "_maxAmountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80639,
                            "src": "34145:13:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 80649,
                                "name": "_totalDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80630,
                                "src": "34172:10:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 80648,
                              "name": "_mintLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81216,
                              "src": "34161:10:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint256)"
                              }
                            },
                            "id": 80650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "34161:22:155",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "34145:38:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 80652,
                        "nodeType": "ExpressionStatement",
                        "src": "34145:38:155"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    80704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80704,
                      "mutability": "mutable",
                      "name": "_availableYield",
                      "nameLocation": "35078:15:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80728,
                      "src": "35070:23:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80703,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "35070:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80710,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 80706,
                          "name": "totalPreciseAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80522,
                          "src": "35119:18:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 80707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "35119:20:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80708,
                        "name": "_totalDebt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80630,
                        "src": "35141:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80705,
                      "name": "_availableYieldBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81302,
                      "src": "35096:22:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 80709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35096:56:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "35070:82:155"
                },
                {
                  "assignments": [
                    80712
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80712,
                      "mutability": "mutable",
                      "name": "_liquidYield",
                      "nameLocation": "35170:12:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80728,
                      "src": "35162:20:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80711,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "35162:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80719,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 80715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 80713,
                        "name": "_availableYield",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80704,
                        "src": "35185:15:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 80714,
                        "name": "_maxAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80639,
                        "src": "35204:13:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "35185:32:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 80717,
                      "name": "_availableYield",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80704,
                      "src": "35236:15:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 80718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "35185:66:155",
                    "trueExpression": {
                      "id": 80716,
                      "name": "_maxAmountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80639,
                      "src": "35220:13:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "35162:89:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80722,
                          "name": "FEE_PRECISION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79508,
                          "src": "35497:13:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 80723,
                          "name": "_yieldFeePercentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80635,
                          "src": "35513:19:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "35497:35:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80725,
                        "name": "FEE_PRECISION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79508,
                        "src": "35534:13:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 80720,
                        "name": "_liquidYield",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80712,
                        "src": "35477:12:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 80721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "35490:6:155",
                      "memberName": "mulDiv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53525,
                      "src": "35477:19:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 80726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35477:71:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80628,
                  "id": 80727,
                  "nodeType": "Return",
                  "src": "35470:78:155"
                }
              ]
            },
            "baseFunctions": [
              56026
            ],
            "documentation": {
              "id": 80622,
              "nodeType": "StructuredDocumentation",
              "src": "33611:188:155",
              "text": "@inheritdoc ILiquidationSource\n @dev Returns the liquid amount of `_tokenOut` minus any yield fees.\n @dev Supports the liquidation of either assets or prize vault shares."
            },
            "functionSelector": "b0fcf626",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidatableBalanceOf",
            "nameLocation": "33813:21:155",
            "parameters": {
              "id": 80625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80624,
                  "mutability": "mutable",
                  "name": "_tokenOut",
                  "nameLocation": "33843:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80729,
                  "src": "33835:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "33835:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33834:19:155"
            },
            "returnParameters": {
              "id": 80628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80627,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80729,
                  "src": "33877:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33877:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33876:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80871,
            "nodeType": "FunctionDefinition",
            "src": "35724:1895:155",
            "nodes": [],
            "body": {
              "id": 80870,
              "nodeType": "Block",
              "src": "35929:1690:155",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80745,
                      "name": "_amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80738,
                      "src": "35943:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 80746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "35957:1:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "35943:15:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80751,
                  "nodeType": "IfStatement",
                  "src": "35939:54:155",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 80748,
                        "name": "LiquidationAmountOutZero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79595,
                        "src": "35967:24:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 80749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "35967:26:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 80750,
                    "nodeType": "RevertStatement",
                    "src": "35960:33:155"
                  }
                },
                {
                  "assignments": [
                    80753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80753,
                      "mutability": "mutable",
                      "name": "_totalDebtBefore",
                      "nameLocation": "36012:16:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80870,
                      "src": "36004:24:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80752,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "36004:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80756,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80754,
                      "name": "totalDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80496,
                      "src": "36031:9:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 80755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36031:11:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36004:38:155"
                },
                {
                  "assignments": [
                    80758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80758,
                      "mutability": "mutable",
                      "name": "_availableYield",
                      "nameLocation": "36060:15:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80870,
                      "src": "36052:23:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80757,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "36052:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80764,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 80760,
                          "name": "totalPreciseAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80522,
                          "src": "36101:18:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 80761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36101:20:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80762,
                        "name": "_totalDebtBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80753,
                        "src": "36123:16:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80759,
                      "name": "_availableYieldBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81302,
                      "src": "36078:22:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 80763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36078:62:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36052:88:155"
                },
                {
                  "assignments": [
                    80766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80766,
                      "mutability": "mutable",
                      "name": "_yieldFeePercentage",
                      "nameLocation": "36157:19:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80870,
                      "src": "36150:26:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 80765,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "36150:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80768,
                  "initialValue": {
                    "id": 80767,
                    "name": "yieldFeePercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79522,
                    "src": "36179:18:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36150:47:155"
                },
                {
                  "assignments": [
                    80770
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80770,
                      "mutability": "mutable",
                      "name": "_yieldFee",
                      "nameLocation": "36302:9:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80870,
                      "src": "36294:17:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80769,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "36294:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80771,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36294:17:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 80774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80772,
                      "name": "_yieldFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80766,
                      "src": "36325:19:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 80773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "36348:1:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "36325:24:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80790,
                  "nodeType": "IfStatement",
                  "src": "36321:342:155",
                  "trueBody": {
                    "id": 80789,
                    "nodeType": "Block",
                    "src": "36351:312:155",
                    "statements": [
                      {
                        "expression": {
                          "id": 80787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 80775,
                            "name": "_yieldFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80770,
                            "src": "36559:9:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 80786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 80784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 80778,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 80776,
                                      "name": "_amountOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 80738,
                                      "src": "36572:10:155",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 80777,
                                      "name": "FEE_PRECISION",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79508,
                                      "src": "36585:13:155",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "src": "36572:26:155",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 80779,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "36571:28:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    "id": 80782,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 80780,
                                      "name": "FEE_PRECISION",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79508,
                                      "src": "36603:13:155",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 80781,
                                      "name": "_yieldFeePercentage",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 80766,
                                      "src": "36619:19:155",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "src": "36603:35:155",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "id": 80783,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "36602:37:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "36571:68:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 80785,
                              "name": "_amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80738,
                              "src": "36642:10:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "36571:81:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "36559:93:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 80788,
                        "nodeType": "ExpressionStatement",
                        "src": "36559:93:155"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 80793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 80791,
                        "name": "_amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80738,
                        "src": "36765:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 80792,
                        "name": "_yieldFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80770,
                        "src": "36778:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "36765:22:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 80794,
                      "name": "_availableYield",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80758,
                      "src": "36790:15:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "36765:40:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80804,
                  "nodeType": "IfStatement",
                  "src": "36761:146:155",
                  "trueBody": {
                    "id": 80803,
                    "nodeType": "Block",
                    "src": "36807:100:155",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 80799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 80797,
                                "name": "_amountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80738,
                                "src": "36856:10:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 80798,
                                "name": "_yieldFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80770,
                                "src": "36869:9:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "36856:22:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 80800,
                              "name": "_availableYield",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80758,
                              "src": "36880:15:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 80796,
                            "name": "LiquidationExceedsAvailable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79649,
                            "src": "36828:27:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 80801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36828:68:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80802,
                        "nodeType": "RevertStatement",
                        "src": "36821:75:155"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80805,
                      "name": "_yieldFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80770,
                      "src": "36960:9:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 80806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "36972:1:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "36960:13:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80815,
                  "nodeType": "IfStatement",
                  "src": "36956:89:155",
                  "trueBody": {
                    "id": 80814,
                    "nodeType": "Block",
                    "src": "36975:70:155",
                    "statements": [
                      {
                        "expression": {
                          "id": 80812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 80808,
                            "name": "yieldFeeBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79528,
                            "src": "36989:15:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 80811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 80809,
                              "name": "yieldFeeBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79528,
                              "src": "37007:15:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 80810,
                              "name": "_yieldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80770,
                              "src": "37025:9:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "37007:27:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "36989:45:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 80813,
                        "nodeType": "ExpressionStatement",
                        "src": "36989:45:155"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 80821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80816,
                      "name": "_tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80736,
                      "src": "37113:9:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 80819,
                          "name": "_asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79535,
                          "src": "37134:6:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$49389",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$49389",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 80818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "37126:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 80817,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "37126:7:155",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 80820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "37126:15:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "37113:28:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 80838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 80833,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80736,
                        "src": "37270:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 80836,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "37291:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          ],
                          "id": 80835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "37283:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80834,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "37283:7:155",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "37283:13:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "37270:26:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 80856,
                      "nodeType": "Block",
                      "src": "37430:74:155",
                      "statements": [
                        {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 80853,
                                "name": "_tokenOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80736,
                                "src": "37483:9:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 80852,
                              "name": "LiquidationTokenOutNotSupported",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79642,
                              "src": "37451:31:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 80854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37451:42:155",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 80855,
                          "nodeType": "RevertStatement",
                          "src": "37444:49:155"
                        }
                      ]
                    },
                    "id": 80857,
                    "nodeType": "IfStatement",
                    "src": "37266:238:155",
                    "trueBody": {
                      "id": 80851,
                      "nodeType": "Block",
                      "src": "37298:126:155",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 80840,
                                "name": "_totalDebtBefore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80753,
                                "src": "37330:16:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 80843,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 80841,
                                  "name": "_amountOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80738,
                                  "src": "37348:10:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 80842,
                                  "name": "_yieldFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80770,
                                  "src": "37361:9:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "37348:22:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 80839,
                              "name": "_enforceMintLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81243,
                              "src": "37312:17:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 80844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37312:59:155",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 80845,
                          "nodeType": "ExpressionStatement",
                          "src": "37312:59:155"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 80847,
                                "name": "_receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80734,
                                "src": "37391:9:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 80848,
                                "name": "_amountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80738,
                                "src": "37402:10:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 80846,
                              "name": "_mint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                81890
                              ],
                              "referencedDeclaration": 81890,
                              "src": "37385:5:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256)"
                              }
                            },
                            "id": 80849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37385:28:155",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 80850,
                          "nodeType": "ExpressionStatement",
                          "src": "37385:28:155"
                        }
                      ]
                    }
                  },
                  "id": 80858,
                  "nodeType": "IfStatement",
                  "src": "37109:395:155",
                  "trueBody": {
                    "id": 80832,
                    "nodeType": "Block",
                    "src": "37143:117:155",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 80823,
                              "name": "_totalDebtBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80753,
                              "src": "37175:16:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 80824,
                              "name": "_yieldFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80770,
                              "src": "37193:9:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 80822,
                            "name": "_enforceMintLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81243,
                            "src": "37157:17:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 80825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "37157:46:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80826,
                        "nodeType": "ExpressionStatement",
                        "src": "37157:46:155"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 80828,
                              "name": "_receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80734,
                              "src": "37227:9:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 80829,
                              "name": "_amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80738,
                              "src": "37238:10:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 80827,
                            "name": "_withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81564,
                            "src": "37217:9:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 80830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "37217:32:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80831,
                        "nodeType": "ExpressionStatement",
                        "src": "37217:32:155"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 80860,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "37536:3:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "37540:6:155",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "37536:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80862,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80736,
                        "src": "37548:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80863,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80734,
                        "src": "37559:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80864,
                        "name": "_amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80738,
                        "src": "37570:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 80865,
                        "name": "_yieldFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80770,
                        "src": "37582:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80859,
                      "name": "TransferYieldOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79561,
                      "src": "37519:16:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 80866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37519:73:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80867,
                  "nodeType": "EmitStatement",
                  "src": "37514:78:155"
                },
                {
                  "expression": {
                    "hexValue": "",
                    "id": 80868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "37610:2:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 80744,
                  "id": 80869,
                  "nodeType": "Return",
                  "src": "37603:9:155"
                }
              ]
            },
            "baseFunctions": [
              56040
            ],
            "documentation": {
              "id": 80730,
              "nodeType": "StructuredDocumentation",
              "src": "35561:158:155",
              "text": "@inheritdoc ILiquidationSource\n @dev Emits a `TransferYieldOut` event\n @dev Supports the liquidation of either assets or prize vault shares."
            },
            "functionSelector": "7cc99d3f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 80741,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80740,
                  "name": "onlyLiquidationPair",
                  "nameLocations": [
                    "35886:19:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79697,
                  "src": "35886:19:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "35886:19:155"
              }
            ],
            "name": "transferTokensOut",
            "nameLocation": "35733:17:155",
            "parameters": {
              "id": 80739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80732,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80871,
                  "src": "35760:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35760:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80734,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "35798:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80871,
                  "src": "35790:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35790:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80736,
                  "mutability": "mutable",
                  "name": "_tokenOut",
                  "nameLocation": "35825:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80871,
                  "src": "35817:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35817:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80738,
                  "mutability": "mutable",
                  "name": "_amountOut",
                  "nameLocation": "35852:10:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80871,
                  "src": "35844:18:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "35844:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35750:118:155"
            },
            "returnParameters": {
              "id": 80744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80743,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80871,
                  "src": "35915:12:155",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 80742,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "35915:5:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35914:14:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 80913,
            "nodeType": "FunctionDefinition",
            "src": "37664:434:155",
            "nodes": [],
            "body": {
              "id": 80912,
              "nodeType": "Block",
              "src": "37836:262:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80884
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80884,
                      "mutability": "mutable",
                      "name": "_prizeToken",
                      "nameLocation": "37854:11:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 80912,
                      "src": "37846:19:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 80883,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "37846:7:155",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80891,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 80887,
                            "name": "prizePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81981,
                            "src": "37876:9:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrizePool_$65462",
                              "typeString": "contract PrizePool"
                            }
                          },
                          "id": 80888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "37886:10:155",
                          "memberName": "prizeToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63437,
                          "src": "37876:20:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$49389_$",
                            "typeString": "function () view external returns (contract IERC20)"
                          }
                        },
                        "id": 80889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "37876:22:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49389",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$49389",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 80886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "37868:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 80885,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "37868:7:155",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 80890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37868:31:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37846:53:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 80894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80892,
                      "name": "_tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80874,
                      "src": "37913:8:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 80893,
                      "name": "_prizeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80884,
                      "src": "37925:11:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "37913:23:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80901,
                  "nodeType": "IfStatement",
                  "src": "37909:115:155",
                  "trueBody": {
                    "id": 80900,
                    "nodeType": "Block",
                    "src": "37938:86:155",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 80896,
                              "name": "_tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80874,
                              "src": "37991:8:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 80897,
                              "name": "_prizeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80884,
                              "src": "38001:11:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 80895,
                            "name": "LiquidationTokenInNotPrizeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79637,
                            "src": "37959:31:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) pure"
                            }
                          },
                          "id": 80898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "37959:54:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80899,
                        "nodeType": "RevertStatement",
                        "src": "37952:61:155"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80907,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "38074:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          ],
                          "id": 80906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "38066:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80905,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "38066:7:155",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "38066:13:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 80909,
                        "name": "_amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80876,
                        "src": "38081:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 80902,
                        "name": "prizePool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81981,
                        "src": "38034:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PrizePool_$65462",
                          "typeString": "contract PrizePool"
                        }
                      },
                      "id": 80904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "38044:21:155",
                      "memberName": "contributePrizeTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63766,
                      "src": "38034:31:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 80910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38034:57:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 80911,
                  "nodeType": "ExpressionStatement",
                  "src": "38034:57:155"
                }
              ]
            },
            "baseFunctions": [
              56050
            ],
            "documentation": {
              "id": 80872,
              "nodeType": "StructuredDocumentation",
              "src": "37625:34:155",
              "text": "@inheritdoc ILiquidationSource"
            },
            "functionSelector": "c8576e61",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 80881,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80880,
                  "name": "onlyLiquidationPair",
                  "nameLocations": [
                    "37816:19:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79697,
                  "src": "37816:19:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "37816:19:155"
              }
            ],
            "name": "verifyTokensIn",
            "nameLocation": "37673:14:155",
            "parameters": {
              "id": 80879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80874,
                  "mutability": "mutable",
                  "name": "_tokenIn",
                  "nameLocation": "37705:8:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80913,
                  "src": "37697:16:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "37697:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80876,
                  "mutability": "mutable",
                  "name": "_amountIn",
                  "nameLocation": "37731:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80913,
                  "src": "37723:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37723:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80878,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80913,
                  "src": "37750:14:155",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 80877,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "37750:5:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37687:111:155"
            },
            "returnParameters": {
              "id": 80882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "37836:0:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 80927,
            "nodeType": "FunctionDefinition",
            "src": "38143:115:155",
            "nodes": [],
            "body": {
              "id": 80926,
              "nodeType": "Block",
              "src": "38216:42:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80923,
                        "name": "prizePool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81981,
                        "src": "38241:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PrizePool_$65462",
                          "typeString": "contract PrizePool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PrizePool_$65462",
                          "typeString": "contract PrizePool"
                        }
                      ],
                      "id": 80922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "38233:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 80921,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "38233:7:155",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 80924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38233:18:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 80920,
                  "id": 80925,
                  "nodeType": "Return",
                  "src": "38226:25:155"
                }
              ]
            },
            "baseFunctions": [
              56058
            ],
            "documentation": {
              "id": 80914,
              "nodeType": "StructuredDocumentation",
              "src": "38104:34:155",
              "text": "@inheritdoc ILiquidationSource"
            },
            "functionSelector": "700f04ef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "targetOf",
            "nameLocation": "38152:8:155",
            "parameters": {
              "id": 80917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80916,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80927,
                  "src": "38161:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "38161:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38160:23:155"
            },
            "returnParameters": {
              "id": 80920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80919,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80927,
                  "src": "38207:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "38207:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38206:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80957,
            "nodeType": "FunctionDefinition",
            "src": "38303:246:155",
            "nodes": [],
            "body": {
              "id": 80956,
              "nodeType": "Block",
              "src": "38426:123:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 80954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 80949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 80942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 80937,
                              "name": "_tokenOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80930,
                              "src": "38444:9:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 80940,
                                  "name": "_asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79535,
                                  "src": "38465:6:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$49389",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$49389",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 80939,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "38457:7:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 80938,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "38457:7:155",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 80941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "38457:15:155",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "38444:28:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 80948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 80943,
                              "name": "_tokenOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80930,
                              "src": "38476:9:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 80946,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "38497:4:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                    "typeString": "contract PrizeVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                    "typeString": "contract PrizeVault"
                                  }
                                ],
                                "id": 80945,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "38489:7:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 80944,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "38489:7:155",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 80947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "38489:13:155",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "38476:26:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "38444:58:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 80950,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "38443:60:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 80953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 80951,
                        "name": "_liquidationPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80932,
                        "src": "38507:16:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 80952,
                        "name": "liquidationPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79531,
                        "src": "38527:15:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "38507:35:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "38443:99:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 80936,
                  "id": 80955,
                  "nodeType": "Return",
                  "src": "38436:106:155"
                }
              ]
            },
            "baseFunctions": [
              56068
            ],
            "documentation": {
              "id": 80928,
              "nodeType": "StructuredDocumentation",
              "src": "38264:34:155",
              "text": "@inheritdoc ILiquidationSource"
            },
            "functionSelector": "1b571924",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLiquidationPair",
            "nameLocation": "38312:17:155",
            "parameters": {
              "id": 80933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80930,
                  "mutability": "mutable",
                  "name": "_tokenOut",
                  "nameLocation": "38347:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80957,
                  "src": "38339:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "38339:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80932,
                  "mutability": "mutable",
                  "name": "_liquidationPair",
                  "nameLocation": "38374:16:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80957,
                  "src": "38366:24:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "38366:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38329:67:155"
            },
            "returnParameters": {
              "id": 80936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80935,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80957,
                  "src": "38420:4:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 80934,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "38420:4:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38419:6:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80970,
            "nodeType": "FunctionDefinition",
            "src": "38826:95:155",
            "nodes": [],
            "body": {
              "id": 80969,
              "nodeType": "Block",
              "src": "38883:38:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80966,
                        "name": "_claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80960,
                        "src": "38905:8:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 80965,
                      "name": "_setClaimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82212,
                      "src": "38893:11:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 80967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38893:21:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80968,
                  "nodeType": "ExpressionStatement",
                  "src": "38893:21:155"
                }
              ]
            },
            "documentation": {
              "id": 80958,
              "nodeType": "StructuredDocumentation",
              "src": "38750:71:155",
              "text": "@notice Set claimer.\n @param _claimer Address of the claimer"
            },
            "functionSelector": "cdfb5832",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 80963,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80962,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "38873:9:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55964,
                  "src": "38873:9:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "38873:9:155"
              }
            ],
            "name": "setClaimer",
            "nameLocation": "38835:10:155",
            "parameters": {
              "id": 80961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80960,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nameLocation": "38854:8:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 80970,
                  "src": "38846:16:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "38846:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38845:18:155"
            },
            "returnParameters": {
              "id": 80964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "38883:0:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 81007,
            "nodeType": "FunctionDefinition",
            "src": "39072:278:155",
            "nodes": [],
            "body": {
              "id": 81006,
              "nodeType": "Block",
              "src": "39145:205:155",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 80986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 80980,
                          "name": "_liquidationPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80973,
                          "src": "39167:16:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 80979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "39159:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 80978,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "39159:7:155",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 80981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "39159:25:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 80984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "39196:1:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 80983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "39188:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 80982,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "39188:7:155",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 80985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "39188:10:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "39159:39:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80990,
                  "nodeType": "IfStatement",
                  "src": "39155:67:155",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 80987,
                        "name": "LPZeroAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79592,
                        "src": "39207:13:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 80988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "39207:15:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 80989,
                    "nodeType": "RevertStatement",
                    "src": "39200:22:155"
                  }
                },
                {
                  "expression": {
                    "id": 80993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80991,
                      "name": "liquidationPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79531,
                      "src": "39233:15:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 80992,
                      "name": "_liquidationPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80973,
                      "src": "39251:16:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "39233:34:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 80994,
                  "nodeType": "ExpressionStatement",
                  "src": "39233:34:155"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80998,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "39310:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          ],
                          "id": 80997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "39302:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80996,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "39302:7:155",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "39302:13:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81002,
                            "name": "_liquidationPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80973,
                            "src": "39325:16:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 81001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "39317:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 81000,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "39317:7:155",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "39317:25:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 80995,
                      "name": "LiquidationPairSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56018,
                      "src": "39283:18:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 81004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39283:60:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81005,
                  "nodeType": "EmitStatement",
                  "src": "39278:65:155"
                }
              ]
            },
            "documentation": {
              "id": 80971,
              "nodeType": "StructuredDocumentation",
              "src": "38927:140:155",
              "text": "@notice Set liquidationPair.\n @dev Emits a `LiquidationPairSet` event\n @param _liquidationPair New liquidationPair address"
            },
            "functionSelector": "25fa66e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 80976,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80975,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "39135:9:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55964,
                  "src": "39135:9:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "39135:9:155"
              }
            ],
            "name": "setLiquidationPair",
            "nameLocation": "39081:18:155",
            "parameters": {
              "id": 80974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80973,
                  "mutability": "mutable",
                  "name": "_liquidationPair",
                  "nameLocation": "39108:16:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81007,
                  "src": "39100:24:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "39100:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39099:26:155"
            },
            "returnParameters": {
              "id": 80977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "39145:0:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 81020,
            "nodeType": "FunctionDefinition",
            "src": "39554:138:155",
            "nodes": [],
            "body": {
              "id": 81019,
              "nodeType": "Block",
              "src": "39632:60:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81016,
                        "name": "_yieldFeePercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81010,
                        "src": "39665:19:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 81015,
                      "name": "_setYieldFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81589,
                      "src": "39642:22:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32)"
                      }
                    },
                    "id": 81017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39642:43:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81018,
                  "nodeType": "ExpressionStatement",
                  "src": "39642:43:155"
                }
              ]
            },
            "documentation": {
              "id": 81008,
              "nodeType": "StructuredDocumentation",
              "src": "39356:193:155",
              "text": "@notice Set yield fee percentage.\n @dev Yield fee is defined on a scale from `0` to `FEE_PRECISION`, inclusive.\n @param _yieldFeePercentage The new yield fee percentage to set"
            },
            "functionSelector": "e4e243ac",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 81013,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 81012,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "39622:9:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55964,
                  "src": "39622:9:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "39622:9:155"
              }
            ],
            "name": "setYieldFeePercentage",
            "nameLocation": "39563:21:155",
            "parameters": {
              "id": 81011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81010,
                  "mutability": "mutable",
                  "name": "_yieldFeePercentage",
                  "nameLocation": "39592:19:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81020,
                  "src": "39585:26:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 81009,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "39585:6:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39584:28:155"
            },
            "returnParameters": {
              "id": 81014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "39632:0:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 81033,
            "nodeType": "FunctionDefinition",
            "src": "39796:135:155",
            "nodes": [],
            "body": {
              "id": 81032,
              "nodeType": "Block",
              "src": "39873:58:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81029,
                        "name": "_yieldFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81023,
                        "src": "39905:18:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 81028,
                      "name": "_setYieldFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81604,
                      "src": "39883:21:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 81030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39883:41:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81031,
                  "nodeType": "ExpressionStatement",
                  "src": "39883:41:155"
                }
              ]
            },
            "documentation": {
              "id": 81021,
              "nodeType": "StructuredDocumentation",
              "src": "39698:93:155",
              "text": "@notice Set fee recipient.\n @param _yieldFeeRecipient Address of the fee recipient"
            },
            "functionSelector": "63003b16",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 81026,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 81025,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "39863:9:155"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55964,
                  "src": "39863:9:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "39863:9:155"
              }
            ],
            "name": "setYieldFeeRecipient",
            "nameLocation": "39805:20:155",
            "parameters": {
              "id": 81024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81023,
                  "mutability": "mutable",
                  "name": "_yieldFeeRecipient",
                  "nameLocation": "39834:18:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81033,
                  "src": "39826:26:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "39826:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39825:28:155"
            },
            "returnParameters": {
              "id": 81027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "39873:0:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 81100,
            "nodeType": "FunctionDefinition",
            "src": "40437:547:155",
            "nodes": [],
            "body": {
              "id": 81099,
              "nodeType": "Block",
              "src": "40518:466:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    81045,
                    81047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81045,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "40534:7:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 81099,
                      "src": "40529:12:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 81044,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "40529:4:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 81047,
                      "mutability": "mutable",
                      "name": "encodedDecimals",
                      "nameLocation": "40556:15:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 81099,
                      "src": "40543:28:155",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 81046,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "40543:5:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81060,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 81055,
                                "name": "IERC20Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50213,
                                "src": "40638:14:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$50213_$",
                                  "typeString": "type(contract IERC20Metadata)"
                                }
                              },
                              "id": 81056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "40653:8:155",
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50212,
                              "src": "40638:23:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_view$__$returns$_t_uint8_$",
                                "typeString": "function IERC20Metadata.decimals() view returns (uint8)"
                              }
                            },
                            "id": 81057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "40662:8:155",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "40638:32:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 81053,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "40615:3:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 81054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "40619:18:155",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "40615:22:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 81058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "40615:56:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 81050,
                            "name": "asset_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81037,
                            "src": "40583:6:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$49389",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$49389",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 81049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "40575:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 81048,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "40575:7:155",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "40575:15:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 81052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "40591:10:155",
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "40575:26:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 81059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "40575:106:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "40528:153:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 81066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81061,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81045,
                      "src": "40695:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 81065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 81062,
                          "name": "encodedDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81047,
                          "src": "40706:15:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 81063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "40722:6:155",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "40706:22:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 81064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "40732:2:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32_by_1",
                          "typeString": "int_const 32"
                        },
                        "value": "32"
                      },
                      "src": "40706:28:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "40695:39:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81094,
                  "nodeType": "IfStatement",
                  "src": "40691:260:155",
                  "trueBody": {
                    "id": 81093,
                    "nodeType": "Block",
                    "src": "40736:215:155",
                    "statements": [
                      {
                        "assignments": [
                          81068
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 81068,
                            "mutability": "mutable",
                            "name": "returnedDecimals",
                            "nameLocation": "40758:16:155",
                            "nodeType": "VariableDeclaration",
                            "scope": 81093,
                            "src": "40750:24:155",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 81067,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "40750:7:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 81076,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 81071,
                              "name": "encodedDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81047,
                              "src": "40788:15:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 81073,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "40806:7:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 81072,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "40806:7:155",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 81074,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "40805:9:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "expression": {
                              "id": 81069,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "40777:3:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 81070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "40781:6:155",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "40777:10:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 81075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "40777:38:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "40750:65:155"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 81083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 81077,
                            "name": "returnedDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81068,
                            "src": "40833:16:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 81080,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "40858:5:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 81079,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "40858:5:155",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  }
                                ],
                                "id": 81078,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "40853:4:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 81081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "40853:11:155",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint8",
                                "typeString": "type(uint8)"
                              }
                            },
                            "id": 81082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "40865:3:155",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "40853:15:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "40833:35:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 81092,
                        "nodeType": "IfStatement",
                        "src": "40829:112:155",
                        "trueBody": {
                          "id": 81091,
                          "nodeType": "Block",
                          "src": "40870:71:155",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "74727565",
                                    "id": 81084,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "40896:4:155",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 81087,
                                        "name": "returnedDecimals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 81068,
                                        "src": "40908:16:155",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 81086,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "40902:5:155",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint8_$",
                                        "typeString": "type(uint8)"
                                      },
                                      "typeName": {
                                        "id": 81085,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "40902:5:155",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 81088,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "40902:23:155",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "id": 81089,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "40895:31:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                                  "typeString": "tuple(bool,uint8)"
                                }
                              },
                              "functionReturnParameters": 81043,
                              "id": 81090,
                              "nodeType": "Return",
                              "src": "40888:38:155"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "66616c7365",
                        "id": 81095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "40968:5:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 81096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "40975:1:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 81097,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "40967:10:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                      "typeString": "tuple(bool,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 81043,
                  "id": 81098,
                  "nodeType": "Return",
                  "src": "40960:17:155"
                }
              ]
            },
            "documentation": {
              "id": 81034,
              "nodeType": "StructuredDocumentation",
              "src": "40134:298:155",
              "text": "@notice Fetch decimals of the underlying asset.\n @dev A return value of false indicates that the attempt failed in some way.\n @param asset_ Address of the underlying asset\n @return True if the attempt was successful, false otherwise\n @return Number of token decimals"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_tryGetAssetDecimals",
            "nameLocation": "40446:20:155",
            "parameters": {
              "id": 81038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81037,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "40474:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81100,
                  "src": "40467:13:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$49389",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 81036,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 81035,
                      "name": "IERC20",
                      "nameLocations": [
                        "40467:6:155"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49389,
                      "src": "40467:6:155"
                    },
                    "referencedDeclaration": 49389,
                    "src": "40467:6:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$49389",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40466:15:155"
            },
            "returnParameters": {
              "id": 81043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81040,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 81100,
                  "src": "40505:4:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 81039,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "40505:4:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81042,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 81100,
                  "src": "40511:5:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 81041,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "40511:5:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40504:13:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 81136,
            "nodeType": "FunctionDefinition",
            "src": "41452:347:155",
            "nodes": [],
            "body": {
              "id": 81135,
              "nodeType": "Block",
              "src": "41549:250:155",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 81122,
                        "nodeType": "Block",
                        "src": "41627:88:155",
                        "statements": [
                          {
                            "expression": {
                              "id": 81116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 81114,
                                "name": "_success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81104,
                                "src": "41641:8:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 81115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "41652:4:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "41641:15:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 81117,
                            "nodeType": "ExpressionStatement",
                            "src": "41641:15:155"
                          },
                          {
                            "expression": {
                              "id": 81120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 81118,
                                "name": "_totalAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81106,
                                "src": "41670:12:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 81119,
                                "name": "_totalPreciseAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81112,
                                "src": "41685:19:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "41670:34:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 81121,
                            "nodeType": "ExpressionStatement",
                            "src": "41670:34:155"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 81123,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 81113,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 81112,
                            "mutability": "mutable",
                            "name": "_totalPreciseAssets",
                            "nameLocation": "41606:19:155",
                            "nodeType": "VariableDeclaration",
                            "scope": 81123,
                            "src": "41598:27:155",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 81111,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "41598:7:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "41597:29:155"
                      },
                      "src": "41589:126:155"
                    },
                    {
                      "block": {
                        "id": 81132,
                        "nodeType": "Block",
                        "src": "41722:71:155",
                        "statements": [
                          {
                            "expression": {
                              "id": 81126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 81124,
                                "name": "_success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81104,
                                "src": "41736:8:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "66616c7365",
                                "id": 81125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "41747:5:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "41736:16:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 81127,
                            "nodeType": "ExpressionStatement",
                            "src": "41736:16:155"
                          },
                          {
                            "expression": {
                              "id": 81130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 81128,
                                "name": "_totalAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81106,
                                "src": "41766:12:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "30",
                                "id": 81129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "41781:1:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "41766:16:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 81131,
                            "nodeType": "ExpressionStatement",
                            "src": "41766:16:155"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 81133,
                      "nodeType": "TryCatchClause",
                      "src": "41716:77:155"
                    }
                  ],
                  "externalCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81108,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "41563:4:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PrizeVault_$81605",
                          "typeString": "contract PrizeVault"
                        }
                      },
                      "id": 81109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "41568:18:155",
                      "memberName": "totalPreciseAssets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80522,
                      "src": "41563:23:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 81110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "41563:25:155",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 81134,
                  "nodeType": "TryStatement",
                  "src": "41559:234:155"
                }
              ]
            },
            "documentation": {
              "id": 81101,
              "nodeType": "StructuredDocumentation",
              "src": "40990:457:155",
              "text": "@notice Calculates the amount of assets the vault controls based on current onchain conditions.\n @dev Calls `totalPreciseAssets` externally so it can catch `previewRedeem` failures and return\n whether or not the call was successful.\n @return _success Returns true if totalAssets was successfully calculated and false otherwise\n @return _totalAssets The total assets controlled by the vault based on current onchain conditions"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_tryGetTotalPreciseAssets",
            "nameLocation": "41461:25:155",
            "parameters": {
              "id": 81102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "41486:2:155"
            },
            "returnParameters": {
              "id": 81107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81104,
                  "mutability": "mutable",
                  "name": "_success",
                  "nameLocation": "41517:8:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81136,
                  "src": "41512:13:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 81103,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "41512:4:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81106,
                  "mutability": "mutable",
                  "name": "_totalAssets",
                  "nameLocation": "41535:12:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81136,
                  "src": "41527:20:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "41527:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "41511:37:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 81172,
            "nodeType": "FunctionDefinition",
            "src": "42268:640:155",
            "nodes": [],
            "body": {
              "id": 81171,
              "nodeType": "Block",
              "src": "42448:460:155",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81151,
                      "name": "_totalAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81141,
                      "src": "42462:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 81152,
                      "name": "_totalDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81143,
                      "src": "42478:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "42462:26:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 81169,
                    "nodeType": "Block",
                    "src": "42535:367:155",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 81159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 81157,
                              "name": "_totalAssets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81141,
                              "src": "42816:12:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 81158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "42832:1:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "42816:17:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "id": 81163,
                                "name": "_totalDebt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81143,
                                "src": "42855:10:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 81164,
                                "name": "_totalAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81141,
                                "src": "42867:12:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 81165,
                                "name": "_rounding",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81146,
                                "src": "42881:9:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Rounding_$53318",
                                  "typeString": "enum Math.Rounding"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_enum$_Rounding_$53318",
                                  "typeString": "enum Math.Rounding"
                                }
                              ],
                              "expression": {
                                "id": 81161,
                                "name": "_assets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81139,
                                "src": "42840:7:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 81162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "42848:6:155",
                              "memberName": "mulDiv",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53569,
                              "src": "42840:14:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$53318_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"
                              }
                            },
                            "id": 81166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "42840:51:155",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 81167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "42816:75:155",
                          "trueExpression": {
                            "hexValue": "30",
                            "id": 81160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "42836:1:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 81150,
                        "id": 81168,
                        "nodeType": "Return",
                        "src": "42809:82:155"
                      }
                    ]
                  },
                  "id": 81170,
                  "nodeType": "IfStatement",
                  "src": "42458:444:155",
                  "trueBody": {
                    "id": 81156,
                    "nodeType": "Block",
                    "src": "42490:39:155",
                    "statements": [
                      {
                        "expression": {
                          "id": 81154,
                          "name": "_assets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81139,
                          "src": "42511:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 81150,
                        "id": 81155,
                        "nodeType": "Return",
                        "src": "42504:14:155"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 81137,
              "nodeType": "StructuredDocumentation",
              "src": "41805:458:155",
              "text": "@notice Converts assets to shares with the given vault state and rounding direction.\n @dev Returns zero if the vault is in a lossy state AND there are no more assets.\n @param _assets The assets to convert\n @param _totalAssets The total assets that the vault controls\n @param _totalDebt The total debt the vault owes\n @param _rounding The rounding direction for the conversion\n @return The resulting share balance"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_convertToShares",
            "nameLocation": "42277:16:155",
            "parameters": {
              "id": 81147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81139,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "42311:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81172,
                  "src": "42303:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42303:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81141,
                  "mutability": "mutable",
                  "name": "_totalAssets",
                  "nameLocation": "42336:12:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81172,
                  "src": "42328:20:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42328:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81143,
                  "mutability": "mutable",
                  "name": "_totalDebt",
                  "nameLocation": "42366:10:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81172,
                  "src": "42358:18:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42358:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81146,
                  "mutability": "mutable",
                  "name": "_rounding",
                  "nameLocation": "42400:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81172,
                  "src": "42386:23:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Rounding_$53318",
                    "typeString": "enum Math.Rounding"
                  },
                  "typeName": {
                    "id": 81145,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 81144,
                      "name": "Math.Rounding",
                      "nameLocations": [
                        "42386:4:155",
                        "42391:8:155"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53318,
                      "src": "42386:13:155"
                    },
                    "referencedDeclaration": 53318,
                    "src": "42386:13:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Rounding_$53318",
                      "typeString": "enum Math.Rounding"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42293:122:155"
            },
            "returnParameters": {
              "id": 81150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81149,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 81172,
                  "src": "42439:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42439:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42438:9:155"
            },
            "scope": 81605,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 81203,
            "nodeType": "FunctionDefinition",
            "src": "43288:616:155",
            "nodes": [],
            "body": {
              "id": 81202,
              "nodeType": "Block",
              "src": "43468:436:155",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81187,
                      "name": "_totalAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81177,
                      "src": "43482:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 81188,
                      "name": "_totalDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81179,
                      "src": "43498:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "43482:26:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 81200,
                    "nodeType": "Block",
                    "src": "43555:343:155",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 81195,
                              "name": "_totalAssets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81177,
                              "src": "43851:12:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 81196,
                              "name": "_totalDebt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81179,
                              "src": "43865:10:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 81197,
                              "name": "_rounding",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81182,
                              "src": "43877:9:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Rounding_$53318",
                                "typeString": "enum Math.Rounding"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Rounding_$53318",
                                "typeString": "enum Math.Rounding"
                              }
                            ],
                            "expression": {
                              "id": 81193,
                              "name": "_shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81175,
                              "src": "43836:7:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 81194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "43844:6:155",
                            "memberName": "mulDiv",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53569,
                            "src": "43836:14:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$53318_$returns$_t_uint256_$attached_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"
                            }
                          },
                          "id": 81198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "43836:51:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 81186,
                        "id": 81199,
                        "nodeType": "Return",
                        "src": "43829:58:155"
                      }
                    ]
                  },
                  "id": 81201,
                  "nodeType": "IfStatement",
                  "src": "43478:420:155",
                  "trueBody": {
                    "id": 81192,
                    "nodeType": "Block",
                    "src": "43510:39:155",
                    "statements": [
                      {
                        "expression": {
                          "id": 81190,
                          "name": "_shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81175,
                          "src": "43531:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 81186,
                        "id": 81191,
                        "nodeType": "Return",
                        "src": "43524:14:155"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 81173,
              "nodeType": "StructuredDocumentation",
              "src": "42914:369:155",
              "text": "@notice Converts shares to assets with the given vault state and rounding direction.\n @param _shares The shares to convert\n @param _totalAssets The total assets that the vault controls\n @param _totalDebt The total debt the vault owes\n @param _rounding The rounding direction for the conversion\n @return The resulting asset balance"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_convertToAssets",
            "nameLocation": "43297:16:155",
            "parameters": {
              "id": 81183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81175,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "43331:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81203,
                  "src": "43323:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43323:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81177,
                  "mutability": "mutable",
                  "name": "_totalAssets",
                  "nameLocation": "43356:12:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81203,
                  "src": "43348:20:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43348:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81179,
                  "mutability": "mutable",
                  "name": "_totalDebt",
                  "nameLocation": "43386:10:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81203,
                  "src": "43378:18:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43378:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81182,
                  "mutability": "mutable",
                  "name": "_rounding",
                  "nameLocation": "43420:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81203,
                  "src": "43406:23:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Rounding_$53318",
                    "typeString": "enum Math.Rounding"
                  },
                  "typeName": {
                    "id": 81181,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 81180,
                      "name": "Math.Rounding",
                      "nameLocations": [
                        "43406:4:155",
                        "43411:8:155"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53318,
                      "src": "43406:13:155"
                    },
                    "referencedDeclaration": 53318,
                    "src": "43406:13:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Rounding_$53318",
                      "typeString": "enum Math.Rounding"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43313:122:155"
            },
            "returnParameters": {
              "id": 81186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81185,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 81203,
                  "src": "43459:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43459:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43458:9:155"
            },
            "scope": 81605,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 81216,
            "nodeType": "FunctionDefinition",
            "src": "44269:136:155",
            "nodes": [],
            "body": {
              "id": 81215,
              "nodeType": "Block",
              "src": "44346:59:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81211,
                      "name": "TWAB_SUPPLY_LIMIT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79486,
                      "src": "44363:17:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 81212,
                      "name": "_existingShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81206,
                      "src": "44383:15:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "44363:35:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 81210,
                  "id": 81214,
                  "nodeType": "Return",
                  "src": "44356:42:155"
                }
              ]
            },
            "documentation": {
              "id": 81204,
              "nodeType": "StructuredDocumentation",
              "src": "43910:354:155",
              "text": "@notice Returns the shares that can be minted without exceeding the TwabController supply limit.\n @dev The TwabController limits the total supply for each vault.\n @param _existingShares The current allocated prize vault shares (internal and external)\n @return The remaining shares that can be minted without exceeding TWAB limits"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintLimit",
            "nameLocation": "44278:10:155",
            "parameters": {
              "id": 81207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81206,
                  "mutability": "mutable",
                  "name": "_existingShares",
                  "nameLocation": "44297:15:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81216,
                  "src": "44289:23:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44289:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44288:25:155"
            },
            "returnParameters": {
              "id": 81210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81209,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 81216,
                  "src": "44337:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44337:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44336:9:155"
            },
            "scope": 81605,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 81243,
            "nodeType": "FunctionDefinition",
            "src": "44772:293:155",
            "nodes": [],
            "body": {
              "id": 81242,
              "nodeType": "Block",
              "src": "44858:207:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    81225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81225,
                      "mutability": "mutable",
                      "name": "_limit",
                      "nameLocation": "44876:6:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 81242,
                      "src": "44868:14:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81224,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "44868:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81229,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 81227,
                        "name": "_existingShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81219,
                        "src": "44896:15:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 81226,
                      "name": "_mintLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81216,
                      "src": "44885:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 81228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44885:27:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "44868:44:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81230,
                      "name": "_newShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81221,
                      "src": "44926:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 81231,
                      "name": "_limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81225,
                      "src": "44939:6:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "44926:19:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81241,
                  "nodeType": "IfStatement",
                  "src": "44922:137:155",
                  "trueBody": {
                    "id": 81240,
                    "nodeType": "Block",
                    "src": "44947:112:155",
                    "statements": [
                      {
                        "id": 81239,
                        "nodeType": "UncheckedBlock",
                        "src": "44961:88:155",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 81236,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 81234,
                                    "name": "_newShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 81221,
                                    "src": "45014:10:155",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 81235,
                                    "name": "_limit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 81225,
                                    "src": "45027:6:155",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "45014:19:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 81233,
                                "name": "MintLimitExceeded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79661,
                                "src": "44996:17:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256) pure"
                                }
                              },
                              "id": 81237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "44996:38:155",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 81238,
                            "nodeType": "RevertStatement",
                            "src": "44989:45:155"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 81217,
              "nodeType": "StructuredDocumentation",
              "src": "44411:356:155",
              "text": "@notice Verifies that the mint limit can support the new share balance.\n @dev Reverts if the mint limit is exceeded.\n @dev This MUST be called anytime there is a positive increase in the net total shares.\n @param _existingShares The total existing prize vault shares (internal and external)\n @param _newShares The new shares"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_enforceMintLimit",
            "nameLocation": "44781:17:155",
            "parameters": {
              "id": 81222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81219,
                  "mutability": "mutable",
                  "name": "_existingShares",
                  "nameLocation": "44807:15:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81243,
                  "src": "44799:23:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44799:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81221,
                  "mutability": "mutable",
                  "name": "_newShares",
                  "nameLocation": "44832:10:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81243,
                  "src": "44824:18:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44824:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44798:45:155"
            },
            "returnParameters": {
              "id": 81223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "44858:0:155"
            },
            "scope": 81605,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 81267,
            "nodeType": "FunctionDefinition",
            "src": "45311:288:155",
            "nodes": [],
            "body": {
              "id": 81266,
              "nodeType": "Block",
              "src": "45413:186:155",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81253,
                      "name": "totalDebt_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81248,
                      "src": "45427:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 81254,
                      "name": "_totalAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81246,
                      "src": "45441:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "45427:26:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 81264,
                    "nodeType": "Block",
                    "src": "45494:99:155",
                    "statements": [
                      {
                        "id": 81263,
                        "nodeType": "UncheckedBlock",
                        "src": "45508:75:155",
                        "statements": [
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 81261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 81259,
                                "name": "_totalAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81246,
                                "src": "45543:12:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 81260,
                                "name": "totalDebt_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81248,
                                "src": "45558:10:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "45543:25:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 81252,
                            "id": 81262,
                            "nodeType": "Return",
                            "src": "45536:32:155"
                          }
                        ]
                      }
                    ]
                  },
                  "id": 81265,
                  "nodeType": "IfStatement",
                  "src": "45423:170:155",
                  "trueBody": {
                    "id": 81258,
                    "nodeType": "Block",
                    "src": "45455:33:155",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 81256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "45476:1:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 81252,
                        "id": 81257,
                        "nodeType": "Return",
                        "src": "45469:8:155"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 81244,
              "nodeType": "StructuredDocumentation",
              "src": "45071:235:155",
              "text": "@notice Total yield balance of the vault (including the yield buffer).\n @param _totalAssets The total assets controlled by the vault\n @param totalDebt_ The total asset debt owed\n @return The total yield balance"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_totalYieldBalance",
            "nameLocation": "45320:18:155",
            "parameters": {
              "id": 81249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81246,
                  "mutability": "mutable",
                  "name": "_totalAssets",
                  "nameLocation": "45347:12:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81267,
                  "src": "45339:20:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "45339:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81248,
                  "mutability": "mutable",
                  "name": "totalDebt_",
                  "nameLocation": "45369:10:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81267,
                  "src": "45361:18:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "45361:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "45338:42:155"
            },
            "returnParameters": {
              "id": 81252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81251,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 81267,
                  "src": "45404:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "45404:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "45403:9:155"
            },
            "scope": 81605,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 81302,
            "nodeType": "FunctionDefinition",
            "src": "45927:435:155",
            "nodes": [],
            "body": {
              "id": 81301,
              "nodeType": "Block",
              "src": "46033:329:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    81278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81278,
                      "mutability": "mutable",
                      "name": "totalYieldBalance_",
                      "nameLocation": "46051:18:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 81301,
                      "src": "46043:26:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81277,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "46043:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81283,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 81280,
                        "name": "_totalAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81270,
                        "src": "46091:12:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 81281,
                        "name": "totalDebt_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81272,
                        "src": "46105:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 81279,
                      "name": "_totalYieldBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81267,
                      "src": "46072:18:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 81282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "46072:44:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "46043:73:155"
                },
                {
                  "assignments": [
                    81285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81285,
                      "mutability": "mutable",
                      "name": "_yieldBuffer",
                      "nameLocation": "46134:12:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 81301,
                      "src": "46126:20:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81284,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "46126:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81287,
                  "initialValue": {
                    "id": 81286,
                    "name": "yieldBuffer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79515,
                    "src": "46149:11:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "46126:34:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81288,
                      "name": "totalYieldBalance_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81278,
                      "src": "46174:18:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 81289,
                      "name": "_yieldBuffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81285,
                      "src": "46196:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "46174:34:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 81299,
                    "nodeType": "Block",
                    "src": "46323:33:155",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 81297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "46344:1:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 81276,
                        "id": 81298,
                        "nodeType": "Return",
                        "src": "46337:8:155"
                      }
                    ]
                  },
                  "id": 81300,
                  "nodeType": "IfStatement",
                  "src": "46170:186:155",
                  "trueBody": {
                    "id": 81296,
                    "nodeType": "Block",
                    "src": "46210:107:155",
                    "statements": [
                      {
                        "id": 81295,
                        "nodeType": "UncheckedBlock",
                        "src": "46224:83:155",
                        "statements": [
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 81293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 81291,
                                "name": "totalYieldBalance_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81278,
                                "src": "46259:18:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 81292,
                                "name": "_yieldBuffer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81285,
                                "src": "46280:12:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "46259:33:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 81276,
                            "id": 81294,
                            "nodeType": "Return",
                            "src": "46252:40:155"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 81268,
              "nodeType": "StructuredDocumentation",
              "src": "45605:317:155",
              "text": "@notice Available yield balance given the total assets and total share supply.\n @dev Subtracts the yield buffer from the total yield balance.\n @param _totalAssets The total assets controlled by the vault\n @param totalDebt_ The total asset debt owed\n @return The available yield balance"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_availableYieldBalance",
            "nameLocation": "45936:22:155",
            "parameters": {
              "id": 81273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81270,
                  "mutability": "mutable",
                  "name": "_totalAssets",
                  "nameLocation": "45967:12:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81302,
                  "src": "45959:20:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "45959:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81272,
                  "mutability": "mutable",
                  "name": "totalDebt_",
                  "nameLocation": "45989:10:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81302,
                  "src": "45981:18:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "45981:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "45958:42:155"
            },
            "returnParameters": {
              "id": 81276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81275,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 81302,
                  "src": "46024:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "46024:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46023:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 81415,
            "nodeType": "FunctionDefinition",
            "src": "46854:1742:155",
            "nodes": [],
            "body": {
              "id": 81414,
              "nodeType": "Block",
              "src": "46958:1638:155",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81314,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81311,
                      "src": "46972:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 81315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "46983:1:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "46972:12:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81320,
                  "nodeType": "IfStatement",
                  "src": "46968:41:155",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 81317,
                        "name": "MintZeroShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79586,
                        "src": "46993:14:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 81318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "46993:16:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 81319,
                    "nodeType": "RevertStatement",
                    "src": "46986:23:155"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81321,
                      "name": "_assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81309,
                      "src": "47023:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 81322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "47034:1:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "47023:12:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81327,
                  "nodeType": "IfStatement",
                  "src": "47019:44:155",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 81324,
                        "name": "DepositZeroAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79583,
                        "src": "47044:17:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 81325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "47044:19:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 81326,
                    "nodeType": "RevertStatement",
                    "src": "47037:26:155"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81331,
                        "name": "_caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81305,
                        "src": "47617:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81334,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "47646:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          ],
                          "id": 81333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "47638:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 81332,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "47638:7:155",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "47638:13:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81336,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81309,
                        "src": "47665:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 81328,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79535,
                        "src": "47580:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49389",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 81330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "47587:16:155",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50312,
                      "src": "47580:23:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$49389_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$49389_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 81337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47580:102:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81338,
                  "nodeType": "ExpressionStatement",
                  "src": "47580:102:155"
                },
                {
                  "assignments": [
                    81340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81340,
                      "mutability": "mutable",
                      "name": "_assetsWithDust",
                      "nameLocation": "47794:15:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 81414,
                      "src": "47786:23:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81339,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "47786:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81348,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81345,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "47837:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          ],
                          "id": 81344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "47829:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 81343,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "47829:7:155",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "47829:13:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81341,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79535,
                        "src": "47812:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49389",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 81342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "47819:9:155",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49346,
                      "src": "47812:16:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 81347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47812:31:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "47786:57:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81354,
                            "name": "yieldVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79519,
                            "src": "47881:10:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC4626_$48611",
                              "typeString": "contract IERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC4626_$48611",
                              "typeString": "contract IERC4626"
                            }
                          ],
                          "id": 81353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "47873:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 81352,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "47873:7:155",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "47873:19:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81356,
                        "name": "_assetsWithDust",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81340,
                        "src": "47894:15:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 81349,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79535,
                        "src": "47853:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49389",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 81351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "47860:12:155",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50485,
                      "src": "47853:19:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$49389_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$49389_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 81357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47853:57:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81358,
                  "nodeType": "ExpressionStatement",
                  "src": "47853:57:155"
                },
                {
                  "assignments": [
                    81360
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81360,
                      "mutability": "mutable",
                      "name": "_yieldVaultShares",
                      "nameLocation": "48024:17:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 81414,
                      "src": "48016:25:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81359,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "48016:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81365,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 81363,
                        "name": "_assetsWithDust",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81340,
                        "src": "48070:15:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 81361,
                        "name": "yieldVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79519,
                        "src": "48044:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC4626_$48611",
                          "typeString": "contract IERC4626"
                        }
                      },
                      "id": 81362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "48055:14:155",
                      "memberName": "previewDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48518,
                      "src": "48044:25:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 81364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "48044:42:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "48016:70:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81369,
                        "name": "_yieldVaultShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81360,
                        "src": "48112:17:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 81372,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "48139:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          ],
                          "id": 81371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "48131:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 81370,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "48131:7:155",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "48131:13:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81366,
                        "name": "yieldVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79519,
                        "src": "48096:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC4626_$48611",
                          "typeString": "contract IERC4626"
                        }
                      },
                      "id": 81368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "48107:4:155",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48554,
                      "src": "48096:15:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 81374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "48096:49:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 81375,
                  "nodeType": "ExpressionStatement",
                  "src": "48096:49:155"
                },
                {
                  "assignments": [
                    81377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81377,
                      "mutability": "mutable",
                      "name": "_totalDebtBeforeMint",
                      "nameLocation": "48234:20:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 81414,
                      "src": "48226:28:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81376,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "48226:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81380,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 81378,
                      "name": "totalDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80496,
                      "src": "48257:9:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 81379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "48257:11:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "48226:42:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81382,
                        "name": "_totalDebtBeforeMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81377,
                        "src": "48296:20:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 81383,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81311,
                        "src": "48318:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 81381,
                      "name": "_enforceMintLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81243,
                      "src": "48278:17:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 81384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "48278:48:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81385,
                  "nodeType": "ExpressionStatement",
                  "src": "48278:48:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 81386,
                        "name": "totalPreciseAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80522,
                        "src": "48340:18:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 81387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "48340:20:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 81390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 81388,
                        "name": "_totalDebtBeforeMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81377,
                        "src": "48363:20:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 81389,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81311,
                        "src": "48386:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "48363:30:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "48340:53:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81401,
                  "nodeType": "IfStatement",
                  "src": "48336:157:155",
                  "trueBody": {
                    "id": 81400,
                    "nodeType": "Block",
                    "src": "48395:98:155",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 81393,
                                "name": "totalPreciseAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80522,
                                "src": "48429:18:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 81394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "48429:20:155",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 81397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 81395,
                                "name": "_totalDebtBeforeMint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81377,
                                "src": "48451:20:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 81396,
                                "name": "_shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81311,
                                "src": "48474:7:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "48451:30:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 81392,
                            "name": "LossyDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79656,
                            "src": "48416:12:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 81398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "48416:66:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81399,
                        "nodeType": "RevertStatement",
                        "src": "48409:73:155"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81403,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81307,
                        "src": "48509:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81404,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81311,
                        "src": "48520:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 81402,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        81890
                      ],
                      "referencedDeclaration": 81890,
                      "src": "48503:5:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 81405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "48503:25:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81406,
                  "nodeType": "ExpressionStatement",
                  "src": "48503:25:155"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 81408,
                        "name": "_caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81305,
                        "src": "48552:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81409,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81307,
                        "src": "48561:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81410,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81309,
                        "src": "48572:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 81411,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81311,
                        "src": "48581:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 81407,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48462,
                      "src": "48544:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 81412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "48544:45:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81413,
                  "nodeType": "EmitStatement",
                  "src": "48539:50:155"
                }
              ]
            },
            "documentation": {
              "id": 81303,
              "nodeType": "StructuredDocumentation",
              "src": "46368:481:155",
              "text": "@notice Deposits assets to the yield vault and mints shares\n @param _caller The caller of the deposit\n @param _receiver The receiver of the deposit shares\n @param _assets Amount of assets to deposit\n @param _shares Amount of shares to mint\n @dev Emits a `Deposit` event.\n @dev Will revert if 0 shares are minted back to the receiver or if 0 assets are deposited.\n @dev Will revert if the deposit may result in the loss of funds."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositAndMint",
            "nameLocation": "46863:15:155",
            "parameters": {
              "id": 81312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81305,
                  "mutability": "mutable",
                  "name": "_caller",
                  "nameLocation": "46887:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81415,
                  "src": "46879:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "46879:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81307,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "46904:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81415,
                  "src": "46896:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "46896:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81309,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "46923:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81415,
                  "src": "46915:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "46915:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81311,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "46940:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81415,
                  "src": "46932:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "46932:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46878:70:155"
            },
            "returnParameters": {
              "id": 81313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "46958:0:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 81473,
            "nodeType": "FunctionDefinition",
            "src": "49031:1017:155",
            "nodes": [],
            "body": {
              "id": 81472,
              "nodeType": "Block",
              "src": "49198:850:155",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81429,
                      "name": "_assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81426,
                      "src": "49212:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 81430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "49223:1:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "49212:12:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81435,
                  "nodeType": "IfStatement",
                  "src": "49208:45:155",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 81432,
                        "name": "WithdrawZeroAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79577,
                        "src": "49233:18:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 81433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "49233:20:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 81434,
                    "nodeType": "RevertStatement",
                    "src": "49226:27:155"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81436,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81424,
                      "src": "49267:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 81437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "49278:1:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "49267:12:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81442,
                  "nodeType": "IfStatement",
                  "src": "49263:41:155",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 81439,
                        "name": "BurnZeroShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79580,
                        "src": "49288:14:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 81440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "49288:16:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 81441,
                    "nodeType": "RevertStatement",
                    "src": "49281:23:155"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 81445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81443,
                      "name": "_caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81418,
                      "src": "49318:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 81444,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81422,
                      "src": "49329:6:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "49318:17:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81453,
                  "nodeType": "IfStatement",
                  "src": "49314:89:155",
                  "trueBody": {
                    "id": 81452,
                    "nodeType": "Block",
                    "src": "49337:66:155",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 81447,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81422,
                              "src": "49367:6:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 81448,
                              "name": "_caller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81418,
                              "src": "49375:7:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 81449,
                              "name": "_shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81424,
                              "src": "49384:7:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 81446,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49288,
                            "src": "49351:15:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 81450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "49351:41:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81451,
                        "nodeType": "ExpressionStatement",
                        "src": "49351:41:155"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81455,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81422,
                        "src": "49916:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81456,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81424,
                        "src": "49924:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 81454,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        81919
                      ],
                      "referencedDeclaration": 81919,
                      "src": "49910:5:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 81457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "49910:22:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81458,
                  "nodeType": "ExpressionStatement",
                  "src": "49910:22:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 81460,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81420,
                        "src": "49952:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81461,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81426,
                        "src": "49963:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 81459,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81564,
                      "src": "49942:9:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 81462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "49942:29:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81463,
                  "nodeType": "ExpressionStatement",
                  "src": "49942:29:155"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 81465,
                        "name": "_caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81418,
                        "src": "49996:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81466,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81420,
                        "src": "50005:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81467,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81422,
                        "src": "50016:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 81468,
                        "name": "_assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81426,
                        "src": "50024:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 81469,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81424,
                        "src": "50033:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 81464,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48474,
                      "src": "49987:8:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 81470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "49987:54:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81471,
                  "nodeType": "EmitStatement",
                  "src": "49982:59:155"
                }
              ]
            },
            "documentation": {
              "id": 81416,
              "nodeType": "StructuredDocumentation",
              "src": "48602:424:155",
              "text": "@notice Burns shares and withdraws assets from the underlying yield vault.\n @param _caller Address of the caller\n @param _receiver Address of the receiver of the assets\n @param _owner Owner of the shares\n @param _shares Shares to burn\n @param _assets Assets to withdraw\n @dev Emits a `Withdraw` event.\n @dev Will revert if 0 assets are withdrawn or if 0 shares are burned"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnAndWithdraw",
            "nameLocation": "49040:16:155",
            "parameters": {
              "id": 81427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81418,
                  "mutability": "mutable",
                  "name": "_caller",
                  "nameLocation": "49074:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81473,
                  "src": "49066:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49066:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81420,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "49099:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81473,
                  "src": "49091:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49091:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81422,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "49126:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81473,
                  "src": "49118:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49118:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81424,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "49150:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81473,
                  "src": "49142:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "49142:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81426,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "49175:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81473,
                  "src": "49167:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "49167:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "49056:132:155"
            },
            "returnParameters": {
              "id": 81428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "49198:0:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 81502,
            "nodeType": "FunctionDefinition",
            "src": "50868:259:155",
            "nodes": [],
            "body": {
              "id": 81501,
              "nodeType": "Block",
              "src": "50934:193:155",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 81494,
                        "nodeType": "Block",
                        "src": "51039:42:155",
                        "statements": [
                          {
                            "expression": {
                              "id": 81492,
                              "name": "_maxAssets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81490,
                              "src": "51060:10:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 81478,
                            "id": 81493,
                            "nodeType": "Return",
                            "src": "51053:17:155"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 81495,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 81491,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 81490,
                            "mutability": "mutable",
                            "name": "_maxAssets",
                            "nameLocation": "51027:10:155",
                            "nodeType": "VariableDeclaration",
                            "scope": 81495,
                            "src": "51019:18:155",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 81489,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "51019:7:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "51018:20:155"
                      },
                      "src": "51010:71:155"
                    },
                    {
                      "block": {
                        "id": 81498,
                        "nodeType": "Block",
                        "src": "51088:33:155",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "30",
                              "id": 81496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "51109:1:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "functionReturnParameters": 81478,
                            "id": 81497,
                            "nodeType": "Return",
                            "src": "51102:8:155"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 81499,
                      "nodeType": "TryCatchClause",
                      "src": "51082:39:155"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 81485,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "51002:4:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                  "typeString": "contract PrizeVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                  "typeString": "contract PrizeVault"
                                }
                              ],
                              "id": 81484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "50994:7:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 81483,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "50994:7:155",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 81486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "50994:13:155",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 81481,
                            "name": "yieldVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79519,
                            "src": "50973:10:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC4626_$48611",
                              "typeString": "contract IERC4626"
                            }
                          },
                          "id": 81482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "50984:9:155",
                          "memberName": "maxRedeem",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48590,
                          "src": "50973:20:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 81487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "50973:35:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 81479,
                        "name": "yieldVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79519,
                        "src": "50948:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC4626_$48611",
                          "typeString": "contract IERC4626"
                        }
                      },
                      "id": 81480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "50959:13:155",
                      "memberName": "previewRedeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48598,
                      "src": "50948:24:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 81488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "50948:61:155",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 81500,
                  "nodeType": "TryStatement",
                  "src": "50944:177:155"
                }
              ]
            },
            "documentation": {
              "id": 81474,
              "nodeType": "StructuredDocumentation",
              "src": "50054:809:155",
              "text": "@notice Returns the max assets that can be withdrawn from the yield vault through this vault's\n `_withdraw` function.\n @dev This should be used over `yieldVault.maxWithdraw` when considering withdrawal limits since\n this function takes into account the yield vault redemption limits, which is necessary since the\n `_withdraw` function uses `yieldVault.redeem` instead of `yieldVault.withdraw`. Since we convert\n the max redeemable shares to assets rounding down, the `yieldVault.previewWithdraw` call in the\n `_withdraw` function is guaranteed to return less than or equal shares to the max yield vault \n redemption.\n @dev Returns zero if `yieldVault.previewRedeem` reverts.\n @return The max assets that can be withdrawn from the yield vault."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_maxYieldVaultWithdraw",
            "nameLocation": "50877:22:155",
            "parameters": {
              "id": 81475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "50899:2:155"
            },
            "returnParameters": {
              "id": 81478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81477,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 81502,
                  "src": "50925:7:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "50925:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "50924:9:155"
            },
            "scope": 81605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 81564,
            "nodeType": "FunctionDefinition",
            "src": "51318:856:155",
            "nodes": [],
            "body": {
              "id": 81563,
              "nodeType": "Block",
              "src": "51382:792:155",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    81511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81511,
                      "mutability": "mutable",
                      "name": "_latentAssets",
                      "nameLocation": "51590:13:155",
                      "nodeType": "VariableDeclaration",
                      "scope": 81563,
                      "src": "51582:21:155",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "51582:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81519,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81516,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "51631:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PrizeVault_$81605",
                              "typeString": "contract PrizeVault"
                            }
                          ],
                          "id": 81515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "51623:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 81514,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "51623:7:155",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 81517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "51623:13:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 81512,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79535,
                        "src": "51606:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49389",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 81513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "51613:9:155",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49346,
                      "src": "51606:16:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 81518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "51606:31:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "51582:55:155"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 81522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81520,
                      "name": "_assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81507,
                      "src": "51651:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 81521,
                      "name": "_latentAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81511,
                      "src": "51661:13:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "51651:23:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81547,
                  "nodeType": "IfStatement",
                  "src": "51647:416:155",
                  "trueBody": {
                    "id": 81546,
                    "nodeType": "Block",
                    "src": "51676:387:155",
                    "statements": [
                      {
                        "assignments": [
                          81524
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 81524,
                            "mutability": "mutable",
                            "name": "_yieldVaultShares",
                            "nameLocation": "51806:17:155",
                            "nodeType": "VariableDeclaration",
                            "scope": 81546,
                            "src": "51798:25:155",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 81523,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "51798:7:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 81531,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 81529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 81527,
                                "name": "_assets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81507,
                                "src": "51853:7:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 81528,
                                "name": "_latentAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81511,
                                "src": "51863:13:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "51853:23:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 81525,
                              "name": "yieldVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79519,
                              "src": "51826:10:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC4626_$48611",
                                "typeString": "contract IERC4626"
                              }
                            },
                            "id": 81526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "51837:15:155",
                            "memberName": "previewWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48570,
                            "src": "51826:26:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 81530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "51826:51:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "51798:79:155"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 81535,
                              "name": "_yieldVaultShares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81524,
                              "src": "52004:17:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 81538,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "52031:4:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                    "typeString": "contract PrizeVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                    "typeString": "contract PrizeVault"
                                  }
                                ],
                                "id": 81537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "52023:7:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 81536,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "52023:7:155",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 81539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "52023:13:155",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 81542,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "52046:4:155",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                    "typeString": "contract PrizeVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PrizeVault_$81605",
                                    "typeString": "contract PrizeVault"
                                  }
                                ],
                                "id": 81541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "52038:7:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 81540,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "52038:7:155",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 81543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "52038:13:155",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 81532,
                              "name": "yieldVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79519,
                              "src": "51986:10:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC4626_$48611",
                                "typeString": "contract IERC4626"
                              }
                            },
                            "id": 81534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "51997:6:155",
                            "memberName": "redeem",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48610,
                            "src": "51986:17:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (uint256,address,address) external returns (uint256)"
                            }
                          },
                          "id": 81544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "51986:66:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 81545,
                        "nodeType": "ExpressionStatement",
                        "src": "51986:66:155"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 81553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81548,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81505,
                      "src": "52076:9:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 81551,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "52097:4:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PrizeVault_$81605",
                            "typeString": "contract PrizeVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PrizeVault_$81605",
                            "typeString": "contract PrizeVault"
                          }
                        ],
                        "id": 81550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "52089:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 81549,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "52089:7:155",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 81552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "52089:13:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "52076:26:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81562,
                  "nodeType": "IfStatement",
                  "src": "52072:96:155",
                  "trueBody": {
                    "id": 81561,
                    "nodeType": "Block",
                    "src": "52104:64:155",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 81557,
                              "name": "_receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81505,
                              "src": "52138:9:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 81558,
                              "name": "_assets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81507,
                              "src": "52149:7:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 81554,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79535,
                              "src": "52118:6:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$49389",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 81556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "52125:12:155",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50285,
                            "src": "52118:19:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$49389_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$49389_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 81559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "52118:39:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81560,
                        "nodeType": "ExpressionStatement",
                        "src": "52118:39:155"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 81503,
              "nodeType": "StructuredDocumentation",
              "src": "51133:180:155",
              "text": "@notice Withdraws assets to the receiver while accounting for rounding errors.\n @param _receiver The receiver of the assets\n @param _assets The assets to withdraw"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "51327:9:155",
            "parameters": {
              "id": 81508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81505,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "51345:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81564,
                  "src": "51337:17:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "51337:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81507,
                  "mutability": "mutable",
                  "name": "_assets",
                  "nameLocation": "51364:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81564,
                  "src": "51356:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "51356:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "51336:36:155"
            },
            "returnParameters": {
              "id": 81509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "51382:0:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 81589,
            "nodeType": "FunctionDefinition",
            "src": "52429:329:155",
            "nodes": [],
            "body": {
              "id": 81588,
              "nodeType": "Block",
              "src": "52498:260:155",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 81572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81570,
                      "name": "_yieldFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81567,
                      "src": "52512:19:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 81571,
                      "name": "MAX_YIELD_FEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79512,
                      "src": "52534:13:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "52512:35:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81579,
                  "nodeType": "IfStatement",
                  "src": "52508:137:155",
                  "trueBody": {
                    "id": 81578,
                    "nodeType": "Block",
                    "src": "52549:96:155",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 81574,
                              "name": "_yieldFeePercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81567,
                              "src": "52599:19:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 81575,
                              "name": "MAX_YIELD_FEE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79512,
                              "src": "52620:13:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 81573,
                            "name": "YieldFeePercentageExceedsMax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79623,
                            "src": "52570:28:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 81576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "52570:64:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81577,
                        "nodeType": "RevertStatement",
                        "src": "52563:71:155"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 81582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81580,
                      "name": "yieldFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79522,
                      "src": "52654:18:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 81581,
                      "name": "_yieldFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81567,
                      "src": "52675:19:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "52654:40:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 81583,
                  "nodeType": "ExpressionStatement",
                  "src": "52654:40:155"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 81585,
                        "name": "_yieldFeePercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81567,
                        "src": "52731:19:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 81584,
                      "name": "YieldFeePercentageSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79548,
                      "src": "52709:21:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 81586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "52709:42:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81587,
                  "nodeType": "EmitStatement",
                  "src": "52704:47:155"
                }
              ]
            },
            "documentation": {
              "id": 81565,
              "nodeType": "StructuredDocumentation",
              "src": "52180:244:155",
              "text": "@notice Set yield fee percentage.\n @dev Yield fee is defined on a scale from `0` to `MAX_YIELD_FEE`, inclusive.\n @dev Emits a `YieldFeePercentageSet` event\n @param _yieldFeePercentage The new yield fee percentage to set"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setYieldFeePercentage",
            "nameLocation": "52438:22:155",
            "parameters": {
              "id": 81568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81567,
                  "mutability": "mutable",
                  "name": "_yieldFeePercentage",
                  "nameLocation": "52468:19:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81589,
                  "src": "52461:26:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 81566,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "52461:6:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "52460:28:155"
            },
            "returnParameters": {
              "id": 81569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "52498:0:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 81604,
            "nodeType": "FunctionDefinition",
            "src": "52926:178:155",
            "nodes": [],
            "body": {
              "id": 81603,
              "nodeType": "Block",
              "src": "52994:110:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 81597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81595,
                      "name": "yieldFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79525,
                      "src": "53004:17:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 81596,
                      "name": "_yieldFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81592,
                      "src": "53024:18:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "53004:38:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 81598,
                  "nodeType": "ExpressionStatement",
                  "src": "53004:38:155"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 81600,
                        "name": "_yieldFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81592,
                        "src": "53078:18:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 81599,
                      "name": "YieldFeeRecipientSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79543,
                      "src": "53057:20:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 81601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "53057:40:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 81602,
                  "nodeType": "EmitStatement",
                  "src": "53052:45:155"
                }
              ]
            },
            "documentation": {
              "id": 81590,
              "nodeType": "StructuredDocumentation",
              "src": "52764:157:155",
              "text": "@notice Set yield fee recipient address.\n @dev Emits a `YieldFeeRecipientSet` event\n @param _yieldFeeRecipient Address of the fee recipient"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setYieldFeeRecipient",
            "nameLocation": "52935:21:155",
            "parameters": {
              "id": 81593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81592,
                  "mutability": "mutable",
                  "name": "_yieldFeeRecipient",
                  "nameLocation": "52965:18:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 81604,
                  "src": "52957:26:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "52957:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "52956:28:155"
            },
            "returnParameters": {
              "id": 81594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "52994:0:155"
            },
            "scope": 81605,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 79488,
              "name": "TwabERC20",
              "nameLocations": [
                "4974:9:155"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 81949,
              "src": "4974:9:155"
            },
            "id": 79489,
            "nodeType": "InheritanceSpecifier",
            "src": "4974:9:155"
          },
          {
            "baseName": {
              "id": 79490,
              "name": "Claimable",
              "nameLocations": [
                "4985:9:155"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 82261,
              "src": "4985:9:155"
            },
            "id": 79491,
            "nodeType": "InheritanceSpecifier",
            "src": "4985:9:155"
          },
          {
            "baseName": {
              "id": 79492,
              "name": "IERC4626",
              "nameLocations": [
                "4996:8:155"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48611,
              "src": "4996:8:155"
            },
            "id": 79493,
            "nodeType": "InheritanceSpecifier",
            "src": "4996:8:155"
          },
          {
            "baseName": {
              "id": 79494,
              "name": "ILiquidationSource",
              "nameLocations": [
                "5006:18:155"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56069,
              "src": "5006:18:155"
            },
            "id": 79495,
            "nodeType": "InheritanceSpecifier",
            "src": "5006:18:155"
          },
          {
            "baseName": {
              "id": 79496,
              "name": "Ownable",
              "nameLocations": [
                "5026:7:155"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 55978,
              "src": "5026:7:155"
            },
            "id": 79497,
            "nodeType": "InheritanceSpecifier",
            "src": "5026:7:155"
          }
        ],
        "canonicalName": "PrizeVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 79487,
          "nodeType": "StructuredDocumentation",
          "src": "899:4052:155",
          "text": "@title  PoolTogether V5 Prize Vault\n @author G9 Software Inc.\n @notice The prize vault takes deposits of an asset and earns yield with the deposits through an underlying yield\n         vault. The yield is then expected to be liquidated and contributed to the prize pool as prize tokens. The\n         depositors of the prize vault will then be eligible to win prizes from the pool. If a prize is won, The \n         permitted claimer contract for the prize vault will claim the prize on behalf of the winner. Depositors\n         can also set custom hooks that are called directly before and after their prize is claimed.\n @dev    Share balances are stored in the TwabController contract.\n @dev    Depositors should always expect to be able to withdraw their full deposit amount and no more as long as\n         global withdrawal limits meet or exceed their balance. However, if the underlying yield source loses\n         assets, depositors will only be able to withdraw a proportional amount of remaining assets based on their\n         share balance and the total debt balance.\n @dev    The prize vault is designed to embody the \"no loss\" spirit of PoolTogether, down to the last wei. Most \n         ERC4626 yield vaults incur small, necessary rounding errors on deposit and withdrawal to ensure the\n         internal accounting cannot be taken advantage of. The prize vault employs two strategies in an attempt\n         to cover these rounding errors with yield to ensure that depositors can withdraw every last wei of their\n         initial deposit:\n             1. The \"dust collection strategy\":\n                Rounding errors are directly related to the exchange rate of the underlying yield vault; the more\n                assets a single yield vault share is worth, the more severe the rounding errors can become. For\n                example, if the exchange rate is 100 assets for 1 yield vault share and we assume 0 decimal\n                precision; if alice deposits 199 assets, the yield vault will round down on the conversion and mint\n                alice 1 share, essentially donating the remaining 99 assets to the yield vault. This behavior can\n                open pathways for exploits in the prize vault since a bad actor could repeatedly make deposits and\n                withdrawals that result in large rounding errors and since the prize vault covers rounding errors\n                with yield, the attacker could withdraw without loss while essentially donating the yield back to\n                the yield vault.\n                To mitigate this issue, the prize vault calculates the amount of yield vault shares that would be\n                minted during a deposit, but mints those shares directly instead, ensuring that only the exact\n                amount of assets needed are sent to the yield vault while keeping the remainder as a latent balance\n                in the prize vault until it can be used in the next deposit or withdraw. An inverse strategy is also\n                used when withdrawing assets from the yield vault. This reduces the possible rounding errors to just\n                1 wei per deposit or withdraw.\n             2. The \"yield buffer\":\n                Since the prize vault can still incur minimal rounding errors from the yield vault, a yield buffer\n                is required to ensure that there is always enough yield reserved to cover the rounding errors on \n                deposits and withdrawals. This buffer should never run dry during normal operating conditions and\n                expected yield rates. If the yield buffer is ever depleted, new deposits will be prevented and the\n                prize vault will enter a lossy withdrawal state where depositors will incur the rounding errors on\n                withdraw.\n @dev    The prize vault does not support underlying yield vaults that take a fee on deposit or withdraw."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          81605,
          55978,
          56069,
          48611,
          82261,
          56009,
          82316,
          81949,
          49561,
          53275,
          48636,
          50249,
          49311,
          50213,
          49389,
          52076
        ],
        "name": "PrizeVault",
        "nameLocation": "4960:10:155",
        "scope": 81606,
        "usedErrors": [
          52163,
          52165,
          79571,
          79574,
          79577,
          79580,
          79583,
          79586,
          79589,
          79592,
          79595,
          79602,
          79609,
          79616,
          79623,
          79630,
          79637,
          79642,
          79649,
          79656,
          79661,
          79668,
          79675,
          79680,
          81788,
          81987,
          81990,
          81993,
          82000,
          82007
        ],
        "usedEvents": [
          48462,
          48474,
          48616,
          49323,
          49332,
          55835,
          55842,
          55986,
          56018,
          79543,
          79548,
          79561,
          79568,
          82274
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 155
}